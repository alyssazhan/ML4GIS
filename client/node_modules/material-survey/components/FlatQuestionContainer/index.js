"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FlatQuestionContainer;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _Card = require("@material-ui/core/Card");

var _Card2 = _interopRequireDefault(_Card);

var _CardHeader = require("@material-ui/core/CardHeader");

var _CardHeader2 = _interopRequireDefault(_CardHeader);

var _CardContent = require("@material-ui/core/CardContent");

var _CardContent2 = _interopRequireDefault(_CardContent);

var _CheckCircle = require("@material-ui/icons/CheckCircle");

var _CheckCircle2 = _interopRequireDefault(_CheckCircle);

var _colors = require("@material-ui/core/colors");

var _styledComponents = require("styled-components");

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _QuestionText = require("../QuestionText");

var _QuestionText2 = _interopRequireDefault(_QuestionText);

var _QuestionContext = require("../QuestionContext");

var _QuestionContext2 = _interopRequireDefault(_QuestionContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const AnimatedIcon = _styledComponents2.default.div`
  transition: 300ms transform, 300ms opacity;
`;
const FadedTitle = _styledComponents2.default.span`
  opacity: 0.6;
`;
const ErrorText = _styledComponents2.default.div`
  color: ${_colors.red[500]};
`;

function FlatQuestionContainer({
  question,
  answered,
  children,
  error: valueError,
  fadedTitle
}) {
  return _react2.default.createElement(_QuestionContext2.default.Consumer, null, ({
    error: contextError,
    noCheckmarks
  } = {}) => {
    const error = valueError ? _react2.default.createElement("div", null, valueError, _react2.default.createElement("br", null), contextError) : contextError;
    return _react2.default.createElement("div", {
      style: {
        position: "relative",
        fontFamily: '"Roboto", sans-serif',
        margin: 10
      }
    }, _react2.default.createElement("div", {
      style: {
        paddingRight: 40
      }
    }, _react2.default.createElement("span", {
      style: {
        fontWeight: "bold",
        color: _colors.grey[800],
        fontSize: 18
      }
    }, question.title || question.name, fadedTitle && _react2.default.createElement(FadedTitle, null, " ", fadedTitle))), _react2.default.createElement("div", {
      style: {
        fontSize: 14,
        color: _colors.grey[600]
      }
    }, question.description, error && _react2.default.createElement(ErrorText, null, error)), _react2.default.createElement("div", {
      style: {
        paddingTop: 20,
        paddingBottom: 20,
        overflowX: "hidden"
      }
    }, children), !answered && question.isRequired && _react2.default.createElement("div", {
      style: {
        position: "absolute",
        right: 26,
        top: 4
      }
    }, _react2.default.createElement(_QuestionText2.default, {
      style: {
        fontSize: 24,
        fontWeight: 800,
        color: _colors.grey[600]
      }
    }, "*")), !noCheckmarks && _react2.default.createElement("div", {
      style: {
        position: "absolute",
        right: 16,
        top: 6
      }
    }, _react2.default.createElement(AnimatedIcon, {
      style: !answered ? {
        transform: "rotate(-45deg) scale(0.8)",
        opacity: 0
      } : {
        transform: "rotate(8deg)",
        opacity: 1
      }
    }, _react2.default.createElement(_CheckCircle2.default, {
      style: {
        width: 36,
        height: 36,
        color: _colors.green[600]
      }
    }))));
  });
}