"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _Radio = require("@material-ui/core/Radio");

var _Radio2 = _interopRequireDefault(_Radio);

var _Button = require("@material-ui/core/Button");

var _Button2 = _interopRequireDefault(_Button);

var _QuestionContainer = require("../QuestionContainer");

var _QuestionContainer2 = _interopRequireDefault(_QuestionContainer);

var _styledComponents = require("styled-components");

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _QuestionText = require("../QuestionText");

var _QuestionText2 = _interopRequireDefault(_QuestionText);

var _TextField = require("@material-ui/core/TextField");

var _TextField2 = _interopRequireDefault(_TextField);

var _Typography = require("@material-ui/core/Typography");

var _Typography2 = _interopRequireDefault(_Typography);

var _colors = require("@material-ui/core/colors");

var _useQuestionAnswer = require("../../hooks/use-question-answer");

var _useQuestionAnswer2 = _interopRequireDefault(_useQuestionAnswer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Row = _styledComponents2.default.div`
  display: flex;
  align-items: center;
  padding-bottom: 10px;
  margin-bottom: 10px;
`;
const Label = (0, _styledComponents2.default)(_Typography2.default)`
  && {
    width: 120px;
    padding-right: 8px;
    font-weight: bold;
    color: ${_colors.grey[800]};
  }
`;

exports.default = ({
  question,
  onChangeAnswer
}) => {
  const [{
    answer,
    error
  }, changeAnswer] = (0, _useQuestionAnswer2.default)(question, onChangeAnswer, {});
  return _react2.default.createElement(_QuestionContainer2.default, {
    question: question,
    error: error,
    answered: answer !== undefined
  }, question.items.map(item => _react2.default.createElement(Row, {
    key: item.name
  }, _react2.default.createElement(Label, null, item.title || item.name), _react2.default.createElement(_TextField2.default, {
    style: {
      flexGrow: 1
    },
    value: answer[item.name] || "",
    onChange: e => changeAnswer({ ...answer,
      [item.name]: e.target.value
    })
  }))));
};