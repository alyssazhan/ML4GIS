"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _QuestionContainer = require("../QuestionContainer");

var _QuestionContainer2 = _interopRequireDefault(_QuestionContainer);

var _styledComponents = require("styled-components");

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _QuestionText = require("../QuestionText");

var _QuestionText2 = _interopRequireDefault(_QuestionText);

var _useQuestionAnswer = require("../../hooks/use-question-answer");

var _useQuestionAnswer2 = _interopRequireDefault(_useQuestionAnswer);

var _reactDropzone = require("react-dropzone");

var _reactDropzone2 = _interopRequireDefault(_reactDropzone);

var _CircularProgress = require("@material-ui/core/CircularProgress");

var _CircularProgress2 = _interopRequireDefault(_CircularProgress);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Box = _styledComponents2.default.div`
  && {
    border: 2px dashed #ccc;
    font-family: Roboto, sans-serif;
    text-align: center;
    padding-top: 20px;
    padding-bottom: 20px;
    cursor: pointer;
  }
`;

exports.default = ({
  question,
  onChangeAnswer,
  onFileUpload
}) => {
  const [{
    answer,
    error
  }, changeAnswer] = (0, _useQuestionAnswer2.default)(question, onChangeAnswer);
  const [uploading, changeUploadingState] = (0, _react.useState)(false);
  const [uploadError, changeUploadError] = (0, _react.useState)(null);
  return _react2.default.createElement(_QuestionContainer2.default, {
    question: question,
    error: uploadError || error,
    answered: answer !== undefined
  }, !uploading ? _react2.default.createElement(_reactDropzone2.default, {
    onDrop: async file => {
      changeUploadError(null);
      changeUploadingState(true);

      try {
        const fileUrl = await onFileUpload(file);
        changeAnswer(fileUrl);
        changeUploadError(null);
      } catch (e) {
        changeUploadError(e.toString());
      }

      changeUploadingState(false);
    }
  }, ({
    getRootProps,
    getInputProps,
    isDragActive
  }) => _react2.default.createElement(Box, getRootProps(), _react2.default.createElement("input", getInputProps()), isDragActive ? _react2.default.createElement("p", null, "Drop file here...") : _react2.default.createElement("div", null, answer ? _react2.default.createElement("p", null, "File successfully uploaded! Click to replace.") : _react2.default.createElement("p", null, "Drag and drop a file here, or click to select file.")))) : _react2.default.createElement("div", {
    style: {
      textAlign: "center"
    }
  }, _react2.default.createElement(_CircularProgress2.default, {
    size: 80
  })));
};