{"ast":null,"code":"import _slicedToArray from \"/Users/yan/Documents/GItHub/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yan/Documents/GItHub/ML4GIS/client/src/pages/Home/Introduction/index.js\";\nimport React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport styles from \"../styles.js\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\"; // const useStyles = theme => (styles)\n\nconst useStyles = makeStyles(styles);\nexport default function Introduction(props) {\n  // constructor(props) {\n  //     super(props);\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        opened = _React$useState2[0],\n        setOpened = _React$useState2[1];\n\n  function toggleBox() {\n    // const { opened } = opened;\n    setOpened({\n      opened: !opened\n    });\n  } // state = {\n  //      opened: false,\n  //      error: null,\n  //      isLoaded: false,\n  //      // intro:null,\n  //  };\n  // this.props = props;\n  // toggleBox = this.toggleBox.bind(this);\n  //  componentDidMount=this.componentDidMount(this);\n  // }\n  // componentDidMount()  {\n  //     function getIntro(data) {\n  //         const intro =data[\"introduction\"]\n  //         return intro\n  //\n  //     }\n  //\n  //     fetch(\"/api\",{ mode: 'cors'})\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 // const intro=getIntro(result[\"setup\"])\n  //                 this.setState({\n  //                     isLoaded: true,\n  //                     // intro:intro,\n  //                 });\n  //                 console.log(\"res is: \", result)\n  //             },\n  //             // Note: it's important to handle errors here\n  //             // instead of a catch() block so that we don't swallow\n  //             // exceptions from actual bugs in components.\n  //             (error) => {\n  //                 this.setState({\n  //                     isLoaded: true,\n  //                     error\n  //                 });\n  //             }\n  //         )\n  // };\n  // render() {\n  //     const {classes} =this.props;\n\n\n  const classes = useStyles();\n\n  const _React$useState3 = React.useState(props),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        children = _React$useState4[0],\n        setChildren = _React$useState4[1];\n\n  const _React$useState5 = React.useState(''),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        title = _React$useState6[0],\n        setTitle = _React$useState6[1]; // let { title, children } = this.props;\n  // const { opened, error, isLoaded ,intro} = this.state;\n\n\n  if (opened) {\n    setTitle('Hide Tutorial'); // title ='Hide Tutorial';\n  } else {\n    // title ='Show Tutorial';\n    setTitle('Show Tutorial');\n  } // if (error) {\n  //     return <div>Error: {error.message}</div>;\n  // } else if (!isLoaded) {\n  //     return <div>Loading...</div>;\n  // } else {\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.introContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    className: classes.jumbotron,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.introTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"Task Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.introContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, props.intro), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    size: \"lg\",\n    onClick: e => toggleBox(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, title)))))); // }\n  // }\n} // export default withStyles(useStyles)(Introduction)","map":{"version":3,"sources":["/Users/yan/Documents/GItHub/ML4GIS/client/src/pages/Home/Introduction/index.js"],"names":["React","Component","Button","styles","Jumbotron","makeStyles","withStyles","useStyles","Introduction","props","useState","opened","setOpened","toggleBox","classes","children","setChildren","title","setTitle","introContainer","jumbotron","introTitle","introContent","intro","buttonTitle","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAAQC,UAAR,QAAyB,0BAAzB,C,CACA;;AAGA,MAAMC,SAAS,GAAGF,UAAU,CAACF,MAAD,CAA5B;AAEA,eAAe,SAASK,YAAT,CAAuBC,KAAvB,EAA6B;AAGxC;AACA;AAJwC,0BAKZT,KAAK,CAACU,QAAN,CAAe,KAAf,CALY;AAAA;AAAA,QAKjCC,MALiC;AAAA,QAKzBC,SALyB;;AAMxC,WAASC,SAAT,GAAqB;AACjB;AACDD,IAAAA,SAAS,CAAC;AACLD,MAAAA,MAAM,EAAE,CAACA;AADJ,KAAD,CAAT;AAGF,GAXuC,CAYrC;AACA;AACA;AACA;AACA;AACA;AACC;AACD;AACA;AAEH;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMG,OAAO,GAAGP,SAAS,EAAzB;;AAxDwC,2BAyDdP,KAAK,CAACU,QAAN,CAAeD,KAAf,CAzDc;AAAA;AAAA,QAyDrCM,QAzDqC;AAAA,QAyD3BC,WAzD2B;;AAAA,2BA0DhBhB,KAAK,CAACU,QAAN,CAAe,EAAf,CA1DgB;AAAA;AAAA,QA0DjCO,KA1DiC;AAAA,QA0D1BC,QA1D0B,wBA4DpC;AACA;;;AAEA,MAAIP,MAAJ,EAAW;AACPO,IAAAA,QAAQ,CAAC,eAAD,CAAR,CADO,CAGP;AACH,GAJD,MAIK;AACD;AACAA,IAAAA,QAAQ,CAAC,eAAD,CAAR;AAEH,GAvEmC,CAwEpC;AACA;AACA;AACA;AACA;;;AACI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAY,IAAA,SAAS,EAAEL,OAAO,CAACM,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEN,OAAO,CAACO,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAG,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMb,KAAK,CAACc,KADZ,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,iBADZ;AAEI,IAAA,IAAI,EAAC,IAFT;AAGI,IAAA,OAAO,EAAEC,CAAC,IAAIZ,SAAS,CAACY,CAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKR,KAJL,CADJ,CADJ,CALJ,CADJ,CADJ,CADJ,CA7EgC,CA4GpC;AACJ;AACH,C,CACD","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport styles from \"../styles.js\"\nimport {Jumbotron} from \"react-bootstrap\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {withStyles} from \"@material-ui/core/styles\";\n// const useStyles = theme => (styles)\n\n\nconst useStyles = makeStyles(styles);\n\nexport default function Introduction (props){\n\n\n    // constructor(props) {\n    //     super(props);\n    const [opened, setOpened] = React.useState(false);\n    function toggleBox() {\n        // const { opened } = opened;\n       setOpened({\n            opened: !opened,\n        });\n    }\n       // state = {\n       //      opened: false,\n       //      error: null,\n       //      isLoaded: false,\n       //      // intro:null,\n       //  };\n        // this.props = props;\n       // toggleBox = this.toggleBox.bind(this);\n       //  componentDidMount=this.componentDidMount(this);\n\n    // }\n\n\n    // componentDidMount()  {\n    //     function getIntro(data) {\n    //         const intro =data[\"introduction\"]\n    //         return intro\n    //\n    //     }\n    //\n    //     fetch(\"/api\",{ mode: 'cors'})\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 // const intro=getIntro(result[\"setup\"])\n    //                 this.setState({\n    //                     isLoaded: true,\n    //                     // intro:intro,\n    //                 });\n    //                 console.log(\"res is: \", result)\n    //             },\n    //             // Note: it's important to handle errors here\n    //             // instead of a catch() block so that we don't swallow\n    //             // exceptions from actual bugs in components.\n    //             (error) => {\n    //                 this.setState({\n    //                     isLoaded: true,\n    //                     error\n    //                 });\n    //             }\n    //         )\n    // };\n    // render() {\n    //     const {classes} =this.props;\n    const classes = useStyles();\nconst [children, setChildren]=React.useState(props);\n    const [title, setTitle]=React.useState('');\n\n        // let { title, children } = this.props;\n        // const { opened, error, isLoaded ,intro} = this.state;\n\n        if (opened){\n            setTitle('Hide Tutorial');\n\n            // title ='Hide Tutorial';\n        }else{\n            // title ='Show Tutorial';\n            setTitle('Show Tutorial');\n\n        }\n        // if (error) {\n        //     return <div>Error: {error.message}</div>;\n        // } else if (!isLoaded) {\n        //     return <div>Loading...</div>;\n        // } else {\n            return (\n                <div>\n                    <div className={classes.introContainer}>\n                        <Jumbotron  className={classes.jumbotron}>\n                            <h1 className={classes.introTitle}>Task Overview</h1>\n                            <p className={classes.introContent}>\n                                { props.intro}\n                            </p>\n                            <p>\n                                <div className={classes.buttonTitle}>\n                                    <Button\n                                        variant=\"outline-primary\"\n                                        size=\"lg\"\n                                        onClick={e => toggleBox(e)}>\n                                        {title}\n                                    </Button>\n                                </div>\n                            </p>\n                        </Jumbotron>\n                    </div>\n\n\n                    {/*{opened && (*/}\n\n                    {/*    <div class=\"boxContent\">*/}\n                    {/*        {children}*/}\n\n                    {/*    </div>*/}\n                    {/*)}*/}\n                </div>\n            );\n        // }\n    // }\n}\n// export default withStyles(useStyles)(Introduction)\n"]},"metadata":{},"sourceType":"module"}