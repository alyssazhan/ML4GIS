{"ast":null,"code":"import MousetrapToReactKeyNamesDictionary from '../../const/MousetrapToReactKeyNamesDictionary';\nimport KeyShorthandDictionary from '../../const/KeyShorthandDictionary';\n/**\n * @typedef {string} KeyName Name of the keyboard key\n */\n\n/**\n * @typedef {string} ReactKeyName Name used by React to refer to key\n */\n\n/**\n * Returns the name for the specified key used by React. Supports translating key aliases\n * used by mousetrap to their counterparts in React\n * @param {KeyName} keyName Name of the key to resolve to the React equivalent\n * @returns {ReactKeyName} Name used by React to refer to the key\n */\n\nfunction standardizeKeyName(keyName) {\n  var _keyName = keyName.toLowerCase();\n\n  return MousetrapToReactKeyNamesDictionary[_keyName] || KeyShorthandDictionary[_keyName] || (keyName.match(/^f\\d+$/) ? keyName.toUpperCase() : keyName);\n}\n\nexport default standardizeKeyName;","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/node_modules/react-hotkeys/es/helpers/parsing-key-maps/standardizeKeyName.js"],"names":["MousetrapToReactKeyNamesDictionary","KeyShorthandDictionary","standardizeKeyName","keyName","_keyName","toLowerCase","match","toUpperCase"],"mappings":"AAAA,OAAOA,kCAAP,MAA+C,gDAA/C;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,MAAIC,QAAQ,GAAGD,OAAO,CAACE,WAAR,EAAf;;AAEA,SAAOL,kCAAkC,CAACI,QAAD,CAAlC,IAAgDH,sBAAsB,CAACG,QAAD,CAAtE,KAAqFD,OAAO,CAACG,KAAR,CAAc,QAAd,IAA0BH,OAAO,CAACI,WAAR,EAA1B,GAAkDJ,OAAvI,CAAP;AACD;;AAED,eAAeD,kBAAf","sourcesContent":["import MousetrapToReactKeyNamesDictionary from '../../const/MousetrapToReactKeyNamesDictionary';\nimport KeyShorthandDictionary from '../../const/KeyShorthandDictionary';\n/**\n * @typedef {string} KeyName Name of the keyboard key\n */\n\n/**\n * @typedef {string} ReactKeyName Name used by React to refer to key\n */\n\n/**\n * Returns the name for the specified key used by React. Supports translating key aliases\n * used by mousetrap to their counterparts in React\n * @param {KeyName} keyName Name of the key to resolve to the React equivalent\n * @returns {ReactKeyName} Name used by React to refer to the key\n */\n\nfunction standardizeKeyName(keyName) {\n  var _keyName = keyName.toLowerCase();\n\n  return MousetrapToReactKeyNamesDictionary[_keyName] || KeyShorthandDictionary[_keyName] || (keyName.match(/^f\\d+$/) ? keyName.toUpperCase() : keyName);\n}\n\nexport default standardizeKeyName;"]},"metadata":{},"sourceType":"module"}