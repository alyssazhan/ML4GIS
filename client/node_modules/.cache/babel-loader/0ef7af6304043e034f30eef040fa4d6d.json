{"ast":null,"code":"import { __assign } from \"tslib\";\n/* eslint-disable */\n\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport useSetState from '../useSetState';\nimport parseTimeRanges from './parseTimeRanges';\n\nvar createHTMLMediaHook = function createHTMLMediaHook(tag) {\n  var hook = function hook(elOrProps) {\n    var element;\n    var props;\n\n    if (React.isValidElement(elOrProps)) {\n      element = elOrProps;\n      props = element.props;\n    } else {\n      props = elOrProps;\n    }\n\n    var _a = useSetState({\n      buffered: [],\n      time: 0,\n      duration: 0,\n      paused: true,\n      muted: false,\n      volume: 1\n    }),\n        state = _a[0],\n        setState = _a[1];\n\n    var ref = useRef(null);\n\n    var wrapEvent = function wrapEvent(userEvent, proxyEvent) {\n      return function (event) {\n        try {\n          proxyEvent && proxyEvent(event);\n        } finally {\n          userEvent && userEvent(event);\n        }\n      };\n    };\n\n    var onPlay = function onPlay() {\n      return setState({\n        paused: false\n      });\n    };\n\n    var onPause = function onPause() {\n      return setState({\n        paused: true\n      });\n    };\n\n    var onVolumeChange = function onVolumeChange() {\n      var el = ref.current;\n\n      if (!el) {\n        return;\n      }\n\n      setState({\n        muted: el.muted,\n        volume: el.volume\n      });\n    };\n\n    var onDurationChange = function onDurationChange() {\n      var el = ref.current;\n\n      if (!el) {\n        return;\n      }\n\n      var duration = el.duration,\n          buffered = el.buffered;\n      setState({\n        duration: duration,\n        buffered: parseTimeRanges(buffered)\n      });\n    };\n\n    var onTimeUpdate = function onTimeUpdate() {\n      var el = ref.current;\n\n      if (!el) {\n        return;\n      }\n\n      setState({\n        time: el.currentTime\n      });\n    };\n\n    var onProgress = function onProgress() {\n      var el = ref.current;\n\n      if (!el) {\n        return;\n      }\n\n      setState({\n        buffered: parseTimeRanges(el.buffered)\n      });\n    };\n\n    if (element) {\n      element = React.cloneElement(element, __assign(__assign({\n        controls: false\n      }, props), {\n        ref: ref,\n        onPlay: wrapEvent(props.onPlay, onPlay),\n        onPause: wrapEvent(props.onPause, onPause),\n        onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange),\n        onDurationChange: wrapEvent(props.onDurationChange, onDurationChange),\n        onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate),\n        onProgress: wrapEvent(props.onProgress, onProgress)\n      }));\n    } else {\n      element = React.createElement(tag, __assign(__assign({\n        controls: false\n      }, props), {\n        ref: ref,\n        onPlay: wrapEvent(props.onPlay, onPlay),\n        onPause: wrapEvent(props.onPause, onPause),\n        onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange),\n        onDurationChange: wrapEvent(props.onDurationChange, onDurationChange),\n        onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate),\n        onProgress: wrapEvent(props.onProgress, onProgress)\n      })); // TODO: fix this typing.\n    } // Some browsers return `Promise` on `.play()` and may throw errors\n    // if one tries to execute another `.play()` or `.pause()` while that\n    // promise is resolving. So we prevent that with this lock.\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n\n\n    var lockPlay = false;\n    var controls = {\n      play: function play() {\n        var el = ref.current;\n\n        if (!el) {\n          return undefined;\n        }\n\n        if (!lockPlay) {\n          var promise = el.play();\n          var isPromise = typeof promise === 'object';\n\n          if (isPromise) {\n            lockPlay = true;\n\n            var resetLock = function resetLock() {\n              lockPlay = false;\n            };\n\n            promise.then(resetLock, resetLock);\n          }\n\n          return promise;\n        }\n\n        return undefined;\n      },\n      pause: function pause() {\n        var el = ref.current;\n\n        if (el && !lockPlay) {\n          return el.pause();\n        }\n      },\n      seek: function seek(time) {\n        var el = ref.current;\n\n        if (!el || state.duration === undefined) {\n          return;\n        }\n\n        time = Math.min(state.duration, Math.max(0, time));\n        el.currentTime = time;\n      },\n      volume: function volume(_volume) {\n        var el = ref.current;\n\n        if (!el) {\n          return;\n        }\n\n        _volume = Math.min(1, Math.max(0, _volume));\n        el.volume = _volume;\n        setState({\n          volume: _volume\n        });\n      },\n      mute: function mute() {\n        var el = ref.current;\n\n        if (!el) {\n          return;\n        }\n\n        el.muted = true;\n      },\n      unmute: function unmute() {\n        var el = ref.current;\n\n        if (!el) {\n          return;\n        }\n\n        el.muted = false;\n      }\n    };\n    useEffect(function () {\n      var el = ref.current;\n\n      if (!el) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('useAudio() ref to <audio> element is empty at mount. ' + 'It seem you have not rendered the audio element, which is ' + 'returns as the first argument const [audio] = useAudio(...).');\n        }\n\n        return;\n      }\n\n      setState({\n        volume: el.volume,\n        muted: el.muted,\n        paused: el.paused\n      }); // Start media, if autoPlay requested.\n\n      if (props.autoPlay && el.paused) {\n        controls.play();\n      }\n    }, [props.src]);\n    return [element, state, controls, ref];\n  };\n\n  return hook;\n};\n\nexport default createHTMLMediaHook;","map":{"version":3,"sources":["C:/Users/pccis/Desktop/ML4GIS-develop/ML4GIS-develop/client/node_modules/react-use/esm/util/createHTMLMediaHook.js"],"names":["__assign","React","useEffect","useRef","useSetState","parseTimeRanges","createHTMLMediaHook","tag","hook","elOrProps","element","props","isValidElement","_a","buffered","time","duration","paused","muted","volume","state","setState","ref","wrapEvent","userEvent","proxyEvent","event","onPlay","onPause","onVolumeChange","el","current","onDurationChange","onTimeUpdate","currentTime","onProgress","cloneElement","controls","createElement","lockPlay","play","undefined","promise","isPromise","resetLock","then","pause","seek","Math","min","max","mute","unmute","process","env","NODE_ENV","console","error","autoPlay","src"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\n/* eslint-disable */\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport useSetState from '../useSetState';\nimport parseTimeRanges from './parseTimeRanges';\nvar createHTMLMediaHook = function (tag) {\n    var hook = function (elOrProps) {\n        var element;\n        var props;\n        if (React.isValidElement(elOrProps)) {\n            element = elOrProps;\n            props = element.props;\n        }\n        else {\n            props = elOrProps;\n        }\n        var _a = useSetState({\n            buffered: [],\n            time: 0,\n            duration: 0,\n            paused: true,\n            muted: false,\n            volume: 1,\n        }), state = _a[0], setState = _a[1];\n        var ref = useRef(null);\n        var wrapEvent = function (userEvent, proxyEvent) {\n            return function (event) {\n                try {\n                    proxyEvent && proxyEvent(event);\n                }\n                finally {\n                    userEvent && userEvent(event);\n                }\n            };\n        };\n        var onPlay = function () { return setState({ paused: false }); };\n        var onPause = function () { return setState({ paused: true }); };\n        var onVolumeChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({\n                muted: el.muted,\n                volume: el.volume,\n            });\n        };\n        var onDurationChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            var duration = el.duration, buffered = el.buffered;\n            setState({\n                duration: duration,\n                buffered: parseTimeRanges(buffered),\n            });\n        };\n        var onTimeUpdate = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ time: el.currentTime });\n        };\n        var onProgress = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ buffered: parseTimeRanges(el.buffered) });\n        };\n        if (element) {\n            element = React.cloneElement(element, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) }));\n        }\n        else {\n            element = React.createElement(tag, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) })); // TODO: fix this typing.\n        }\n        // Some browsers return `Promise` on `.play()` and may throw errors\n        // if one tries to execute another `.play()` or `.pause()` while that\n        // promise is resolving. So we prevent that with this lock.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n        var lockPlay = false;\n        var controls = {\n            play: function () {\n                var el = ref.current;\n                if (!el) {\n                    return undefined;\n                }\n                if (!lockPlay) {\n                    var promise = el.play();\n                    var isPromise = typeof promise === 'object';\n                    if (isPromise) {\n                        lockPlay = true;\n                        var resetLock = function () {\n                            lockPlay = false;\n                        };\n                        promise.then(resetLock, resetLock);\n                    }\n                    return promise;\n                }\n                return undefined;\n            },\n            pause: function () {\n                var el = ref.current;\n                if (el && !lockPlay) {\n                    return el.pause();\n                }\n            },\n            seek: function (time) {\n                var el = ref.current;\n                if (!el || state.duration === undefined) {\n                    return;\n                }\n                time = Math.min(state.duration, Math.max(0, time));\n                el.currentTime = time;\n            },\n            volume: function (volume) {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                volume = Math.min(1, Math.max(0, volume));\n                el.volume = volume;\n                setState({ volume: volume });\n            },\n            mute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = true;\n            },\n            unmute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = false;\n            },\n        };\n        useEffect(function () {\n            var el = ref.current;\n            if (!el) {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error('useAudio() ref to <audio> element is empty at mount. ' +\n                        'It seem you have not rendered the audio element, which is ' +\n                        'returns as the first argument const [audio] = useAudio(...).');\n                }\n                return;\n            }\n            setState({\n                volume: el.volume,\n                muted: el.muted,\n                paused: el.paused,\n            });\n            // Start media, if autoPlay requested.\n            if (props.autoPlay && el.paused) {\n                controls.play();\n            }\n        }, [props.src]);\n        return [element, state, controls, ref];\n    };\n    return hook;\n};\nexport default createHTMLMediaHook;\n"]},"metadata":{},"sourceType":"module"}