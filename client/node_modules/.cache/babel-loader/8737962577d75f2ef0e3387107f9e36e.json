{"ast":null,"code":"import _objectSpread from \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\src\\\\pages\\\\Home\\\\annotateComponents\\\\MainLayout\\\\main_MainLayout.js\";\nimport React, { useRef, useCallback } from \"react\";\nimport { makeStyles, styled } from \"@material-ui/core/styles\";\nimport ImageCanvas from \"../ImageCanvas/main_ImageCanvas\";\nimport styles from \"./styles_MainLayout\";\nimport type, { MainLayoutState, Action } from \"./types\";\nimport useKey from \"use-key-hook\";\nimport classnames from \"classnames\";\nimport getActiveImage from \"../reducers/getActiveImage\";\nimport { useDispatchHotkeyHandlers } from \"../ShortcutsManager/main_ShortcutsManager\";\nimport { withHotKeys } from \"react-hotkeys\";\nimport iconDictionary from \"./iconDictionary\";\nimport Workspace from \"react-material-workspace-layout/Workspace\";\nimport useEventCallback from \"use-event-callback\"; // get style from style.js\n\nconst myStyle = makeStyles(styles);\nconst HotkeyDiv = withHotKeys((_ref) => {\n  let hotKeys = _ref.hotKeys,\n      children = _ref.children,\n      divRef = _ref.divRef,\n      props = _objectWithoutProperties(_ref, [\"hotKeys\", \"children\", \"divRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, _objectSpread(_objectSpread({}, hotKeys), props), {\n    ref: divRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }), children);\n});\nexport const MainLayout = ({\n  state,\n  dispatchAction\n}) => {\n  const classes = myStyle();\n  const memoizedActionFns = useRef({});\n\n  const action = (type, ...params) => {\n    const fnKey = \"\".concat(type, \"(\").concat(params.join(\",\"), \")\");\n    if (memoizedActionFns.current[fnKey]) return memoizedActionFns.current[fnKey];\n\n    const fn = (...args) => params.length > 0 ? dispatchAction(_objectSpread({\n      type\n    }, params.reduce((acc, p, i) => (acc[p] = args[i], acc), {}))) : dispatchAction(_objectSpread({\n      type\n    }, args[0]));\n\n    memoizedActionFns.current[fnKey] = fn;\n    return fn;\n  };\n\n  const _getActiveImage = getActiveImage(state),\n        currentImageIndex = _getActiveImage.currentImageIndex,\n        activeImage = _getActiveImage.activeImage;\n\n  let nextImage;\n\n  if (currentImageIndex !== null) {\n    nextImage = state.images[currentImageIndex + 1];\n  }\n\n  useKey(() => dispatchAction({\n    type: \"CANCEL\"\n  }), {\n    detectKeys: [27]\n  });\n  const innerContainerRef = useRef();\n  const hotkeyHandlers = useDispatchHotkeyHandlers({\n    dispatchAction\n  });\n  const refocusOnMouseEvent = useCallback(e => {\n    if (!innerContainerRef.current) return;\n    if (innerContainerRef.current.contains(document.activeElement)) return;\n\n    if (innerContainerRef.current.contains(e.target)) {\n      innerContainerRef.current.focus();\n      e.target.focus();\n    }\n  }, []);\n  const canvas = /*#__PURE__*/React.createElement(ImageCanvas, {\n    key: state.selectedImage,\n    showTags: state.showTags,\n    regionTagList: state.regionTagList,\n    regions: activeImage.regions || [],\n    realSize: activeImage ? activeImage.realSize : undefined,\n    imageSrc: state.annotationType === \"image\" ? activeImage.src : null,\n    pointDistancePrecision: state.pointDistancePrecision,\n    createWithPrimary: state.selectedTool.includes(\"create\"),\n    dragWithPrimary: state.selectedTool === \"pan\",\n    zoomWithPrimary: state.selectedTool === \"zoom\",\n    onMouseMove: action(\"MOUSE_MOVE\"),\n    onMouseDown: action(\"MOUSE_DOWN\"),\n    onMouseUp: action(\"MOUSE_UP\"),\n    onChangeRegion: action(\"CHANGE_REGION\", \"region\"),\n    onBeginRegionEdit: action(\"OPEN_REGION_EDITOR\", \"region\"),\n    onCloseRegionEdit: action(\"CLOSE_REGION_EDITOR\", \"region\"),\n    onDeleteRegion: action(\"DELETE_REGION\", \"region\"),\n    onBeginBoxTransform: action(\"BEGIN_BOX_TRANSFORM\", \"rectangle\", \"directions\"),\n    onBeginMovePolygonPoint: action(\"BEGIN_MOVE_POLYGON_POINT\", \"polygon\", \"pointIndex\"),\n    onAddPolygonPoint: action(\"ADD_POLYGON_POINT\", \"polygon\", \"point\", \"pointIndex\"),\n    onBeginMovePolygon1Point: action(\"BEGIN_MOVE_POLYGON1_POINT\", \"polygon1\", \"point1Index\"),\n    onAddPolygon1Point: action(\"ADD_POLYGON1_POINT\", \"polygon1\", \"point1\", \"point1Index\"),\n    onBeginCircleTransform: action(\"BEGIN_CIRCLE_TRANSFORM\", \"circle\", \"directions\"),\n    onSelectRegion: action(\"SELECT_REGION\", \"region\"),\n    onBeginMovePoint: action(\"BEGIN_MOVE_POINT\", \"point\"),\n    onImageLoaded: action(\"IMAGE_LOADED\", \"image\"),\n    allowComments: state.allowComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  });\n  const onClickIconSidebarItem = useEventCallback(item => {\n    dispatchAction({\n      type: \"SELECT_TOOL\",\n      selectedTool: item.name\n    });\n  });\n  const onClickHeaderItem = useEventCallback(item => {\n    dispatchAction({\n      type: \"HEADER_BUTTON_CLICKED\",\n      buttonName: item.name\n    });\n  });\n  return /*#__PURE__*/React.createElement(HotkeyDiv, {\n    tabIndex: -1,\n    divRef: innerContainerRef,\n    onMouseDown: refocusOnMouseEvent,\n    onMouseOver: refocusOnMouseEvent,\n    allowChanges: true,\n    handlers: hotkeyHandlers,\n    className: classnames(classes.container),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Workspace, {\n    iconDictionary: iconDictionary,\n    headerLeftSide: [activeImage ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.headerTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, activeImage.name) : null].filter(Boolean),\n    headerItems: [{\n      name: \"Prev\"\n    }, {\n      name: \"Next\"\n    }, {\n      name: \"Save\"\n    }].filter(Boolean),\n    onClickHeaderItem: onClickHeaderItem,\n    onClickIconSidebarItem: onClickIconSidebarItem,\n    selectedTools: [state.selectedTool].filter(Boolean),\n    iconSidebarItems: [{\n      name: \"pan\",\n      helperText: \"Drag/Pan (right or middle click)\",\n      alwaysShowing: true\n    }, {\n      name: \"zoom\",\n      helperText: \"Zoom In/Out\",\n      alwaysShowing: true\n    }, {\n      name: \"create-point\",\n      helperText: \"Add Point\"\n    }, {\n      name: \"create-rectangle\",\n      helperText: \"Add Rectangle\"\n    }, {\n      name: \"create-polygon\",\n      helperText: \"Add Polygon\"\n    }, {\n      name: \"create-polygon1\",\n      helperText: \"Add Polygon with Holes\"\n    }, {\n      name: \"create-circle\",\n      helperText: \"Add Ellipse\"\n    }].filter(Boolean).filter(a => a.alwaysShowing || state.enabledTools.includes(a.name)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, canvas));\n};\nexport default MainLayout;","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/src/pages/Home/annotateComponents/MainLayout/main_MainLayout.js"],"names":["React","useRef","useCallback","makeStyles","styled","ImageCanvas","styles","type","MainLayoutState","Action","useKey","classnames","getActiveImage","useDispatchHotkeyHandlers","withHotKeys","iconDictionary","Workspace","useEventCallback","myStyle","HotkeyDiv","hotKeys","children","divRef","props","MainLayout","state","dispatchAction","classes","memoizedActionFns","action","params","fnKey","join","current","fn","args","length","reduce","acc","p","i","currentImageIndex","activeImage","nextImage","images","detectKeys","innerContainerRef","hotkeyHandlers","refocusOnMouseEvent","e","contains","document","activeElement","target","focus","canvas","selectedImage","showTags","regionTagList","regions","realSize","undefined","annotationType","src","pointDistancePrecision","selectedTool","includes","allowComments","onClickIconSidebarItem","item","name","onClickHeaderItem","buttonName","container","headerTitle","filter","Boolean","helperText","alwaysShowing","a","enabledTools"],"mappings":"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","sourcesContent":["\r\nimport React, { useRef, useCallback } from \"react\"\r\nimport { makeStyles, styled } from \"@material-ui/core/styles\"\r\nimport ImageCanvas from \"../ImageCanvas/main_ImageCanvas\"\r\nimport styles from \"./styles_MainLayout\"\r\nimport type, { MainLayoutState, Action } from \"./types\"\r\nimport useKey from \"use-key-hook\"\r\nimport classnames from \"classnames\"\r\nimport getActiveImage from \"../reducers/getActiveImage\"\r\nimport { useDispatchHotkeyHandlers } from \"../ShortcutsManager/main_ShortcutsManager\"\r\nimport { withHotKeys } from \"react-hotkeys\"\r\nimport iconDictionary from \"./iconDictionary\"\r\nimport Workspace from \"react-material-workspace-layout/Workspace\"\r\nimport useEventCallback from \"use-event-callback\"\r\n// get style from style.js\r\n\r\nconst myStyle = makeStyles(styles)\r\n\r\nconst HotkeyDiv = withHotKeys(({ hotKeys, children, divRef, ...props }) => (\r\n  <div {...{ ...hotKeys, ...props }} ref={divRef}>\r\n    {children}\r\n  </div>\r\n))\r\n\r\ntype Props = {\r\n  state: MainLayoutState,\r\n  dispatchAction: (Action) => any,\r\n  onRegionClassAdded: () => {},\r\n}\r\n\r\nexport const MainLayout = ({\r\n  state,\r\n  dispatchAction,\r\n}: Props) => {\r\n  const classes = myStyle()\r\n\r\n  const memoizedActionFns = useRef({})\r\n  const action = (type: string, ...params: Array<string>) => {\r\n    const fnKey = `${type}(${params.join(\",\")})`\r\n    if (memoizedActionFns.current[fnKey])\r\n      return memoizedActionFns.current[fnKey]\r\n\r\n    const fn = (...args: any) =>\r\n      params.length > 0\r\n        ? dispatchAction(\r\n            ({\r\n              type,\r\n              ...params.reduce((acc, p, i) => ((acc[p] = args[i]), acc), {}),\r\n            }: any)\r\n          )\r\n        : dispatchAction({ type, ...args[0] })\r\n    memoizedActionFns.current[fnKey] = fn\r\n    return fn\r\n  }\r\n\r\n  const { currentImageIndex, activeImage } = getActiveImage(state)\r\n  let nextImage\r\n  if (currentImageIndex !== null) {\r\n    nextImage = state.images[currentImageIndex + 1]\r\n  }\r\n\r\n  useKey(() => dispatchAction({ type: \"CANCEL\" }), {\r\n    detectKeys: [27],\r\n  })\r\n\r\n  const innerContainerRef = useRef()\r\n  const hotkeyHandlers = useDispatchHotkeyHandlers({ dispatchAction })\r\n  const refocusOnMouseEvent = useCallback((e) => {\r\n    if (!innerContainerRef.current) return\r\n    if (innerContainerRef.current.contains(document.activeElement)) return\r\n    if (innerContainerRef.current.contains(e.target)) {\r\n      innerContainerRef.current.focus()\r\n      e.target.focus()\r\n    }\r\n  }, [])\r\n\r\n  const canvas = (\r\n    <ImageCanvas\r\n      key={state.selectedImage}\r\n      showTags={state.showTags}\r\n      regionTagList={state.regionTagList}\r\n      regions={\r\n        activeImage.regions || []\r\n      }\r\n      realSize={activeImage ? activeImage.realSize : undefined}\r\n      imageSrc={state.annotationType === \"image\" ? activeImage.src : null}\r\n      pointDistancePrecision={state.pointDistancePrecision}\r\n      createWithPrimary={state.selectedTool.includes(\"create\")}\r\n      dragWithPrimary={state.selectedTool === \"pan\"}\r\n      zoomWithPrimary={state.selectedTool === \"zoom\"}\r\n      onMouseMove={action(\"MOUSE_MOVE\")}\r\n      onMouseDown={action(\"MOUSE_DOWN\")}\r\n      onMouseUp={action(\"MOUSE_UP\")}\r\n      onChangeRegion={action(\"CHANGE_REGION\", \"region\")}\r\n      onBeginRegionEdit={action(\"OPEN_REGION_EDITOR\", \"region\")}\r\n      onCloseRegionEdit={action(\"CLOSE_REGION_EDITOR\", \"region\")}\r\n      onDeleteRegion={action(\"DELETE_REGION\", \"region\")}\r\n      onBeginBoxTransform={action(\"BEGIN_BOX_TRANSFORM\", \"rectangle\", \"directions\")}\r\n      onBeginMovePolygonPoint={action(\r\n        \"BEGIN_MOVE_POLYGON_POINT\",\r\n        \"polygon\",\r\n        \"pointIndex\"\r\n      )}\r\n      onAddPolygonPoint={action(\r\n        \"ADD_POLYGON_POINT\",\r\n        \"polygon\",\r\n        \"point\",\r\n        \"pointIndex\"\r\n      )}\r\n      onBeginMovePolygon1Point={action(\r\n          \"BEGIN_MOVE_POLYGON1_POINT\",\r\n          \"polygon1\",\r\n          \"point1Index\"\r\n      )}\r\n      onAddPolygon1Point={action(\r\n          \"ADD_POLYGON1_POINT\",\r\n          \"polygon1\",\r\n          \"point1\",\r\n          \"point1Index\"\r\n      )}\r\n      onBeginCircleTransform={action(\r\n          \"BEGIN_CIRCLE_TRANSFORM\",\r\n          \"circle\",\r\n          \"directions\"\r\n      )}\r\n      onSelectRegion={action(\"SELECT_REGION\", \"region\")}\r\n      onBeginMovePoint={action(\"BEGIN_MOVE_POINT\", \"point\")}\r\n      onImageLoaded={action(\"IMAGE_LOADED\", \"image\")}\r\n      allowComments={state.allowComments}\r\n    />\r\n  )\r\n\r\n  const onClickIconSidebarItem = useEventCallback((item) => {\r\n    dispatchAction({ type: \"SELECT_TOOL\", selectedTool: item.name })\r\n  })\r\n\r\n  const onClickHeaderItem = useEventCallback((item) => {\r\n    dispatchAction({ type: \"HEADER_BUTTON_CLICKED\", buttonName: item.name })\r\n  })\r\n  return (\r\n        <HotkeyDiv\r\n          tabIndex={-1}\r\n          divRef={innerContainerRef}\r\n          onMouseDown={refocusOnMouseEvent}\r\n          onMouseOver={refocusOnMouseEvent}\r\n          allowChanges\r\n          handlers={hotkeyHandlers}\r\n          className={classnames(\r\n            classes.container,\r\n\r\n          )}\r\n        >\r\n          <Workspace\r\n            iconDictionary={iconDictionary}\r\n            headerLeftSide={[\r\n               activeImage ? (\r\n                <div className={classes.headerTitle}>{activeImage.name}</div>\r\n              ) : null,\r\n            ].filter(Boolean)}\r\n            headerItems={[\r\n              { name: \"Prev\" },\r\n              { name: \"Next\" },\r\n              { name: \"Save\" },\r\n            ].filter(Boolean)}\r\n            onClickHeaderItem={onClickHeaderItem}\r\n            onClickIconSidebarItem={onClickIconSidebarItem}\r\n            selectedTools={[\r\n              state.selectedTool,\r\n            ].filter(Boolean)}\r\n            iconSidebarItems={[\r\n              {\r\n                name: \"pan\",\r\n                helperText:\r\n                  \"Drag/Pan (right or middle click)\",\r\n                alwaysShowing: true,\r\n              },\r\n              {\r\n                name: \"zoom\",\r\n                helperText:\r\n                  \"Zoom In/Out\",\r\n                alwaysShowing: true,\r\n              },\r\n              {\r\n                name: \"create-point\",\r\n                helperText: \"Add Point\" ,\r\n              },\r\n              {\r\n                name: \"create-rectangle\",\r\n                helperText:\r\n                  \"Add Rectangle\" ,\r\n              },\r\n              {\r\n                name: \"create-polygon\",\r\n                helperText: \"Add Polygon\",\r\n              },\r\n              {\r\n                name: \"create-polygon1\",\r\n                helperText: \"Add Polygon with Holes\",\r\n              },\r\n              {\r\n                name: \"create-circle\",\r\n                helperText: \"Add Ellipse\",\r\n              },\r\n\r\n            ]\r\n              .filter(Boolean)\r\n              .filter(\r\n                (a) => a.alwaysShowing || state.enabledTools.includes(a.name)\r\n              )}\r\n\r\n          >\r\n            {canvas}\r\n          </Workspace>\r\n        </HotkeyDiv>\r\n  )\r\n}\r\n\r\nexport default MainLayout\r\n"]},"metadata":{},"sourceType":"module"}