{"ast":null,"code":"import _objectSpread from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yan/Documents/proj/ML4GIS/client/src/annotateComponents/ImageCanvas/index.js\";\nimport React, { useRef, useState, useLayoutEffect, useEffect, useMemo } from \"react\"; // import type { Node } from \"react\"\n\nimport { Matrix } from \"transformation-matrix-js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\"; // import PreventScrollToParents from \"../PreventScrollToParents\"\n\nimport useWindowSize from \"../hooks/use-window-size.js\";\nimport useMouse from \"./use-mouse\";\nimport useProjectRegionBox from \"./use-project-box\";\nimport useExcludePattern from \"../hooks/use-exclude-pattern\";\nimport { useRafState } from \"react-use\";\nimport RegionTags from \"../RegionTags\"; // import RegionLabel from \"../RegionLabel\"\n\nimport RegionSelectAndTransformBoxes from \"../RegionSelectAndTransformBoxes\";\nimport ImageCanvasBackground from \"./background\";\nimport useEventCallback from \"use-event-callback\";\nimport RegionShapes from \"../RegionShapes\";\nconst useStyles = makeStyles(styles);\n\nconst getDefaultMat = (allowedArea = null, {\n  iw,\n  ih\n} = {}) => {\n  let mat = Matrix.from(1, 0, 0, 1, -10, -10);\n\n  if (allowedArea && iw) {\n    mat = mat.translate(allowedArea.x * iw, allowedArea.y * ih).scaleU(allowedArea.w + 0.05);\n  }\n\n  return mat;\n};\n\nexport const ImageCanvas = ({\n  regions,\n  imageSrc,\n  // showTags,\n  onMouseMove = p => null,\n  onMouseDown = p => null,\n  onMouseUp = p => null,\n  dragWithPrimary = false,\n  zoomWithPrimary = false,\n  createWithPrimary = false,\n  // regionClsList,\n  regionTagList,\n  // showHighlightBox = true,\n  allowedArea,\n  // RegionEditLabel = null,\n  onLoaded,\n  onChangeRegion,\n  onBeginRegionEdit,\n  onCloseRegionEdit,\n  onBeginBoxTransform,\n  onBeginMovePolygonPoint,\n  onAddPolygonPoint,\n  onBeginMoveKeypoint,\n  onSelectRegion,\n  onBeginMovePoint,\n  onDeleteRegion,\n  onRegionClassAdded,\n  zoomOnAllowedArea = true,\n  // modifyingAllowedArea = false,\n  // keypointDefinitions,\n  allowComments\n}) => {\n  const classes = useStyles();\n  const canvasEl = useRef(null);\n  const layoutParams = useRef({});\n\n  const _useRafState = useRafState(false),\n        _useRafState2 = _slicedToArray(_useRafState, 2),\n        dragging = _useRafState2[0],\n        changeDragging = _useRafState2[1];\n\n  const _useRafState3 = useRafState(null),\n        _useRafState4 = _slicedToArray(_useRafState3, 2),\n        zoomStart = _useRafState4[0],\n        changeZoomStart = _useRafState4[1];\n\n  const _useRafState5 = useRafState(null),\n        _useRafState6 = _slicedToArray(_useRafState5, 2),\n        zoomEnd = _useRafState6[0],\n        changeZoomEnd = _useRafState6[1];\n\n  const _useRafState7 = useRafState(getDefaultMat()),\n        _useRafState8 = _slicedToArray(_useRafState7, 2),\n        mat = _useRafState8[0],\n        changeMat = _useRafState8[1];\n\n  const windowSize = useWindowSize();\n\n  const _useMouse = useMouse({\n    canvasEl,\n    dragging,\n    mat,\n    layoutParams,\n    changeMat,\n    zoomStart,\n    zoomEnd,\n    changeZoomStart,\n    changeZoomEnd,\n    changeDragging,\n    zoomWithPrimary,\n    dragWithPrimary,\n    onMouseMove,\n    onMouseDown,\n    onMouseUp\n  }),\n        mouseEvents = _useMouse.mouseEvents,\n        mousePosition = _useMouse.mousePosition;\n\n  useLayoutEffect(() => changeMat(mat.clone()), [windowSize]);\n  const projectRegionBox = useProjectRegionBox({\n    layoutParams,\n    mat\n  });\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        imageDimensions = _useState2[0],\n        changeImageDimensions = _useState2[1];\n\n  const imageLoaded = Boolean(imageDimensions && imageDimensions.naturalWidth);\n  const ImageLoaded = useEventCallback(({\n    naturalWidth,\n    naturalHeight\n  }) => {\n    const dims = {\n      naturalWidth,\n      naturalHeight\n    };\n    if (onLoaded) onLoaded(dims);\n    changeImageDimensions(dims);\n  });\n  const excludePattern = useExcludePattern();\n  const canvas = canvasEl.current;\n\n  if (canvas && imageLoaded) {\n    const clientWidth = canvas.clientWidth,\n          clientHeight = canvas.clientHeight;\n    const fitScale = Math.max(imageDimensions.naturalWidth / (clientWidth - 20), imageDimensions.naturalHeight / (clientHeight - 20));\n    const iw = imageDimensions.naturalWidth / fitScale,\n          ih = imageDimensions.naturalHeight / fitScale;\n    layoutParams.current = {\n      iw,\n      ih,\n      fitScale,\n      canvasWidth: clientWidth,\n      canvasHeight: clientHeight\n    };\n  }\n\n  useEffect(() => {\n    if (!imageLoaded) return;\n    changeMat(getDefaultMat(zoomOnAllowedArea ? allowedArea : null, layoutParams.current)); // eslint-disable-next-line\n  }, [imageLoaded]);\n  useLayoutEffect(() => {\n    if (!imageDimensions) return;\n    const clientWidth = canvas.clientWidth,\n          clientHeight = canvas.clientHeight;\n    canvas.width = clientWidth;\n    canvas.height = clientHeight;\n    const context = canvas.getContext(\"2d\");\n    context.save();\n    context.transform(...mat.clone().inverse().toArray());\n    const _layoutParams$current = layoutParams.current,\n          iw = _layoutParams$current.iw,\n          ih = _layoutParams$current.ih;\n\n    if (allowedArea) {\n      // Pattern to indicate the NOT allowed areas\n      const x = allowedArea.x,\n            y = allowedArea.y,\n            w = allowedArea.w,\n            h = allowedArea.h;\n      context.save();\n      context.globalAlpha = 1;\n      const outer = [[0, 0], [iw, 0], [iw, ih], [0, ih]];\n      const inner = [[x * iw, y * ih], [x * iw + w * iw, y * ih], [x * iw + w * iw, y * ih + h * ih], [x * iw, y * ih + h * ih]];\n      context.moveTo(...outer[0]);\n      outer.forEach(p => context.lineTo(...p));\n      context.lineTo(...outer[0]);\n      context.closePath();\n      inner.reverse();\n      context.moveTo(...inner[0]);\n      inner.forEach(p => context.lineTo(...p));\n      context.lineTo(...inner[0]);\n      context.fillStyle = excludePattern || \"#f00\";\n      context.fill();\n      context.restore();\n    }\n\n    context.restore();\n  });\n  const _layoutParams$current2 = layoutParams.current,\n        iw = _layoutParams$current2.iw,\n        ih = _layoutParams$current2.ih;\n  let zoomBox = !zoomStart || !zoomEnd ? null : _objectSpread(_objectSpread({}, mat.clone().inverse().applyToPoint(zoomStart.x, zoomStart.y)), {}, {\n    w: (zoomEnd.x - zoomStart.x) / mat.a,\n    h: (zoomEnd.y - zoomStart.y) / mat.d\n  });\n\n  if (zoomBox) {\n    if (zoomBox.w < 0) {\n      zoomBox.x += zoomBox.w;\n      zoomBox.w *= -1;\n    }\n\n    if (zoomBox.h < 0) {\n      zoomBox.y += zoomBox.h;\n      zoomBox.h *= -1;\n    }\n  }\n\n  const imagePosition = {\n    topLeft: mat.clone().inverse().applyToPoint(0, 0),\n    bottomRight: mat.clone().inverse().applyToPoint(iw, ih)\n  };\n  const highlightedRegion = useMemo(() => {\n    const highlightedRegions = regions.filter(r => r.highlighted);\n    if (highlightedRegions.length !== 1) return null;\n    return highlightedRegions[0];\n  }, [regions]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      maxHeight: \"calc(100vh - 68px)\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      cursor: createWithPrimary ? \"crosshair\" : dragging ? \"grabbing\" : dragWithPrimary ? \"grab\" : zoomWithPrimary ? mat.a < 1 ? \"zoom-out\" : \"zoom-in\" : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }, imageLoaded && !dragging && /*#__PURE__*/React.createElement(RegionSelectAndTransformBoxes, {\n    key: \"regionSelectAndTransformBoxes\",\n    regions: !allowedArea ? regions : [{\n      type: \"rectangle\",\n      id: \"$$allowed_area\",\n      cls: \"allowed_area\",\n      highlighted: true,\n      x: allowedArea.x,\n      y: allowedArea.y,\n      w: allowedArea.w,\n      h: allowedArea.h,\n      visible: true,\n      color: \"#ff0\"\n    }],\n    mouseEvents: mouseEvents,\n    projectRegionBox: projectRegionBox,\n    dragWithPrimary: dragWithPrimary,\n    createWithPrimary: createWithPrimary,\n    zoomWithPrimary: zoomWithPrimary,\n    onBeginMovePoint: onBeginMovePoint,\n    onSelectRegion: onSelectRegion,\n    layoutParams: layoutParams,\n    mat: mat,\n    onBeginBoxTransform: onBeginBoxTransform,\n    onBeginMovePolygonPoint: onBeginMovePolygonPoint,\n    onBeginMoveKeypoint: onBeginMoveKeypoint,\n    onAddPolygonPoint: onAddPolygonPoint // showHighlightBox={showHighlightBox}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }), imageLoaded && !dragging && /*#__PURE__*/React.createElement(\"div\", {\n    key: \"regionTags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RegionTags, {\n    regions: regions,\n    projectRegionBox: projectRegionBox,\n    mouseEvents: mouseEvents // regionClsList={regionClsList}\n    ,\n    regionTagList: regionTagList,\n    onBeginRegionEdit: onBeginRegionEdit,\n    onChangeRegion: onChangeRegion,\n    onCloseRegionEdit: onCloseRegionEdit,\n    onDeleteRegion: onDeleteRegion,\n    layoutParams: layoutParams,\n    imageSrc: imageSrc // RegionEditLabel={RegionEditLabel}\n    ,\n    onRegionClassAdded: onRegionClassAdded,\n    allowComments: allowComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  })), zoomWithPrimary && zoomBox !== null && /*#__PURE__*/React.createElement(\"div\", {\n    key: \"zoomBox\",\n    style: {\n      position: \"absolute\",\n      zIndex: 1,\n      border: \"1px solid #fff\",\n      pointerEvents: \"none\",\n      left: zoomBox.x,\n      top: zoomBox.y,\n      width: zoomBox.w,\n      height: zoomBox.h\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, mouseEvents, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: {\n      opacity: 0.25\n    },\n    className: classes.canvas,\n    ref: canvasEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RegionShapes // keypointDefinitions={keypointDefinitions}\n  , {\n    imagePosition: imagePosition,\n    regions: regions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImageCanvasBackground, {\n    imagePosition: imagePosition,\n    mouseEvents: mouseEvents,\n    onLoad: ImageLoaded,\n    imageSrc: imageSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.zoomIndicator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }\n  }, (1 / mat.a * 100).toFixed(0), \"%\"));\n};\nexport default ImageCanvas;","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/annotateComponents/ImageCanvas/index.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","useMemo","Matrix","makeStyles","styles","useWindowSize","useMouse","useProjectRegionBox","useExcludePattern","useRafState","RegionTags","RegionSelectAndTransformBoxes","ImageCanvasBackground","useEventCallback","RegionShapes","useStyles","getDefaultMat","allowedArea","iw","ih","mat","from","translate","x","y","scaleU","w","ImageCanvas","regions","imageSrc","onMouseMove","p","onMouseDown","onMouseUp","dragWithPrimary","zoomWithPrimary","createWithPrimary","regionTagList","onLoaded","onChangeRegion","onBeginRegionEdit","onCloseRegionEdit","onBeginBoxTransform","onBeginMovePolygonPoint","onAddPolygonPoint","onBeginMoveKeypoint","onSelectRegion","onBeginMovePoint","onDeleteRegion","onRegionClassAdded","zoomOnAllowedArea","allowComments","classes","canvasEl","layoutParams","dragging","changeDragging","zoomStart","changeZoomStart","zoomEnd","changeZoomEnd","changeMat","windowSize","mouseEvents","mousePosition","clone","projectRegionBox","imageDimensions","changeImageDimensions","imageLoaded","Boolean","naturalWidth","ImageLoaded","naturalHeight","dims","excludePattern","canvas","current","clientWidth","clientHeight","fitScale","Math","max","canvasWidth","canvasHeight","width","height","context","getContext","save","transform","inverse","toArray","h","globalAlpha","outer","inner","moveTo","forEach","lineTo","closePath","reverse","fillStyle","fill","restore","zoomBox","applyToPoint","a","d","imagePosition","topLeft","bottomRight","highlightedRegion","highlightedRegions","filter","r","highlighted","length","maxHeight","position","overflow","cursor","undefined","type","id","cls","visible","color","zIndex","border","pointerEvents","left","top","opacity","zoomIndicator","toFixed"],"mappings":"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","sourcesContent":["\nimport React, {\n  useRef,\n  useState,\n  useLayoutEffect,\n  useEffect,\n  useMemo,\n} from \"react\"\n// import type { Node } from \"react\"\nimport { Matrix } from \"transformation-matrix-js\"\nimport type {\n  Region,\n  Point,\n  Polygon,\n  Rectangle,\n  // Keypoints,\n} from \"./region-tools.js\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport styles from \"./styles\"\n// import PreventScrollToParents from \"../PreventScrollToParents\"\nimport useWindowSize from \"../hooks/use-window-size.js\"\nimport useMouse from \"./use-mouse\"\nimport useProjectRegionBox from \"./use-project-box\"\nimport useExcludePattern from \"../hooks/use-exclude-pattern\"\nimport { useRafState } from \"react-use\"\nimport RegionTags from \"../RegionTags\"\n// import RegionLabel from \"../RegionLabel\"\nimport RegionSelectAndTransformBoxes from \"../RegionSelectAndTransformBoxes\"\nimport ImageCanvasBackground from \"./background\"\nimport useEventCallback from \"use-event-callback\"\nimport RegionShapes from \"../RegionShapes\"\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  regions: Array<Region>,\n  imageSrc?: string,\n  onMouseMove?: ({ x: number, y: number }) => any,\n  onMouseDown?: ({ x: number, y: number }) => any,\n  onMouseUp?: ({ x: number, y: number }) => any,\n  dragWithPrimary?: boolean,\n  zoomWithPrimary?: boolean,\n  createWithPrimary?: boolean,\n  // showTags?: boolean,\n  realSize?: { width: number, height: number, unitName: string },\n  // showMask?: boolean,\n  // showHighlightBox?: boolean,\n  // showPointDistances?: boolean,\n  // pointDistancePrecision?: number,\n  // regionClsList?: Array<string>,\n  regionTagList?: Array<string>,\n  allowedArea?: { x: number, y: number, w: number, h: number },\n  // RegionEditLabel?: Node,\n  // modifyingAllowedArea?: boolean,\n  allowComments?: Boolean,\n  onChangeRegion: (Region) => any,\n  onBeginRegionEdit: (Region) => any,\n  onCloseRegionEdit: (Region) => any,\n  onDeleteRegion: (Region) => any,\n  onBeginBoxTransform: (Rectangle, [number, number]) => any,\n  onBeginMovePolygonPoint: (Polygon, index: number) => any,\n  // onBeginMoveKeypoint: (Keypoints, index: number) => any,\n  onAddPolygonPoint: (Polygon, point: [number, number], index: number) => any,\n  onSelectRegion: (Region) => any,\n  onBeginMovePoint: (Point) => any,\n  onLoaded: ({\n    naturalWidth: number,\n    naturalHeight: number,\n  }) => any,\n  onRegionClassAdded: () => {},\n}\nconst getDefaultMat = (allowedArea = null, { iw, ih } = {}) => {\n  let mat = Matrix.from(1, 0, 0, 1, -10, -10)\n  if (allowedArea && iw) {\n    mat = mat\n      .translate(allowedArea.x * iw, allowedArea.y * ih)\n      .scaleU(allowedArea.w + 0.05)\n  }\n  return mat\n}\n\nexport const ImageCanvas = ({\n  regions,\n  imageSrc,\n  // showTags,\n  onMouseMove = (p) => null,\n  onMouseDown = (p) => null,\n  onMouseUp = (p) => null,\n  dragWithPrimary = false,\n  zoomWithPrimary = false,\n  createWithPrimary = false,\n  // regionClsList,\n  regionTagList,\n  // showHighlightBox = true,\n  allowedArea,\n  // RegionEditLabel = null,\n  onLoaded,\n  onChangeRegion,\n  onBeginRegionEdit,\n  onCloseRegionEdit,\n  onBeginBoxTransform,\n  onBeginMovePolygonPoint,\n  onAddPolygonPoint,\n  onBeginMoveKeypoint,\n  onSelectRegion,\n  onBeginMovePoint,\n  onDeleteRegion,\n  onRegionClassAdded,\n  zoomOnAllowedArea = true,\n  // modifyingAllowedArea = false,\n  // keypointDefinitions,\n  allowComments,\n}: Props) => {\n  const classes = useStyles()\n\n  const canvasEl = useRef(null)\n  const layoutParams = useRef({})\n  const [dragging, changeDragging] = useRafState(false)\n  const [zoomStart, changeZoomStart] = useRafState(null)\n  const [zoomEnd, changeZoomEnd] = useRafState(null)\n  const [mat, changeMat] = useRafState(getDefaultMat())\n  const windowSize = useWindowSize()\n\n  const { mouseEvents, mousePosition } = useMouse({\n    canvasEl,\n    dragging,\n    mat,\n    layoutParams,\n    changeMat,\n    zoomStart,\n    zoomEnd,\n    changeZoomStart,\n    changeZoomEnd,\n    changeDragging,\n    zoomWithPrimary,\n    dragWithPrimary,\n    onMouseMove,\n    onMouseDown,\n    onMouseUp,\n  })\n\n  useLayoutEffect(() => changeMat(mat.clone()), [windowSize])\n\n\n  const projectRegionBox = useProjectRegionBox({ layoutParams, mat })\n\n  const [imageDimensions, changeImageDimensions] = useState()\n  const imageLoaded = Boolean(imageDimensions && imageDimensions.naturalWidth)\n\n  const ImageLoaded = useEventCallback(\n    ({ naturalWidth, naturalHeight}) => {\n      const dims = { naturalWidth, naturalHeight}\n      if (onLoaded) onLoaded(dims)\n      changeImageDimensions(dims)\n\n    }\n  )\n\n  const excludePattern = useExcludePattern()\n\n  const canvas = canvasEl.current\n  if (canvas && imageLoaded) {\n    const { clientWidth, clientHeight } = canvas\n\n    const fitScale = Math.max(\n      imageDimensions.naturalWidth / (clientWidth - 20),\n      imageDimensions.naturalHeight / (clientHeight - 20)\n    )\n\n    const [iw, ih] = [\n      imageDimensions.naturalWidth / fitScale,\n      imageDimensions.naturalHeight / fitScale,\n    ]\n\n    layoutParams.current = {\n      iw,\n      ih,\n      fitScale,\n      canvasWidth: clientWidth,\n      canvasHeight: clientHeight,\n    }\n  }\n\n  useEffect(() => {\n    if (!imageLoaded) return\n    changeMat(\n      getDefaultMat(\n        zoomOnAllowedArea ? allowedArea : null,\n        layoutParams.current\n      )\n    )\n    // eslint-disable-next-line\n  }, [imageLoaded])\n\n  useLayoutEffect(() => {\n    if (!imageDimensions) return\n    const { clientWidth, clientHeight } = canvas\n    canvas.width = clientWidth\n    canvas.height = clientHeight\n    const context = canvas.getContext(\"2d\")\n\n    context.save()\n    context.transform(...mat.clone().inverse().toArray())\n\n    const { iw, ih } = layoutParams.current\n\n    if (allowedArea) {\n      // Pattern to indicate the NOT allowed areas\n      const { x, y, w, h } = allowedArea\n      context.save()\n      context.globalAlpha = 1\n      const outer = [\n        [0, 0],\n        [iw, 0],\n        [iw, ih],\n        [0, ih],\n      ]\n      const inner = [\n        [x * iw, y * ih],\n        [x * iw + w * iw, y * ih],\n        [x * iw + w * iw, y * ih + h * ih],\n        [x * iw, y * ih + h * ih],\n      ]\n      context.moveTo(...outer[0])\n      outer.forEach((p) => context.lineTo(...p))\n      context.lineTo(...outer[0])\n      context.closePath()\n\n      inner.reverse()\n      context.moveTo(...inner[0])\n      inner.forEach((p) => context.lineTo(...p))\n      context.lineTo(...inner[0])\n\n      context.fillStyle = excludePattern || \"#f00\"\n      context.fill()\n\n      context.restore()\n    }\n\n    context.restore()\n  })\n\n  const { iw, ih } = layoutParams.current\n\n  let zoomBox =\n    !zoomStart || !zoomEnd\n      ? null\n      : {\n          ...mat.clone().inverse().applyToPoint(zoomStart.x, zoomStart.y),\n          w: (zoomEnd.x - zoomStart.x) / mat.a,\n          h: (zoomEnd.y - zoomStart.y) / mat.d,\n        }\n  if (zoomBox) {\n    if (zoomBox.w < 0) {\n      zoomBox.x += zoomBox.w\n      zoomBox.w *= -1\n    }\n    if (zoomBox.h < 0) {\n      zoomBox.y += zoomBox.h\n      zoomBox.h *= -1\n    }\n  }\n\n  const imagePosition = {\n    topLeft: mat.clone().inverse().applyToPoint(0, 0),\n    bottomRight: mat.clone().inverse().applyToPoint(iw, ih),\n  }\n\n  const highlightedRegion = useMemo(() => {\n    const highlightedRegions = regions.filter((r) => r.highlighted)\n    if (highlightedRegions.length !== 1) return null\n    return highlightedRegions[0]\n  }, [regions])\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        maxHeight: \"calc(100vh - 68px)\",\n        position: \"relative\",\n        overflow: \"hidden\",\n        cursor: createWithPrimary\n          ? \"crosshair\"\n          : dragging\n          ? \"grabbing\"\n          : dragWithPrimary\n          ? \"grab\"\n          : zoomWithPrimary\n          ? mat.a < 1\n            ? \"zoom-out\"\n            : \"zoom-in\"\n          : undefined,\n      }}\n    >\n      {imageLoaded && !dragging && (\n        <RegionSelectAndTransformBoxes\n          key=\"regionSelectAndTransformBoxes\"\n          regions={\n             !allowedArea\n              ? regions\n              : [\n                  {\n                    type: \"rectangle\",\n                    id: \"$$allowed_area\",\n                    cls: \"allowed_area\",\n                    highlighted: true,\n                    x: allowedArea.x,\n                    y: allowedArea.y,\n                    w: allowedArea.w,\n                    h: allowedArea.h,\n                    visible: true,\n                    color: \"#ff0\",\n                  },\n                ]\n          }\n          mouseEvents={mouseEvents}\n          projectRegionBox={projectRegionBox}\n          dragWithPrimary={dragWithPrimary}\n          createWithPrimary={createWithPrimary}\n          zoomWithPrimary={zoomWithPrimary}\n          onBeginMovePoint={onBeginMovePoint}\n          onSelectRegion={onSelectRegion}\n          layoutParams={layoutParams}\n          mat={mat}\n          onBeginBoxTransform={onBeginBoxTransform}\n          onBeginMovePolygonPoint={onBeginMovePolygonPoint}\n          onBeginMoveKeypoint={onBeginMoveKeypoint}\n          onAddPolygonPoint={onAddPolygonPoint}\n          // showHighlightBox={showHighlightBox}\n        />\n      )}\n      {imageLoaded  && !dragging && (\n        <div key=\"regionTags\">\n          <RegionTags\n            regions={regions}\n            projectRegionBox={projectRegionBox}\n            mouseEvents={mouseEvents}\n            // regionClsList={regionClsList}\n            regionTagList={regionTagList}\n            onBeginRegionEdit={onBeginRegionEdit}\n            onChangeRegion={onChangeRegion}\n            onCloseRegionEdit={onCloseRegionEdit}\n            onDeleteRegion={onDeleteRegion}\n            layoutParams={layoutParams}\n            imageSrc={imageSrc}\n            // RegionEditLabel={RegionEditLabel}\n            onRegionClassAdded={onRegionClassAdded}\n            allowComments={allowComments}\n          />\n       </div>\n      )}\n      {/*{ highlightedRegion && (*/}\n      {/*  <div key=\"topLeftTag\" className={classes.fixedRegionLabel}>*/}\n      {/*    <RegionLabel*/}\n      {/*      disableClose*/}\n      {/*      // allowedClasses={regionClsList}*/}\n      {/*      allowedTags={regionTagList}*/}\n      {/*      onChange={onChangeRegion}*/}\n      {/*      onDelete={onDeleteRegion}*/}\n      {/*      editing*/}\n      {/*      region={highlightedRegion}*/}\n      {/*      imageSrc={imageSrc}*/}\n      {/*      allowComments={allowComments}*/}\n      {/*    />*/}\n      {/*  </div>*/}\n      {/*)}*/}\n\n      {zoomWithPrimary && zoomBox !== null && (\n        <div\n          key=\"zoomBox\"\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            border: \"1px solid #fff\",\n            pointerEvents: \"none\",\n            left: zoomBox.x,\n            top: zoomBox.y,\n            width: zoomBox.w,\n            height: zoomBox.h,\n          }}\n        />\n      )}\n\n      <div\n        style={{ width: \"100%\", height: \"100%\" }}\n        {...mouseEvents}\n      >\n\n        <>\n          <canvas\n            style={{ opacity: 0.25 }}\n            className={classes.canvas}\n            ref={canvasEl}\n          />\n          <RegionShapes\n            // keypointDefinitions={keypointDefinitions}\n            imagePosition={imagePosition}\n            regions={regions}\n          />\n          <ImageCanvasBackground\n            imagePosition={imagePosition}\n            mouseEvents={mouseEvents}\n            onLoad={ImageLoaded}\n            imageSrc={imageSrc}\n          />\n        </>\n      </div>\n      <div className={classes.zoomIndicator}>\n        {((1 / mat.a) * 100).toFixed(0)}%\n      </div>\n    </div>\n  )\n}\n\nexport default ImageCanvas\n"]},"metadata":{},"sourceType":"module"}