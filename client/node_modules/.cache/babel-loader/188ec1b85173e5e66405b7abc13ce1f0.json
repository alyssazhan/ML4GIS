{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\src\\\\pages\\\\Home\\\\annotateComponents\\\\ShortcutsManager\\\\main_ShortcutsManager.js\";\n\nimport React, { useMemo } from \"react\";\nimport { HotKeys } from \"react-hotkeys\";\nexport var defaultHotkeys = [{\n  id: \"zoom_tool\",\n  description: \"Select the Zoom Tool\"\n}, {\n  id: \"create_point\",\n  description: \"Create a point\"\n}, {\n  id: \"create_rectangle\",\n  description: \"Create a rectangle\"\n}, {\n  id: \"pan_tool\",\n  description: \"Select the Pan Tool\"\n}, {\n  id: \"create_polygon\",\n  description: \"Create a Polygon\"\n}, {\n  id: \"create_polygon1\",\n  description: \"Create a Polygon with Holes\"\n}, {\n  id: \"create_circle\",\n  description: \"Create a Ellipse\"\n}, {\n  id: \"save_and_previous_sample\",\n  description: \"Save and go to previous sample\"\n}, {\n  id: \"save_and_next_sample\",\n  description: \"Save and go to next sample\"\n}, {\n  id: \"save_and_exit_sample\",\n  description: \"Save and exit current sample\"\n}, {\n  id: \"exit_sample\",\n  description: \"Exit sample without saving\"\n}, {\n  id: \"delete_region\",\n  description: \"Delete selected region\"\n}, {\n  id: \"undo\",\n  description: \"Undo latest change\"\n}];\nexport var defaultKeyMap = {};\n\nfor (var _i = 0, _defaultHotkeys = defaultHotkeys; _i < _defaultHotkeys.length; _i++) {\n  var _defaultHotkeys$_i = _defaultHotkeys[_i],\n      id = _defaultHotkeys$_i.id,\n      binding = _defaultHotkeys$_i.binding;\n  defaultKeyMap[id] = binding;\n}\n\nexport var useDispatchHotkeyHandlers = function useDispatchHotkeyHandlers(_ref) {\n  var dispatch = _ref.dispatch;\n  var handlers = useMemo(function () {\n    return {\n      zoom_tool: function zoom_tool() {\n        dispatch({\n          type: \"SELECT_TOOL\",\n          selectedTool: \"zoom\"\n        });\n      },\n      create_point: function create_point() {\n        dispatch({\n          type: \"SELECT_TOOL\",\n          selectedTool: \"create-point\"\n        });\n      },\n      create_rectangle: function create_rectangle() {\n        dispatch({\n          type: \"SELECT_TOOL\",\n          selectedTool: \"create-rectangle\"\n        });\n      },\n      pan_tool: function pan_tool() {\n        dispatch({\n          type: \"SELECT_TOOL\",\n          selectedTool: \"pan\"\n        });\n      },\n      create_polygon: function create_polygon() {\n        dispatch({\n          type: \"SELECT_TOOL\",\n          selectedTool: \"create-polygon\"\n        });\n      },\n      create_polygon1: function create_polygon1() {\n        dispatch({\n          type: \"SELECT_TOOL\",\n          selectedTool: \"create-polygon1\"\n        });\n      },\n      create_circle: function create_circle() {\n        dispatch({\n          type: \"SELECT_TOOL\",\n          selectedTool: \"create-circle\"\n        });\n      },\n      save_and_previous_sample: function save_and_previous_sample() {\n        dispatch({\n          type: \"HEADER_BUTTON_CLICKED\",\n          buttonName: \"Prev\"\n        });\n      },\n      save_and_next_sample: function save_and_next_sample() {\n        dispatch({\n          type: \"HEADER_BUTTON_CLICKED\",\n          buttonName: \"Next\"\n        });\n      },\n      save_and_exit_sample: function save_and_exit_sample() {\n        dispatch({\n          type: \"HEADER_BUTTON_CLICKED\",\n          buttonName: \"Save\"\n        });\n      },\n      delete_region: function delete_region() {\n        dispatch({\n          type: \"DELETE_SELECTED_REGION\"\n        });\n      },\n      undo: function undo() {\n        dispatch({\n          type: \"RESTORE_HISTORY\"\n        });\n      }\n    };\n  }, [dispatch]);\n  return handlers;\n};\nexport default (function (_ref2) {\n  var children = _ref2.children,\n      dispatch = _ref2.dispatch;\n  var handlers = useDispatchHotkeyHandlers({\n    dispatch: dispatch\n  });\n  return /*#__PURE__*/React.createElement(HotKeys, {\n    allowChanges: true,\n    handlers: handlers,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, children);\n});","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/src/pages/Home/annotateComponents/ShortcutsManager/main_ShortcutsManager.js"],"names":["React","useMemo","HotKeys","defaultHotkeys","id","description","defaultKeyMap","binding","useDispatchHotkeyHandlers","dispatch","handlers","zoom_tool","type","selectedTool","create_point","create_rectangle","pan_tool","create_polygon","create_polygon1","create_circle","save_and_previous_sample","buttonName","save_and_next_sample","save_and_exit_sample","delete_region","undo","children"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\"\r\nimport { HotKeys } from \"react-hotkeys\"\r\n\r\nexport const defaultHotkeys = [\r\n  {\r\n    id: \"zoom_tool\",\r\n    description: \"Select the Zoom Tool\",\r\n  },\r\n  {\r\n    id: \"create_point\",\r\n    description: \"Create a point\",\r\n  },\r\n  {\r\n    id: \"create_rectangle\",\r\n    description: \"Create a rectangle\",\r\n  },\r\n  {\r\n    id: \"pan_tool\",\r\n    description: \"Select the Pan Tool\",\r\n  },\r\n  {\r\n    id: \"create_polygon\",\r\n    description: \"Create a Polygon\",\r\n  },\r\n  {\r\n    id: \"create_polygon1\",\r\n    description: \"Create a Polygon with Holes\",\r\n  },\r\n  {\r\n    id: \"create_circle\",\r\n    description: \"Create a Ellipse\",\r\n  },\r\n  {\r\n    id: \"save_and_previous_sample\",\r\n    description: \"Save and go to previous sample\",\r\n  },\r\n  {\r\n    id: \"save_and_next_sample\",\r\n    description: \"Save and go to next sample\",\r\n  },\r\n  {\r\n    id: \"save_and_exit_sample\",\r\n    description: \"Save and exit current sample\",\r\n  },\r\n  {\r\n    id: \"exit_sample\",\r\n    description: \"Exit sample without saving\",\r\n  },\r\n  {\r\n    id: \"delete_region\",\r\n    description: \"Delete selected region\",\r\n  },\r\n  {\r\n    id: \"undo\",\r\n    description: \"Undo latest change\",\r\n  },\r\n]\r\nexport const defaultKeyMap = {}\r\nfor (const { id, binding } of defaultHotkeys) defaultKeyMap[id] = binding\r\n\r\nexport const useDispatchHotkeyHandlers = ({ dispatch }) => {\r\n  const handlers = useMemo(\r\n    () => ({\r\n\r\n      zoom_tool: () => {\r\n        dispatch({\r\n          type: \"SELECT_TOOL\",\r\n          selectedTool: \"zoom\",\r\n        })\r\n      },\r\n      create_point: () => {\r\n        dispatch({\r\n          type: \"SELECT_TOOL\",\r\n          selectedTool: \"create-point\",\r\n        })\r\n      },\r\n      create_rectangle: () => {\r\n        dispatch({\r\n          type: \"SELECT_TOOL\",\r\n          selectedTool: \"create-rectangle\",\r\n        })\r\n      },\r\n      pan_tool: () => {\r\n        dispatch({\r\n          type: \"SELECT_TOOL\",\r\n          selectedTool: \"pan\",\r\n        })\r\n      },\r\n      create_polygon: () => {\r\n        dispatch({\r\n          type: \"SELECT_TOOL\",\r\n          selectedTool: \"create-polygon\",\r\n        })\r\n      },\r\n      create_polygon1: () => {\r\n        dispatch({\r\n          type: \"SELECT_TOOL\",\r\n          selectedTool: \"create-polygon1\",\r\n        })\r\n      },\r\n      create_circle: () => {\r\n        dispatch({\r\n          type: \"SELECT_TOOL\",\r\n          selectedTool: \"create-circle\",\r\n        })\r\n      },\r\n\r\n      save_and_previous_sample: () => {\r\n        dispatch({\r\n          type: \"HEADER_BUTTON_CLICKED\",\r\n          buttonName: \"Prev\",\r\n        })\r\n      },\r\n      save_and_next_sample: () => {\r\n        dispatch({\r\n          type: \"HEADER_BUTTON_CLICKED\",\r\n          buttonName: \"Next\",\r\n        })\r\n      },\r\n      save_and_exit_sample: () => {\r\n        dispatch({\r\n          type: \"HEADER_BUTTON_CLICKED\",\r\n          buttonName: \"Save\",\r\n        })\r\n      },\r\n      delete_region: () => {\r\n        dispatch({\r\n          type: \"DELETE_SELECTED_REGION\",\r\n        })\r\n      },\r\n      undo: () => {\r\n        dispatch({\r\n          type: \"RESTORE_HISTORY\",\r\n        })\r\n      },\r\n    }),\r\n    [dispatch]\r\n  )\r\n  return handlers\r\n}\r\n\r\nexport default ({ children, dispatch }) => {\r\n  const handlers = useDispatchHotkeyHandlers({ dispatch })\r\n  return (\r\n    <HotKeys allowChanges handlers={handlers}>\r\n      {children}\r\n    </HotKeys>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}