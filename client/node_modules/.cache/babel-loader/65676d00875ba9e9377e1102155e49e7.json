{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Documents/proj/ML4GIS/client/src/pages/Home/Introduction/index.js\";\nimport React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport styles from \"../styles.js\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport { withStyles } from \"@material-ui/core/styles\"; // var config = require(\"../../../config.json\");\n\nconst useStyles = theme => styles;\n\nclass Introduction extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      function getIntro(data) {\n        const intro = data[\"introduction\"];\n        return intro;\n      }\n\n      fetch(\"/api\", {\n        mode: 'cors'\n      }).then(res => res.json()).then(result => {\n        const intro = getIntro(result[\"setup\"]);\n        this.setState({\n          isLoaded: true,\n          intro: intro\n        });\n        console.log(\"res is: \", result);\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      opened: false,\n      error: null,\n      isLoaded: false,\n      intro: null\n    };\n    this.props = props;\n    this.toggleBox = this.toggleBox.bind(this);\n    this.componentDidMount = this.componentDidMount(this);\n  }\n\n  toggleBox() {\n    const opened = this.state.opened;\n    this.setState({\n      opened: !opened\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    var _this$props = this.props,\n        title = _this$props.title,\n        children = _this$props.children;\n    const _this$state = this.state,\n          opened = _this$state.opened,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          intro = _this$state.intro;\n\n    if (opened) {\n      title = 'Hide Index';\n    } else {\n      title = 'Show Index';\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.introContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: classes.introTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, \"Introduction\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.introContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, intro), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.buttonTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-primary\",\n        size: \"lg\",\n        onClick: this.toggleBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }, title))))), opened && /*#__PURE__*/React.createElement(\"div\", {\n        class: \"boxContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, children));\n    }\n  }\n\n}\n\nexport default withStyles(useStyles)(Introduction);","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/pages/Home/Introduction/index.js"],"names":["React","Component","Button","styles","Jumbotron","withStyles","useStyles","theme","Introduction","constructor","props","componentDidMount","getIntro","data","intro","fetch","mode","then","res","json","result","setState","isLoaded","console","log","error","state","opened","toggleBox","bind","render","classes","title","children","message","introContainer","introTitle","introContent","buttonTitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport styles from \"../styles.js\"\nimport {Jumbotron} from \"react-bootstrap\";\nimport {withStyles} from \"@material-ui/core/styles\";\n// var config = require(\"../../../config.json\");\n\nconst useStyles = theme => (styles)\nclass Introduction extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            opened: false,\n            error: null,\n            isLoaded: false,\n            intro:null,\n        };\n        this.props = props;\n        this.toggleBox = this.toggleBox.bind(this);\n        this.componentDidMount=this.componentDidMount(this);\n\n    }\n\n    toggleBox() {\n        const { opened } = this.state;\n        this.setState({\n            opened: !opened,\n        });\n    }\n\n    componentDidMount = () => {\n        function getIntro(data) {\n            const intro =data[\"introduction\"]\n            return intro\n\n        }\n\n        fetch(\"/api\",{ mode: 'cors'})\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    const intro=getIntro(result[\"setup\"])\n                    this.setState({\n                        isLoaded: true,\n                        intro:intro,\n                    });\n                    console.log(\"res is: \", result)\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    };\n    render() {\n        const {classes} =this.props;\n\n        var { title, children } = this.props;\n        const { opened, error, isLoaded ,intro} = this.state;\n        if (opened){\n            title ='Hide Index';\n        }else{\n            title ='Show Index';\n        }\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div>\n                    <div className={classes.introContainer}>\n                        <Jumbotron>\n                            <h1 className={classes.introTitle}>Introduction</h1>\n                            <p className={classes.introContent}>\n                                { intro}\n                            </p>\n                            <p>\n                                <div className={classes.buttonTitle}>\n                                    <Button\n                                        variant=\"outline-primary\"\n                                        size=\"lg\"\n                                        onClick={this.toggleBox}>\n                                        {title}\n                                    </Button>\n                                </div>\n                            </p>\n                        </Jumbotron>\n                    </div>\n\n\n                    {opened && (\n\n                        <div class=\"boxContent\">\n                            {children}\n\n                        </div>\n                    )}\n                </div>\n            );\n        }\n    }\n}\nexport default withStyles(useStyles)(Introduction)\n"]},"metadata":{},"sourceType":"module"}