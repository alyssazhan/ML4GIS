{"ast":null,"code":"import{setIn,updateIn,asMutable,without}from\"seamless-immutable\";import moment from\"moment\";var typesToSaveWithHistory={BEGIN_BOX_TRANSFORM:\"Transform/Move Box\",BEGIN_MOVE_POINT:\"Move Point\",DELETE_REGION:\"Delete Region\",BEGIN_CIRCLE_TRANSFORM:\"Transform/Move Circle\"};export var saveToHistory=function saveToHistory(state,name){return updateIn(state,[\"history\"],function(h){return[{time:moment().toDate(),state:without(state,\"history\"),name:name}].concat((h||[]).slice(0,9));});};export default(function(reducer){return function(state,action){var prevState=state;var nextState=reducer(state,action);if(action.type===\"RESTORE_HISTORY\"){if(state.history.length>0){return setIn(nextState.history[0].state,[\"history\"],nextState.history.slice(1));}}else{if(prevState!==nextState&&Object.keys(typesToSaveWithHistory).includes(action.type)){return setIn(nextState,[\"history\"],[{time:moment().toDate(),state:without(prevState,\"history\"),name:typesToSaveWithHistory[action.type]||action.type}].concat(nextState.history||[]).slice(0,9));}}return nextState;};});","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/src/pages/Home/annotateComponents/reducers/historyHandler.js"],"names":["setIn","updateIn","asMutable","without","moment","typesToSaveWithHistory","BEGIN_BOX_TRANSFORM","BEGIN_MOVE_POINT","DELETE_REGION","BEGIN_CIRCLE_TRANSFORM","saveToHistory","state","name","h","time","toDate","concat","slice","reducer","action","prevState","nextState","type","history","length","Object","keys","includes"],"mappings":"AAEA,OAASA,KAAT,CAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,OAArC,KAAoD,oBAApD,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,GAAMC,CAAAA,sBAAsB,CAAG,CAC7BC,mBAAmB,CAAE,oBADQ,CAE7BC,gBAAgB,CAAE,YAFW,CAG7BC,aAAa,CAAE,eAHc,CAI7BC,sBAAsB,CAAE,uBAJK,CAA/B,CAOA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAyBC,IAAzB,QAC3BX,CAAAA,QAAQ,CAACU,KAAD,CAAQ,CAAC,SAAD,CAAR,CAAqB,SAACE,CAAD,QAC3B,CACE,CACEC,IAAI,CAAEV,MAAM,GAAGW,MAAT,EADR,CAEEJ,KAAK,CAAER,OAAO,CAACQ,KAAD,CAAQ,SAAR,CAFhB,CAGEC,IAAI,CAAJA,IAHF,CADF,EAMEI,MANF,CAMS,CAACH,CAAC,EAAI,EAAN,EAAUI,KAAV,CAAgB,CAAhB,CAAmB,CAAnB,CANT,CAD2B,EAArB,CADmB,EAAtB,CAWP,eAAe,SAACC,OAAD,CAAa,CAC1B,MAAO,UAACP,KAAD,CAAyBQ,MAAzB,CAA4C,CACjD,GAAMC,CAAAA,SAAS,CAAGT,KAAlB,CACA,GAAMU,CAAAA,SAAS,CAAGH,OAAO,CAACP,KAAD,CAAQQ,MAAR,CAAzB,CAEA,GAAIA,MAAM,CAACG,IAAP,GAAgB,iBAApB,CAAuC,CACrC,GAAIX,KAAK,CAACY,OAAN,CAAcC,MAAd,CAAuB,CAA3B,CAA8B,CAC5B,MAAOxB,CAAAA,KAAK,CACVqB,SAAS,CAACE,OAAV,CAAkB,CAAlB,EAAqBZ,KADX,CAEV,CAAC,SAAD,CAFU,CAGVU,SAAS,CAACE,OAAV,CAAkBN,KAAlB,CAAwB,CAAxB,CAHU,CAAZ,CAKD,CACF,CARD,IAQO,CACL,GACEG,SAAS,GAAKC,SAAd,EACAI,MAAM,CAACC,IAAP,CAAYrB,sBAAZ,EAAoCsB,QAApC,CAA6CR,MAAM,CAACG,IAApD,CAFF,CAGE,CACA,MAAOtB,CAAAA,KAAK,CACVqB,SADU,CAEV,CAAC,SAAD,CAFU,CAGV,CACE,CACEP,IAAI,CAAEV,MAAM,GAAGW,MAAT,EADR,CAEEJ,KAAK,CAAER,OAAO,CAACiB,SAAD,CAAY,SAAZ,CAFhB,CAGER,IAAI,CAAEP,sBAAsB,CAACc,MAAM,CAACG,IAAR,CAAtB,EAAuCH,MAAM,CAACG,IAHtD,CADF,EAOGN,MAPH,CAOUK,SAAS,CAACE,OAAV,EAAqB,EAP/B,EAQGN,KARH,CAQS,CART,CAQY,CARZ,CAHU,CAAZ,CAaD,CACF,CAED,MAAOI,CAAAA,SAAP,CACD,CAlCD,CAmCD,CApCD","sourcesContent":["\r\nimport type { MainLayoutState, Action } from \"../MainLayout/types\"\r\nimport { setIn, updateIn, asMutable, without } from \"seamless-immutable\"\r\nimport moment from \"moment\"\r\n\r\nconst typesToSaveWithHistory = {\r\n  BEGIN_BOX_TRANSFORM: \"Transform/Move Box\",\r\n  BEGIN_MOVE_POINT: \"Move Point\",\r\n  DELETE_REGION: \"Delete Region\",\r\n  BEGIN_CIRCLE_TRANSFORM: \"Transform/Move Circle\",\r\n}\r\n\r\nexport const saveToHistory = (state: MainLayoutState, name: string) =>\r\n  updateIn(state, [\"history\"], (h) =>\r\n    [\r\n      {\r\n        time: moment().toDate(),\r\n        state: without(state, \"history\"),\r\n        name,\r\n      },\r\n    ].concat((h || []).slice(0, 9))\r\n  )\r\n\r\nexport default (reducer) => {\r\n  return (state: MainLayoutState, action: Action) => {\r\n    const prevState = state\r\n    const nextState = reducer(state, action)\r\n\r\n    if (action.type === \"RESTORE_HISTORY\") {\r\n      if (state.history.length > 0) {\r\n        return setIn(\r\n          nextState.history[0].state,\r\n          [\"history\"],\r\n          nextState.history.slice(1)\r\n        )\r\n      }\r\n    } else {\r\n      if (\r\n        prevState !== nextState &&\r\n        Object.keys(typesToSaveWithHistory).includes(action.type)\r\n      ) {\r\n        return setIn(\r\n          nextState,\r\n          [\"history\"],\r\n          [\r\n            {\r\n              time: moment().toDate(),\r\n              state: without(prevState, \"history\"),\r\n              name: typesToSaveWithHistory[action.type] || action.type,\r\n            },\r\n          ]\r\n            .concat(nextState.history || [])\r\n            .slice(0, 9)\r\n        )\r\n      }\r\n    }\r\n\r\n    return nextState\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}