{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Configuration from './lib/config/Configuration';\nimport KeyEventManager from './lib/KeyEventManager';\nimport isEmpty from './utils/collection/isEmpty';\nimport KeyCombinationSerializer from './lib/shared/KeyCombinationSerializer';\nimport backwardsCompatibleContext from './utils/backwardsCompatibleContext';\nimport isUndefined from './utils/isUndefined';\n/**\n * Wraps a React component in a HotKeysEnabled component, which passes down the\n * callbacks and options necessary for React Hotkeys to work as a single prop value,\n * hotkeys. These must be unwrapped and applied to a DOM-mountable element within\n * the wrapped component (e.g. div, span, input, etc) in order for the key events\n * to be recorded.\n *\n * @param {React.ComponentClass} Component - Component class to wrap\n * @param {Object} hotKeysOptions - Options that become the wrapping component's\n *                 default prop values\n * @returns {React.ComponentClass} Wrapped component that is passed all of the React hotkeys\n * props in a single value, hotkeys.\n */\n\nfunction withHotKeys(Component) {\n  var hotKeysOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  function mergeWithOptions(key, props) {\n    return _objectSpread({}, hotKeysOptions[key] || {}, props[key] || {});\n  }\n\n  function getHandlers(props) {\n    return mergeWithOptions('handlers', props);\n  }\n\n  function getKeyMap(props) {\n    return mergeWithOptions('keyMap', props);\n  }\n  /**\n   * Component that listens to key events when one of its children are in focus and\n   * selectively triggers actions (that may be handled by handler functions) when a\n   * sequence of events matches a list of pre-defined sequences or combinations\n   * @class\n   */\n\n\n  var HotKeysEnabled = /*#__PURE__*/function (_PureComponent) {\n    _inherits(HotKeysEnabled, _PureComponent);\n\n    function HotKeysEnabled(props) {\n      var _this;\n\n      _classCallCheck(this, HotKeysEnabled);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(HotKeysEnabled).call(this, props));\n      /**\n       * The focus and blur handlers need access to the current component as 'this'\n       * so they need to be bound to it when the component is instantiated\n       */\n\n      _this._handleFocus = _this._handleFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._handleBlur = _this._handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._handleKeyDown = _this._handleKeyDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._handleKeyPress = _this._handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._handleKeyUp = _this._handleKeyUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._componentIsFocused = _this._componentIsFocused.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._id = KeyEventManager.getInstance().registerKeyMap(props.keyMap);\n      /**\n       * We maintain a separate instance variable to contain context that will be\n       * passed down to descendants of this component so we can have a consistent\n       * reference to the same object, rather than instantiating a new one on each\n       * render, causing unnecessary re-rendering of descendant components that\n       * consume the context.\n       *\n       * @see https://reactjs.org/docs/context.html#caveats\n       */\n\n      _this._childContext = {\n        hotKeysParentId: _this._id\n      };\n      return _this;\n    }\n\n    _createClass(HotKeysEnabled, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            keyMap = _this$props.keyMap,\n            handlers = _this$props.handlers,\n            allowChanges = _this$props.allowChanges,\n            root = _this$props.root,\n            props = _objectWithoutProperties(_this$props, [\"keyMap\", \"handlers\", \"allowChanges\", \"root\"]);\n\n        var hotKeys = {\n          onFocus: this._wrapFunction('onFocus', this._handleFocus),\n          onBlur: this._wrapFunction('onBlur', this._handleBlur),\n          tabIndex: Configuration.option('defaultTabIndex')\n        };\n\n        if (this._shouldBindKeyListeners()) {\n          hotKeys.onKeyDown = this._handleKeyDown;\n          hotKeys.onKeyPress = this._handleKeyPress;\n          hotKeys.onKeyUp = this._handleKeyUp;\n        }\n\n        return React.createElement(Component, _extends({\n          hotKeys: hotKeys\n        }, props));\n      }\n    }, {\n      key: \"_shouldBindKeyListeners\",\n      value: function _shouldBindKeyListeners() {\n        var keyMap = getKeyMap(this.props);\n        return !isEmpty(keyMap) || this.props.root || Configuration.option('enableHardSequences') && this._handlersIncludeHardSequences(keyMap, getHandlers(this.props));\n      }\n    }, {\n      key: \"_handlersIncludeHardSequences\",\n      value: function _handlersIncludeHardSequences(keyMap, handlers) {\n        return Object.keys(handlers).some(function (action) {\n          return !keyMap[action] && KeyCombinationSerializer.isValidKeySerialization(action);\n        });\n      }\n    }, {\n      key: \"_wrapFunction\",\n      value: function _wrapFunction(propName, func) {\n        var _this2 = this;\n\n        if (typeof this.props[propName] === 'function') {\n          return function (event) {\n            _this2.props[propName](event);\n\n            func(event);\n          };\n        } else {\n          return func;\n        }\n      }\n    }, {\n      key: \"_focusTreeIdsPush\",\n      value: function _focusTreeIdsPush(componentId) {\n        if (!this._focusTreeIds) {\n          this._focusTreeIds = [];\n        }\n\n        this._focusTreeIds.push(componentId);\n      }\n    }, {\n      key: \"_focusTreeIdsShift\",\n      value: function _focusTreeIdsShift() {\n        if (this._focusTreeIds) {\n          this._focusTreeIds.shift();\n        }\n      }\n    }, {\n      key: \"_getFocusTreeId\",\n      value: function _getFocusTreeId() {\n        if (this._focusTreeIds) {\n          return this._focusTreeIds[0];\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var keyEventManager = KeyEventManager.getInstance();\n        keyEventManager.reregisterKeyMap(this._id, this.props.keyMap);\n\n        if (this._componentIsFocused() && (this.props.allowChanges || !Configuration.option('ignoreKeymapAndHandlerChangesByDefault'))) {\n          var _this$props2 = this.props,\n              keyMap = _this$props2.keyMap,\n              handlers = _this$props2.handlers;\n          keyEventManager.updateEnabledHotKeys(this._getFocusTreeId(), this._id, keyMap, handlers, this._getComponentOptions());\n        }\n      }\n    }, {\n      key: \"_componentIsFocused\",\n      value: function _componentIsFocused() {\n        return this._focused === true;\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var keyEventManager = KeyEventManager.getInstance();\n        var hotKeysParentId = this.context.hotKeysParentId;\n        keyEventManager.registerComponentMount(this._id, hotKeysParentId);\n      }\n      /**\n       * Handles when the component gains focus by calling onFocus prop, if defined, and\n       * registering itself with the KeyEventManager\n       * @private\n       */\n\n    }, {\n      key: \"_handleFocus\",\n      value: function _handleFocus() {\n        if (this.props.onFocus) {\n          var _this$props3;\n\n          (_this$props3 = this.props).onFocus.apply(_this$props3, arguments);\n        }\n\n        var focusTreeId = KeyEventManager.getInstance().enableHotKeys(this._id, getKeyMap(this.props), getHandlers(this.props), this._getComponentOptions());\n\n        if (!isUndefined(focusTreeId)) {\n          /**\n           * focusTreeId should never normally be undefined, but this return state is\n           * used to indicate that a component with the same componentId has already\n           * registered as focused/enabled (again, a condition that should not normally\n           * occur, but apparently can for as-yet unknown reasons).\n           *\n           * @see https://github.com/greena13/react-hotkeys/issues/173\n           */\n          this._focusTreeIdsPush(focusTreeId);\n        }\n\n        this._focused = true;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var keyEventManager = KeyEventManager.getInstance();\n        keyEventManager.deregisterKeyMap(this._id);\n        keyEventManager.registerComponentUnmount();\n\n        this._handleBlur();\n      }\n      /**\n       * Handles when the component loses focus by calling the onBlur prop, if defined\n       * and removing itself from the KeyEventManager\n       * @private\n       */\n\n    }, {\n      key: \"_handleBlur\",\n      value: function _handleBlur() {\n        if (this.props.onBlur) {\n          var _this$props4;\n\n          (_this$props4 = this.props).onBlur.apply(_this$props4, arguments);\n        }\n\n        var retainCurrentFocusTreeId = KeyEventManager.getInstance().disableHotKeys(this._getFocusTreeId(), this._id);\n\n        if (!retainCurrentFocusTreeId) {\n          this._focusTreeIdsShift();\n        }\n\n        this._focused = false;\n      }\n      /**\n       * Delegates handing the keydown event to the KeyEventManager\n       * @param {KeyboardEvent} event Key board event containing key name and state\n       * @private\n       */\n\n    }, {\n      key: \"_handleKeyDown\",\n      value: function _handleKeyDown(event) {\n        var discardFocusTreeId = KeyEventManager.getInstance().handleKeydown(event, this._getFocusTreeId(), this._id, this._getEventOptions());\n\n        if (discardFocusTreeId) {\n          this._focusTreeIdsShift();\n        }\n      }\n      /**\n       * Delegates handing the keypress event to the KeyEventManager\n       * @param {KeyboardEvent} event Key board event containing key name and state\n       * @private\n       */\n\n    }, {\n      key: \"_handleKeyPress\",\n      value: function _handleKeyPress(event) {\n        var discardFocusTreeId = KeyEventManager.getInstance().handleKeyPress(event, this._getFocusTreeId(), this._id, this._getEventOptions());\n\n        if (discardFocusTreeId) {\n          this._focusTreeIdsShift();\n        }\n      }\n      /**\n       * Delegates handing the keyup event to the KeyEventManager\n       * @param {KeyboardEvent} event Key board event containing key name and state\n       * @private\n       */\n\n    }, {\n      key: \"_handleKeyUp\",\n      value: function _handleKeyUp(event) {\n        var discardFocusTreeId = KeyEventManager.getInstance().handleKeyUp(event, this._getFocusTreeId(), this._id, this._getEventOptions());\n\n        if (discardFocusTreeId) {\n          this._focusTreeIdsShift();\n        }\n      }\n    }, {\n      key: \"_getComponentOptions\",\n      value: function _getComponentOptions() {\n        return {\n          defaultKeyEvent: Configuration.option('defaultKeyEvent')\n        };\n      }\n    }, {\n      key: \"_getEventOptions\",\n      value: function _getEventOptions() {\n        return {\n          ignoreEventsCondition: Configuration.option('ignoreEventsCondition')\n        };\n      }\n    }]);\n\n    return HotKeysEnabled;\n  }(PureComponent);\n\n  _defineProperty(HotKeysEnabled, \"propTypes\", {\n    /**\n     * A unique key to associate with KeyEventMatchers that allows associating handler\n     * functions at a later stage\n     * @typedef {string} ActionName\n     */\n\n    /**\n     * Name of a key event\n     * @typedef {'keyup'|'keydown'|'keypress'} KeyEventName\n     */\n\n    /**\n     * A string or list of strings, that represent a sequence of one or more keys\n     * @typedef {String | Array.<String>} MouseTrapKeySequence\n     * @see {@link https://craig.is/killing/mice} for support key sequences\n     */\n\n    /**\n     * Options for the mapping of a key sequence and event\n     * @typedef {Object} KeyEventOptions\n     * @property {MouseTrapKeySequence} sequence - The key sequence required to satisfy a\n     *           KeyEventDescription\n     * @property {KeyEventName} action - The keyboard state required to satisfy a\n     *           KeyEventDescription\n     * @property {string} name - The name of the action, to be displayed to the end user\n     * @property {string} description - A description of the action, to be displayed to\n     *           the end user\n     * @property {string} group - A group the action belongs to, to aid in showing similar\n     *           actions to the user\n     */\n\n    /**\n     * A description of key sequence of one or more key combinations\n     * @typedef {MouseTrapKeySequence|KeyEventOptions|Array.<MouseTrapKeySequence>} KeyEventDescription\n     */\n\n    /**\n     * A mapping from ActionName to KeyEventDescription\n     * @typedef {Object.<ActionName, KeyEventDescription>} KeyMap\n     */\n\n    /**\n     * A map from action names to Mousetrap or Browser key sequences\n     * @type {KeyMap}\n     */\n    keyMap: PropTypes.object,\n\n    /**\n     * A map from action names to event handler functions\n     * @typedef {Object.<ActionName, Function>} HandlersMap\n     */\n\n    /**\n     * A map from action names to event handler functions\n     * @type {HandlersMap}\n     */\n    handlers: PropTypes.object,\n\n    /**\n     * Function to call when this component gains focus in the browser\n     * @type {function}\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Function to call when this component loses focus in the browser\n     * @type {function}\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * Whether the keyMap or handlers are permitted to change after the\n     * component mounts. If false, changes to the keyMap and handlers\n     * props will be ignored\n     */\n    allowChanges: PropTypes.bool,\n\n    /**\n     * Whether this is the root HotKeys node - this enables some special behaviour\n     */\n    root: PropTypes.bool\n  });\n\n  return backwardsCompatibleContext(HotKeysEnabled, {\n    deprecatedAPI: {\n      contextTypes: {\n        hotKeysParentId: PropTypes.number\n      },\n      childContextTypes: {\n        hotKeysParentId: PropTypes.number\n      }\n    },\n    newAPI: {\n      contextType: {\n        hotKeysParentId: undefined\n      }\n    }\n  });\n}\n\nexport default withHotKeys;","map":{"version":3,"sources":["/Users/yan/Documents/GItHub/ML4GIS/client/node_modules/react-hotkeys/es/withHotKeys.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","ReferenceError","_objectSpread","ownKeys","concat","filter","sym","getOwnPropertyDescriptor","forEach","_defineProperty","PropTypes","React","PureComponent","Configuration","KeyEventManager","isEmpty","KeyCombinationSerializer","backwardsCompatibleContext","isUndefined","withHotKeys","Component","hotKeysOptions","undefined","mergeWithOptions","getHandlers","getKeyMap","HotKeysEnabled","_PureComponent","_this","_handleFocus","bind","_handleBlur","_handleKeyDown","_handleKeyPress","_handleKeyUp","_componentIsFocused","_id","getInstance","registerKeyMap","keyMap","_childContext","hotKeysParentId","render","_this$props","handlers","allowChanges","root","hotKeys","onFocus","_wrapFunction","onBlur","tabIndex","option","_shouldBindKeyListeners","onKeyDown","onKeyPress","onKeyUp","createElement","_handlersIncludeHardSequences","some","action","isValidKeySerialization","propName","func","_this2","event","_focusTreeIdsPush","componentId","_focusTreeIds","push","_focusTreeIdsShift","shift","_getFocusTreeId","componentDidUpdate","keyEventManager","reregisterKeyMap","_this$props2","updateEnabledHotKeys","_getComponentOptions","_focused","componentDidMount","context","registerComponentMount","_this$props3","focusTreeId","enableHotKeys","componentWillUnmount","deregisterKeyMap","registerComponentUnmount","_this$props4","retainCurrentFocusTreeId","disableHotKeys","discardFocusTreeId","handleKeydown","_getEventOptions","handleKeyPress","handleKeyUp","defaultKeyEvent","ignoreEventsCondition","object","bool","deprecatedAPI","contextTypes","number","childContextTypes","newAPI","contextType"],"mappings":"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","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Configuration from './lib/config/Configuration';\nimport KeyEventManager from './lib/KeyEventManager';\nimport isEmpty from './utils/collection/isEmpty';\nimport KeyCombinationSerializer from './lib/shared/KeyCombinationSerializer';\nimport backwardsCompatibleContext from './utils/backwardsCompatibleContext';\nimport isUndefined from './utils/isUndefined';\n/**\n * Wraps a React component in a HotKeysEnabled component, which passes down the\n * callbacks and options necessary for React Hotkeys to work as a single prop value,\n * hotkeys. These must be unwrapped and applied to a DOM-mountable element within\n * the wrapped component (e.g. div, span, input, etc) in order for the key events\n * to be recorded.\n *\n * @param {React.ComponentClass} Component - Component class to wrap\n * @param {Object} hotKeysOptions - Options that become the wrapping component's\n *                 default prop values\n * @returns {React.ComponentClass} Wrapped component that is passed all of the React hotkeys\n * props in a single value, hotkeys.\n */\n\nfunction withHotKeys(Component) {\n  var hotKeysOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  function mergeWithOptions(key, props) {\n    return _objectSpread({}, hotKeysOptions[key] || {}, props[key] || {});\n  }\n\n  function getHandlers(props) {\n    return mergeWithOptions('handlers', props);\n  }\n\n  function getKeyMap(props) {\n    return mergeWithOptions('keyMap', props);\n  }\n  /**\n   * Component that listens to key events when one of its children are in focus and\n   * selectively triggers actions (that may be handled by handler functions) when a\n   * sequence of events matches a list of pre-defined sequences or combinations\n   * @class\n   */\n\n\n  var HotKeysEnabled =\n  /*#__PURE__*/\n  function (_PureComponent) {\n    _inherits(HotKeysEnabled, _PureComponent);\n\n    function HotKeysEnabled(props) {\n      var _this;\n\n      _classCallCheck(this, HotKeysEnabled);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(HotKeysEnabled).call(this, props));\n      /**\n       * The focus and blur handlers need access to the current component as 'this'\n       * so they need to be bound to it when the component is instantiated\n       */\n\n      _this._handleFocus = _this._handleFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._handleBlur = _this._handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._handleKeyDown = _this._handleKeyDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._handleKeyPress = _this._handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._handleKeyUp = _this._handleKeyUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._componentIsFocused = _this._componentIsFocused.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      _this._id = KeyEventManager.getInstance().registerKeyMap(props.keyMap);\n      /**\n       * We maintain a separate instance variable to contain context that will be\n       * passed down to descendants of this component so we can have a consistent\n       * reference to the same object, rather than instantiating a new one on each\n       * render, causing unnecessary re-rendering of descendant components that\n       * consume the context.\n       *\n       * @see https://reactjs.org/docs/context.html#caveats\n       */\n\n      _this._childContext = {\n        hotKeysParentId: _this._id\n      };\n      return _this;\n    }\n\n    _createClass(HotKeysEnabled, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            keyMap = _this$props.keyMap,\n            handlers = _this$props.handlers,\n            allowChanges = _this$props.allowChanges,\n            root = _this$props.root,\n            props = _objectWithoutProperties(_this$props, [\"keyMap\", \"handlers\", \"allowChanges\", \"root\"]);\n\n        var hotKeys = {\n          onFocus: this._wrapFunction('onFocus', this._handleFocus),\n          onBlur: this._wrapFunction('onBlur', this._handleBlur),\n          tabIndex: Configuration.option('defaultTabIndex')\n        };\n\n        if (this._shouldBindKeyListeners()) {\n          hotKeys.onKeyDown = this._handleKeyDown;\n          hotKeys.onKeyPress = this._handleKeyPress;\n          hotKeys.onKeyUp = this._handleKeyUp;\n        }\n\n        return React.createElement(Component, _extends({\n          hotKeys: hotKeys\n        }, props));\n      }\n    }, {\n      key: \"_shouldBindKeyListeners\",\n      value: function _shouldBindKeyListeners() {\n        var keyMap = getKeyMap(this.props);\n        return !isEmpty(keyMap) || this.props.root || Configuration.option('enableHardSequences') && this._handlersIncludeHardSequences(keyMap, getHandlers(this.props));\n      }\n    }, {\n      key: \"_handlersIncludeHardSequences\",\n      value: function _handlersIncludeHardSequences(keyMap, handlers) {\n        return Object.keys(handlers).some(function (action) {\n          return !keyMap[action] && KeyCombinationSerializer.isValidKeySerialization(action);\n        });\n      }\n    }, {\n      key: \"_wrapFunction\",\n      value: function _wrapFunction(propName, func) {\n        var _this2 = this;\n\n        if (typeof this.props[propName] === 'function') {\n          return function (event) {\n            _this2.props[propName](event);\n\n            func(event);\n          };\n        } else {\n          return func;\n        }\n      }\n    }, {\n      key: \"_focusTreeIdsPush\",\n      value: function _focusTreeIdsPush(componentId) {\n        if (!this._focusTreeIds) {\n          this._focusTreeIds = [];\n        }\n\n        this._focusTreeIds.push(componentId);\n      }\n    }, {\n      key: \"_focusTreeIdsShift\",\n      value: function _focusTreeIdsShift() {\n        if (this._focusTreeIds) {\n          this._focusTreeIds.shift();\n        }\n      }\n    }, {\n      key: \"_getFocusTreeId\",\n      value: function _getFocusTreeId() {\n        if (this._focusTreeIds) {\n          return this._focusTreeIds[0];\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var keyEventManager = KeyEventManager.getInstance();\n        keyEventManager.reregisterKeyMap(this._id, this.props.keyMap);\n\n        if (this._componentIsFocused() && (this.props.allowChanges || !Configuration.option('ignoreKeymapAndHandlerChangesByDefault'))) {\n          var _this$props2 = this.props,\n              keyMap = _this$props2.keyMap,\n              handlers = _this$props2.handlers;\n          keyEventManager.updateEnabledHotKeys(this._getFocusTreeId(), this._id, keyMap, handlers, this._getComponentOptions());\n        }\n      }\n    }, {\n      key: \"_componentIsFocused\",\n      value: function _componentIsFocused() {\n        return this._focused === true;\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var keyEventManager = KeyEventManager.getInstance();\n        var hotKeysParentId = this.context.hotKeysParentId;\n        keyEventManager.registerComponentMount(this._id, hotKeysParentId);\n      }\n      /**\n       * Handles when the component gains focus by calling onFocus prop, if defined, and\n       * registering itself with the KeyEventManager\n       * @private\n       */\n\n    }, {\n      key: \"_handleFocus\",\n      value: function _handleFocus() {\n        if (this.props.onFocus) {\n          var _this$props3;\n\n          (_this$props3 = this.props).onFocus.apply(_this$props3, arguments);\n        }\n\n        var focusTreeId = KeyEventManager.getInstance().enableHotKeys(this._id, getKeyMap(this.props), getHandlers(this.props), this._getComponentOptions());\n\n        if (!isUndefined(focusTreeId)) {\n          /**\n           * focusTreeId should never normally be undefined, but this return state is\n           * used to indicate that a component with the same componentId has already\n           * registered as focused/enabled (again, a condition that should not normally\n           * occur, but apparently can for as-yet unknown reasons).\n           *\n           * @see https://github.com/greena13/react-hotkeys/issues/173\n           */\n          this._focusTreeIdsPush(focusTreeId);\n        }\n\n        this._focused = true;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var keyEventManager = KeyEventManager.getInstance();\n        keyEventManager.deregisterKeyMap(this._id);\n        keyEventManager.registerComponentUnmount();\n\n        this._handleBlur();\n      }\n      /**\n       * Handles when the component loses focus by calling the onBlur prop, if defined\n       * and removing itself from the KeyEventManager\n       * @private\n       */\n\n    }, {\n      key: \"_handleBlur\",\n      value: function _handleBlur() {\n        if (this.props.onBlur) {\n          var _this$props4;\n\n          (_this$props4 = this.props).onBlur.apply(_this$props4, arguments);\n        }\n\n        var retainCurrentFocusTreeId = KeyEventManager.getInstance().disableHotKeys(this._getFocusTreeId(), this._id);\n\n        if (!retainCurrentFocusTreeId) {\n          this._focusTreeIdsShift();\n        }\n\n        this._focused = false;\n      }\n      /**\n       * Delegates handing the keydown event to the KeyEventManager\n       * @param {KeyboardEvent} event Key board event containing key name and state\n       * @private\n       */\n\n    }, {\n      key: \"_handleKeyDown\",\n      value: function _handleKeyDown(event) {\n        var discardFocusTreeId = KeyEventManager.getInstance().handleKeydown(event, this._getFocusTreeId(), this._id, this._getEventOptions());\n\n        if (discardFocusTreeId) {\n          this._focusTreeIdsShift();\n        }\n      }\n      /**\n       * Delegates handing the keypress event to the KeyEventManager\n       * @param {KeyboardEvent} event Key board event containing key name and state\n       * @private\n       */\n\n    }, {\n      key: \"_handleKeyPress\",\n      value: function _handleKeyPress(event) {\n        var discardFocusTreeId = KeyEventManager.getInstance().handleKeyPress(event, this._getFocusTreeId(), this._id, this._getEventOptions());\n\n        if (discardFocusTreeId) {\n          this._focusTreeIdsShift();\n        }\n      }\n      /**\n       * Delegates handing the keyup event to the KeyEventManager\n       * @param {KeyboardEvent} event Key board event containing key name and state\n       * @private\n       */\n\n    }, {\n      key: \"_handleKeyUp\",\n      value: function _handleKeyUp(event) {\n        var discardFocusTreeId = KeyEventManager.getInstance().handleKeyUp(event, this._getFocusTreeId(), this._id, this._getEventOptions());\n\n        if (discardFocusTreeId) {\n          this._focusTreeIdsShift();\n        }\n      }\n    }, {\n      key: \"_getComponentOptions\",\n      value: function _getComponentOptions() {\n        return {\n          defaultKeyEvent: Configuration.option('defaultKeyEvent')\n        };\n      }\n    }, {\n      key: \"_getEventOptions\",\n      value: function _getEventOptions() {\n        return {\n          ignoreEventsCondition: Configuration.option('ignoreEventsCondition')\n        };\n      }\n    }]);\n\n    return HotKeysEnabled;\n  }(PureComponent);\n\n  _defineProperty(HotKeysEnabled, \"propTypes\", {\n    /**\n     * A unique key to associate with KeyEventMatchers that allows associating handler\n     * functions at a later stage\n     * @typedef {string} ActionName\n     */\n\n    /**\n     * Name of a key event\n     * @typedef {'keyup'|'keydown'|'keypress'} KeyEventName\n     */\n\n    /**\n     * A string or list of strings, that represent a sequence of one or more keys\n     * @typedef {String | Array.<String>} MouseTrapKeySequence\n     * @see {@link https://craig.is/killing/mice} for support key sequences\n     */\n\n    /**\n     * Options for the mapping of a key sequence and event\n     * @typedef {Object} KeyEventOptions\n     * @property {MouseTrapKeySequence} sequence - The key sequence required to satisfy a\n     *           KeyEventDescription\n     * @property {KeyEventName} action - The keyboard state required to satisfy a\n     *           KeyEventDescription\n     * @property {string} name - The name of the action, to be displayed to the end user\n     * @property {string} description - A description of the action, to be displayed to\n     *           the end user\n     * @property {string} group - A group the action belongs to, to aid in showing similar\n     *           actions to the user\n     */\n\n    /**\n     * A description of key sequence of one or more key combinations\n     * @typedef {MouseTrapKeySequence|KeyEventOptions|Array.<MouseTrapKeySequence>} KeyEventDescription\n     */\n\n    /**\n     * A mapping from ActionName to KeyEventDescription\n     * @typedef {Object.<ActionName, KeyEventDescription>} KeyMap\n     */\n\n    /**\n     * A map from action names to Mousetrap or Browser key sequences\n     * @type {KeyMap}\n     */\n    keyMap: PropTypes.object,\n\n    /**\n     * A map from action names to event handler functions\n     * @typedef {Object.<ActionName, Function>} HandlersMap\n     */\n\n    /**\n     * A map from action names to event handler functions\n     * @type {HandlersMap}\n     */\n    handlers: PropTypes.object,\n\n    /**\n     * Function to call when this component gains focus in the browser\n     * @type {function}\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Function to call when this component loses focus in the browser\n     * @type {function}\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * Whether the keyMap or handlers are permitted to change after the\n     * component mounts. If false, changes to the keyMap and handlers\n     * props will be ignored\n     */\n    allowChanges: PropTypes.bool,\n\n    /**\n     * Whether this is the root HotKeys node - this enables some special behaviour\n     */\n    root: PropTypes.bool\n  });\n\n  return backwardsCompatibleContext(HotKeysEnabled, {\n    deprecatedAPI: {\n      contextTypes: {\n        hotKeysParentId: PropTypes.number\n      },\n      childContextTypes: {\n        hotKeysParentId: PropTypes.number\n      }\n    },\n    newAPI: {\n      contextType: {\n        hotKeysParentId: undefined\n      }\n    }\n  });\n}\n\nexport default withHotKeys;"]},"metadata":{},"sourceType":"module"}