{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Dropdown from './Dropdown';\nimport NavLink from './NavLink';\nvar NavDropdown = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      rootCloseEvent = _ref.rootCloseEvent,\n      menuRole = _ref.menuRole,\n      disabled = _ref.disabled,\n      active = _ref.active,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"className\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\", \"renderMenuOnMount\"]);\n  /* NavItem has no additional logic, it's purely presentational. Can set nav item class here to support \"as\" */\n\n\n  var navItemPrefix = useBootstrapPrefix(undefined, 'nav-item');\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, navItemPrefix)\n  }), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    id: id,\n    eventKey: null,\n    active: active,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    as: NavLink\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nNavDropdown.displayName = 'NavDropdown';\nNavDropdown.Item = Dropdown.Item;\nNavDropdown.ItemText = Dropdown.ItemText;\nNavDropdown.Divider = Dropdown.Divider;\nNavDropdown.Header = Dropdown.Header;\nexport default NavDropdown;","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/node_modules/react-bootstrap/esm/NavDropdown.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","React","useBootstrapPrefix","Dropdown","NavLink","NavDropdown","forwardRef","_ref","ref","id","title","children","bsPrefix","className","rootCloseEvent","menuRole","disabled","active","renderMenuOnMount","props","navItemPrefix","undefined","createElement","Toggle","eventKey","childBsPrefix","as","Menu","role","renderOnMount","displayName","Item","ItemText","Divider","Header"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,IAAIC,WAAW,GAAG,aAAaJ,KAAK,CAACK,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACnE,MAAIC,EAAE,GAAGF,IAAI,CAACE,EAAd;AAAA,MACIC,KAAK,GAAGH,IAAI,CAACG,KADjB;AAAA,MAEIC,QAAQ,GAAGJ,IAAI,CAACI,QAFpB;AAAA,MAGIC,QAAQ,GAAGL,IAAI,CAACK,QAHpB;AAAA,MAIIC,SAAS,GAAGN,IAAI,CAACM,SAJrB;AAAA,MAKIC,cAAc,GAAGP,IAAI,CAACO,cAL1B;AAAA,MAMIC,QAAQ,GAAGR,IAAI,CAACQ,QANpB;AAAA,MAOIC,QAAQ,GAAGT,IAAI,CAACS,QAPpB;AAAA,MAQIC,MAAM,GAAGV,IAAI,CAACU,MARlB;AAAA,MASIC,iBAAiB,GAAGX,IAAI,CAACW,iBAT7B;AAAA,MAUIC,KAAK,GAAGpB,6BAA6B,CAACQ,IAAD,EAAO,CAAC,IAAD,EAAO,OAAP,EAAgB,UAAhB,EAA4B,UAA5B,EAAwC,WAAxC,EAAqD,gBAArD,EAAuE,UAAvE,EAAmF,UAAnF,EAA+F,QAA/F,EAAyG,mBAAzG,CAAP,CAVzC;AAYA;;;AACA,MAAIa,aAAa,GAAGlB,kBAAkB,CAACmB,SAAD,EAAY,UAAZ,CAAtC;AACA,SAAO,aAAapB,KAAK,CAACqB,aAAN,CAAoBnB,QAApB,EAA8BL,QAAQ,CAAC;AACzDU,IAAAA,GAAG,EAAEA;AADoD,GAAD,EAEvDW,KAFuD,EAEhD;AACRN,IAAAA,SAAS,EAAEb,UAAU,CAACa,SAAD,EAAYO,aAAZ;AADb,GAFgD,CAAtC,EAIhB,aAAanB,KAAK,CAACqB,aAAN,CAAoBnB,QAAQ,CAACoB,MAA7B,EAAqC;AACpDd,IAAAA,EAAE,EAAEA,EADgD;AAEpDe,IAAAA,QAAQ,EAAE,IAF0C;AAGpDP,IAAAA,MAAM,EAAEA,MAH4C;AAIpDD,IAAAA,QAAQ,EAAEA,QAJ0C;AAKpDS,IAAAA,aAAa,EAAEb,QALqC;AAMpDc,IAAAA,EAAE,EAAEtB;AANgD,GAArC,EAOdM,KAPc,CAJG,EAWT,aAAaT,KAAK,CAACqB,aAAN,CAAoBnB,QAAQ,CAACwB,IAA7B,EAAmC;AACzDC,IAAAA,IAAI,EAAEb,QADmD;AAEzDc,IAAAA,aAAa,EAAEX,iBAF0C;AAGzDJ,IAAAA,cAAc,EAAEA;AAHyC,GAAnC,EAIrBH,QAJqB,CAXJ,CAApB;AAgBD,CA/B8B,CAA/B;AAgCAN,WAAW,CAACyB,WAAZ,GAA0B,aAA1B;AACAzB,WAAW,CAAC0B,IAAZ,GAAmB5B,QAAQ,CAAC4B,IAA5B;AACA1B,WAAW,CAAC2B,QAAZ,GAAuB7B,QAAQ,CAAC6B,QAAhC;AACA3B,WAAW,CAAC4B,OAAZ,GAAsB9B,QAAQ,CAAC8B,OAA/B;AACA5B,WAAW,CAAC6B,MAAZ,GAAqB/B,QAAQ,CAAC+B,MAA9B;AACA,eAAe7B,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport Dropdown from './Dropdown';\r\nimport NavLink from './NavLink';\r\nvar NavDropdown = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\r\n  var id = _ref.id,\r\n      title = _ref.title,\r\n      children = _ref.children,\r\n      bsPrefix = _ref.bsPrefix,\r\n      className = _ref.className,\r\n      rootCloseEvent = _ref.rootCloseEvent,\r\n      menuRole = _ref.menuRole,\r\n      disabled = _ref.disabled,\r\n      active = _ref.active,\r\n      renderMenuOnMount = _ref.renderMenuOnMount,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"className\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\", \"renderMenuOnMount\"]);\r\n\r\n  /* NavItem has no additional logic, it's purely presentational. Can set nav item class here to support \"as\" */\r\n  var navItemPrefix = useBootstrapPrefix(undefined, 'nav-item');\r\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    className: classNames(className, navItemPrefix)\r\n  }), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\r\n    id: id,\r\n    eventKey: null,\r\n    active: active,\r\n    disabled: disabled,\r\n    childBsPrefix: bsPrefix,\r\n    as: NavLink\r\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Menu, {\r\n    role: menuRole,\r\n    renderOnMount: renderMenuOnMount,\r\n    rootCloseEvent: rootCloseEvent\r\n  }, children));\r\n});\r\nNavDropdown.displayName = 'NavDropdown';\r\nNavDropdown.Item = Dropdown.Item;\r\nNavDropdown.ItemText = Dropdown.ItemText;\r\nNavDropdown.Divider = Dropdown.Divider;\r\nNavDropdown.Header = Dropdown.Header;\r\nexport default NavDropdown;"]},"metadata":{},"sourceType":"module"}