{"ast":null,"code":"'use strict';\n\nvar _require = require('react'),\n    useEffect = _require.useEffect;\n\nvar invariant = require('invariant');\n\nvar _require2 = require('./keys.js'),\n    onKeyPress = _require2.onKeyPress,\n    convertToAsciiEquivalent = _require2.convertToAsciiEquivalent,\n    getAsciiCode = _require2.getAsciiCode;\n\nvar VALID_KEY_EVENTS = ['keydown', 'keyup', 'keypress'];\n\nvar useKey = function useKey(callback) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$detectKeys = _ref.detectKeys,\n      detectKeys = _ref$detectKeys === void 0 ? [] : _ref$detectKeys,\n      _ref$keyevent = _ref.keyevent,\n      keyevent = _ref$keyevent === void 0 ? 'keydown' : _ref$keyevent;\n\n  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref2$dependencies = _ref2.dependencies,\n      dependencies = _ref2$dependencies === void 0 ? [] : _ref2$dependencies;\n\n  var isKeyeventValid = VALID_KEY_EVENTS.indexOf(keyevent) > -1;\n  invariant(isKeyeventValid, 'keyevent is not valid: ' + keyevent);\n  invariant(callback != null, 'callback needs to be defined');\n  invariant(Array.isArray(dependencies), 'dependencies need to be an array');\n  var allowedKeys = detectKeys;\n\n  if (!Array.isArray(detectKeys)) {\n    allowedKeys = []; // eslint-disable-next-line no-console\n\n    console.warn('Keys should be array!');\n  }\n\n  allowedKeys = convertToAsciiEquivalent(allowedKeys);\n\n  var handleEvent = function handleEvent(event) {\n    var asciiCode = getAsciiCode(event);\n    return onKeyPress(asciiCode, callback, allowedKeys, event);\n  };\n\n  useEffect(function () {\n    var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n    if (!canUseDOM) {\n      console.error('Window is not defined');\n      return null;\n    }\n\n    window.document.addEventListener(keyevent, handleEvent);\n    return function () {\n      window.document.removeEventListener(keyevent, handleEvent);\n    };\n  }, dependencies);\n};\n\nmodule.exports = useKey;","map":{"version":3,"sources":["/Users/yan/Documents/GItHub/ML4GIS/client/node_modules/use-key-hook/dist/index.js"],"names":["_require","require","useEffect","invariant","_require2","onKeyPress","convertToAsciiEquivalent","getAsciiCode","VALID_KEY_EVENTS","useKey","callback","_ref","arguments","length","undefined","_ref$detectKeys","detectKeys","_ref$keyevent","keyevent","_ref2","_ref2$dependencies","dependencies","isKeyeventValid","indexOf","Array","isArray","allowedKeys","console","warn","handleEvent","event","asciiCode","canUseDOM","window","document","createElement","error","addEventListener","removeEventListener","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _require = require('react'),\n  useEffect = _require.useEffect;\n\nvar invariant = require('invariant');\n\nvar _require2 = require('./keys.js'),\n  onKeyPress = _require2.onKeyPress,\n  convertToAsciiEquivalent = _require2.convertToAsciiEquivalent,\n  getAsciiCode = _require2.getAsciiCode;\n\nvar VALID_KEY_EVENTS = ['keydown', 'keyup', 'keypress'];\n\nvar useKey = function useKey(callback) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$detectKeys = _ref.detectKeys,\n    detectKeys = _ref$detectKeys === void 0 ? [] : _ref$detectKeys,\n    _ref$keyevent = _ref.keyevent,\n    keyevent = _ref$keyevent === void 0 ? 'keydown' : _ref$keyevent;\n\n  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    _ref2$dependencies = _ref2.dependencies,\n    dependencies = _ref2$dependencies === void 0 ? [] : _ref2$dependencies;\n\n  var isKeyeventValid = VALID_KEY_EVENTS.indexOf(keyevent) > -1;\n  invariant(isKeyeventValid, 'keyevent is not valid: ' + keyevent);\n  invariant(callback != null, 'callback needs to be defined');\n  invariant(Array.isArray(dependencies), 'dependencies need to be an array');\n  var allowedKeys = detectKeys;\n\n  if (!Array.isArray(detectKeys)) {\n    allowedKeys = []; // eslint-disable-next-line no-console\n\n    console.warn('Keys should be array!');\n  }\n\n  allowedKeys = convertToAsciiEquivalent(allowedKeys);\n\n  var handleEvent = function handleEvent(event) {\n    var asciiCode = getAsciiCode(event);\n    return onKeyPress(asciiCode, callback, allowedKeys, event);\n  };\n\n  useEffect(function() {\n    var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n    if (!canUseDOM) {\n      console.error('Window is not defined');\n      return null;\n    }\n\n    window.document.addEventListener(keyevent, handleEvent);\n    return function() {\n      window.document.removeEventListener(keyevent, handleEvent);\n    };\n  }, dependencies);\n};\n\nmodule.exports = useKey;\n"]},"metadata":{},"sourceType":"script"}