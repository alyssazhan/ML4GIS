{"ast":null,"code":"import _slicedToArray from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nexport default (({\n  center,\n  scale,\n  landmarks\n}) => {\n  const points = {};\n\n  var _iterator = _createForOfIteratorHelper(Object.entries(landmarks)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      const _step$value = _slicedToArray(_step.value, 2),\n            keypointId = _step$value[0],\n            defaultPosition = _step$value[1].defaultPosition;\n\n      points[keypointId] = {\n        x: defaultPosition[0] * scale + center.x,\n        y: defaultPosition[1] * scale + center.y\n      };\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return points;\n});","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/annotateComponents/utils/get-landmarks-with-transform.js"],"names":["center","scale","landmarks","points","Object","entries","keypointId","defaultPosition","x","y"],"mappings":";;AAWA,gBAAe,CAAC;AAAEA,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAA8C;AAC3D,QAAMC,MAAM,GAAG,EAAf;;AAD2D,6CAEVC,MAAM,CAACC,OAAP,CAC/CH,SAD+C,CAFU;AAAA;;AAAA;AAE3D,wDAES;AAAA;AAAA,YAFGI,UAEH;AAAA,YAFiBC,eAEjB,kBAFiBA,eAEjB;;AACPJ,MAAAA,MAAM,CAACG,UAAD,CAAN,GAAqB;AACnBE,QAAAA,CAAC,EAAED,eAAe,CAAC,CAAD,CAAf,GAAqBN,KAArB,GAA6BD,MAAM,CAACQ,CADpB;AAEnBC,QAAAA,CAAC,EAAEF,eAAe,CAAC,CAAD,CAAf,GAAqBN,KAArB,GAA6BD,MAAM,CAACS;AAFpB,OAArB;AAID;AAT0D;AAAA;AAAA;AAAA;AAAA;;AAU3D,SAAON,MAAP;AACD,CAXD","sourcesContent":["// @flow\nimport type { KeypointDefinition } from \"../ImageCanvas/region-tools\"\n\ntype Parameters = {\n  center: { x: number, y: number },\n  scale: number,\n  landmarks: {\n    [string]: KeypointDefinition,\n  },\n}\n\nexport default ({ center, scale, landmarks }: Parameters) => {\n  const points = {}\n  for (const [keypointId, { defaultPosition }] of (Object.entries(\n    landmarks\n  ): any)) {\n    points[keypointId] = {\n      x: defaultPosition[0] * scale + center.x,\n      y: defaultPosition[1] * scale + center.y,\n    }\n  }\n  return points\n}\n"]},"metadata":{},"sourceType":"module"}