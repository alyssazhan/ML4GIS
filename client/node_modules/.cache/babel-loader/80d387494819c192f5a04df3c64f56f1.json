{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\pccis\\\\Desktop\\\\ML4GIS-develop\\\\ML4GIS-develop\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\pccis\\\\Desktop\\\\ML4GIS-develop\\\\ML4GIS-develop\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\pccis\\\\Desktop\\\\ML4GIS-develop\\\\ML4GIS-develop\\\\client\\\\src\\\\pages\\\\Home\\\\annotateComponents\\\\main_Annotate.js\";\n\nimport React, { useReducer, useEffect } from \"react\";\nimport MainLayout from \"./MainLayout/main_MainLayout\";\nimport combineReducers from \"./reducers/combineReducers.js\";\nimport generalReducer from \"./reducers/generalReducer.js\";\nimport imageReducer from \"./reducers/imageReducer.js\";\nimport historyHandler from \"./reducers/historyHandler.js\";\nimport useEventCallback from \"use-event-callback\";\nimport makeImmutable, { without } from \"seamless-immutable\";\nexport var Annotator = function Annotator(_ref) {\n  var images = _ref.images,\n      _ref$selectedImage = _ref.selectedImage,\n      selectedImage = _ref$selectedImage === void 0 ? images && images.length > 0 ? 0 : undefined : _ref$selectedImage,\n      _ref$enabledTools = _ref.enabledTools,\n      enabledTools = _ref$enabledTools === void 0 ? [\"select\", \"create-point\", \"create-rectangle\", \"create-polygon\", \"create-polygon1\", \"create-circle\"] : _ref$enabledTools,\n      _ref$selectedTool = _ref.selectedTool,\n      selectedTool = _ref$selectedTool === void 0 ? \"select\" : _ref$selectedTool,\n      _ref$regionTagList = _ref.regionTagList,\n      regionTagList = _ref$regionTagList === void 0 ? [] : _ref$regionTagList,\n      onExit = _ref.onExit,\n      onNextImage = _ref.onNextImage,\n      onPrevImage = _ref.onPrevImage,\n      allowComments = _ref.allowComments;\n\n  if (typeof selectedImage === \"string\") {\n    selectedImage = (images || []).findIndex(function (img) {\n      return img.src === selectedImage;\n    });\n    if (selectedImage === -1) selectedImage = undefined;\n  }\n\n  var annotationType = \"image\";\n\n  var _useReducer = useReducer(historyHandler(combineReducers(imageReducer, generalReducer)), makeImmutable(_objectSpread({\n    annotationType: annotationType,\n    selectedTool: selectedTool,\n    mode: null,\n    regionTagList: regionTagList,\n    enabledTools: enabledTools,\n    history: [],\n    allowComments: allowComments\n  }, {\n    selectedImage: selectedImage,\n    images: images\n  }))),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatchToReducer = _useReducer2[1];\n\n  var dispatchAction = useEventCallback(function (action) {\n    if (action.type === \"HEADER_BUTTON_CLICKED\") {\n      if ([\"Exit\", \"Done\", \"Save\", \"Complete\"].includes(action.buttonName)) {\n        return onExit(without(state, \"history\"));\n      } else if (action.buttonName === \"Next\" && onNextImage) {\n        return onNextImage(without(state, \"history\"));\n      } else if (action.buttonName === \"Prev\" && onPrevImage) {\n        return onPrevImage(without(state, \"history\"));\n      }\n    }\n\n    dispatchToReducer(action);\n  });\n  var onRegionClassAdded = useEventCallback(function (cls) {\n    dispatchToReducer({\n      type: \"ON_CLS_ADDED\",\n      cls: cls\n    });\n  });\n  useEffect(function () {\n    if (selectedImage === undefined) return;\n    dispatchToReducer({\n      type: \"SELECT_IMAGE\",\n      imageIndex: selectedImage,\n      image: state.images[selectedImage]\n    });\n  }, [selectedImage]);\n  if (!images) return 'Missing required prop \"images\" ';\n  return /*#__PURE__*/React.createElement(MainLayout, {\n    alwaysShowNextButton: Boolean(onNextImage),\n    alwaysShowPrevButton: Boolean(onPrevImage),\n    state: state,\n    dispatchAction: dispatchAction,\n    onRegionClassAdded: onRegionClassAdded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  });\n};\nexport default Annotator;","map":{"version":3,"sources":["C:/Users/pccis/Desktop/ML4GIS-develop/ML4GIS-develop/client/src/pages/Home/annotateComponents/main_Annotate.js"],"names":["React","useReducer","useEffect","MainLayout","combineReducers","generalReducer","imageReducer","historyHandler","useEventCallback","makeImmutable","without","Annotator","images","selectedImage","length","undefined","enabledTools","selectedTool","regionTagList","onExit","onNextImage","onPrevImage","allowComments","findIndex","img","src","annotationType","mode","history","state","dispatchToReducer","dispatchAction","action","type","includes","buttonName","onRegionClassAdded","cls","imageIndex","image","Boolean"],"mappings":"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","sourcesContent":["\nimport React, { useReducer, useEffect } from \"react\"\nimport MainLayout from \"./MainLayout/main_MainLayout\"\nimport type {\n  Image,\n  MainLayoutState,\n  Action,\n} from \"./MainLayout/types\"\n\nimport combineReducers from \"./reducers/combineReducers.js\"\nimport generalReducer from \"./reducers/generalReducer.js\"\nimport imageReducer from \"./reducers/imageReducer.js\"\nimport historyHandler from \"./reducers/historyHandler.js\"\nimport useEventCallback from \"use-event-callback\"\nimport makeImmutable, { without } from \"seamless-immutable\"\n\ntype Props = {\n  regionTagList?: Array<string>,\n  enabledTools?: Array<string>,\n  selectedTool?: String,\n  selectedImage?: string | number,\n  images?: Array<Image>,\n  onExit: (MainLayoutState) => any,\n}\n\nexport const Annotator = ({\n  images,\n  selectedImage = images && images.length > 0 ? 0 : undefined,\n  enabledTools = [\n    \"select\",\n    \"create-point\",\n    \"create-rectangle\",\n    \"create-polygon\",\n    \"create-polygon1\",\n    \"create-circle\"\n  ],\n  selectedTool = \"select\",\n  regionTagList = [],\n  onExit,\n  onNextImage,\n  onPrevImage,\n  allowComments,\n}: Props) => {\n  if (typeof selectedImage === \"string\") {\n    selectedImage = (images || []).findIndex((img) => img.src === selectedImage)\n    if (selectedImage === -1) selectedImage = undefined\n  }\n  const annotationType = \"image\"\n  const [state, dispatchToReducer] = useReducer(\n    historyHandler(\n      combineReducers(\n        imageReducer ,\n        generalReducer\n      )\n    ),\n    makeImmutable({\n      annotationType,\n      selectedTool,\n      mode: null,\n      regionTagList,\n      enabledTools,\n      history: [],\n      allowComments,\n      ...({\n            selectedImage,\n            images,\n          }),\n    })\n  )\n\n  const dispatchAction = useEventCallback((action: Action) => {\n    if (action.type === \"HEADER_BUTTON_CLICKED\") {\n      if ([\"Exit\", \"Done\", \"Save\", \"Complete\"].includes(action.buttonName)) {\n        return onExit(without(state, \"history\"))\n      } else if (action.buttonName === \"Next\" && onNextImage) {\n        return onNextImage(without(state, \"history\"))\n      } else if (action.buttonName === \"Prev\" && onPrevImage) {\n        return onPrevImage(without(state, \"history\"))\n      }\n    }\n    dispatchToReducer(action)\n  })\n\n  const onRegionClassAdded = useEventCallback((cls) => {\n    dispatchToReducer({\n      type: \"ON_CLS_ADDED\",\n      cls: cls,\n    })\n  })\n\n  useEffect(() => {\n    if (selectedImage === undefined) return\n    dispatchToReducer({\n      type: \"SELECT_IMAGE\",\n      imageIndex: selectedImage,\n      image: state.images[selectedImage],\n    })\n  }, [selectedImage])\n\n  if (!images )\n    return 'Missing required prop \"images\" '\n\n  return (\n\n      <MainLayout\n        alwaysShowNextButton={Boolean(onNextImage)}\n        alwaysShowPrevButton={Boolean(onPrevImage)}\n        state={state}\n        dispatchAction={dispatchAction}\n        onRegionClassAdded={onRegionClassAdded}\n      />\n\n  )\n}\nexport default Annotator\n"]},"metadata":{},"sourceType":"module"}