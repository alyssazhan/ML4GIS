{"ast":null,"code":"import _objectSpread from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yan/Documents/proj/ML4GIS/client/src/annotateComponents/Annotator/index.js\";\nimport React, { useReducer, useEffect } from \"react\"; // import type { Node } from \"react\"\n\nimport MainLayout from \"../MainLayout\";\n// import type { KeypointsDefinition } from \"../ImageCanvas/region-tools\"\nimport combineReducers from \"../reducers/combine-reducers.js\";\nimport generalReducer from \"../reducers/general-reducer.js\";\nimport imageReducer from \"../reducers/image-reducer.js\"; // import videoReducer from \"./reducers/video-reducer.js\"\n\nimport historyHandler from \"../reducers/history-handler.js\";\nimport useEventCallback from \"use-event-callback\";\nimport makeImmutable, { without } from \"seamless-immutable\"; // import getFromLocalStorage from \"../utils/get-from-local-storage\"\n\nexport const Annotator = ({\n  images,\n  // allowedArea,\n  selectedImage = images && images.length > 0 ? 0 : undefined,\n  // showPointDistances,\n  // pointDistancePrecision,\n  // showTags = getFromLocalStorage(\"showTags\", true),\n  enabledTools = [\"select\", \"create-point\", \"create-rectangle\", \"create-polygon\"],\n  selectedTool = \"select\",\n  regionTagList = [],\n  // regionClsList = [],\n  // imageTagList = [],\n  // imageClsList = [],\n  // keyframes = {},\n  // taskDescription = \"\",\n  // fullImageSegmentationMode = false,\n  // RegionEditLabel,\n  // videoSrc,\n  // videoTime = 0,\n  // videoName,\n  onExit,\n  onNextImage,\n  onPrevImage,\n  // keypointDefinitions,\n  // autoSegmentationOptions = { type: \"autoseg\" },\n  // hideHeader,\n  // hideHeaderText,\n  // hideNext,\n  // hidePrev,\n  allowComments\n}) => {\n  if (typeof selectedImage === \"string\") {\n    selectedImage = (images || []).findIndex(img => img.src === selectedImage);\n    if (selectedImage === -1) selectedImage = undefined;\n  }\n\n  const annotationType = \"image\";\n\n  const _useReducer = useReducer(historyHandler(combineReducers(imageReducer, generalReducer)), makeImmutable(_objectSpread({\n    annotationType,\n    // showTags,\n    // allowedArea,\n    // showPointDistances,\n    // pointDistancePrecision,\n    selectedTool,\n    // fullImageSegmentationMode: fullImageSegmentationMode,\n    // autoSegmentationOptions,\n    mode: null,\n    // taskDescription,\n    // showMask: true,\n    // labelImages: imageClsList.length > 0 || imageTagList.length > 0,\n    // regionClsList,\n    regionTagList,\n    // imageClsList,\n    // imageTagList,\n    // currentVideoTime: videoTime,\n    enabledTools,\n    history: [],\n    // videoName,\n    // keypointDefinitions,\n    allowComments\n  }, {\n    selectedImage,\n    images,\n    selectedImageFrameTime: images && images.length > 0 ? images[0].frameTime : undefined\n  }))),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatchToReducer = _useReducer2[1];\n\n  const dispatch = useEventCallback(action => {\n    if (action.type === \"HEADER_BUTTON_CLICKED\") {\n      if ([\"Exit\", \"Done\", \"Save\", \"Complete\"].includes(action.buttonName)) {\n        return onExit(without(state, \"history\"));\n      } else if (action.buttonName === \"Next\" && onNextImage) {\n        return onNextImage(without(state, \"history\"));\n      } else if (action.buttonName === \"Prev\" && onPrevImage) {\n        return onPrevImage(without(state, \"history\"));\n      }\n    }\n\n    dispatchToReducer(action);\n  });\n  const onRegionClassAdded = useEventCallback(cls => {\n    dispatchToReducer({\n      type: \"ON_CLS_ADDED\",\n      cls: cls\n    });\n  });\n  useEffect(() => {\n    if (selectedImage === undefined) return;\n    dispatchToReducer({\n      type: \"SELECT_IMAGE\",\n      imageIndex: selectedImage,\n      image: state.images[selectedImage]\n    });\n  }, [selectedImage]);\n  if (!images) return 'Missing required prop \"images\" ';\n  return /*#__PURE__*/React.createElement(MainLayout // RegionEditLabel={RegionEditLabel}\n  , {\n    alwaysShowNextButton: Boolean(onNextImage),\n    alwaysShowPrevButton: Boolean(onPrevImage),\n    state: state,\n    dispatch: dispatch,\n    onRegionClassAdded: onRegionClassAdded // hideHeader={hideHeader}\n    // hideHeaderText={hideHeaderText}\n    // hideNext={hideNext}\n    // hidePrev={hidePrev}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  });\n};\nexport default Annotator;","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/annotateComponents/Annotator/index.js"],"names":["React","useReducer","useEffect","MainLayout","combineReducers","generalReducer","imageReducer","historyHandler","useEventCallback","makeImmutable","without","Annotator","images","selectedImage","length","undefined","enabledTools","selectedTool","regionTagList","onExit","onNextImage","onPrevImage","allowComments","findIndex","img","src","annotationType","mode","history","selectedImageFrameTime","frameTime","state","dispatchToReducer","dispatch","action","type","includes","buttonName","onRegionClassAdded","cls","imageIndex","image","Boolean"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { useReducer, useEffect } from \"react\"\n// import type { Node } from \"react\"\nimport MainLayout from \"../MainLayout\"\nimport type {\n  // ToolEnum,\n  Image,\n  // Mode,\n  MainLayoutState,\n  Action,\n} from \"../MainLayout/types\"\n// import type { KeypointsDefinition } from \"../ImageCanvas/region-tools\"\n\nimport combineReducers from \"../reducers/combine-reducers.js\"\nimport generalReducer from \"../reducers/general-reducer.js\"\nimport imageReducer from \"../reducers/image-reducer.js\"\n// import videoReducer from \"./reducers/video-reducer.js\"\nimport historyHandler from \"../reducers/history-handler.js\"\n\nimport useEventCallback from \"use-event-callback\"\nimport makeImmutable, { without } from \"seamless-immutable\"\n// import getFromLocalStorage from \"../utils/get-from-local-storage\"\n\ntype Props = {\n  // taskDescription?: string,\n  // allowedArea?: { x: number, y: number, w: number, h: number },\n  regionTagList?: Array<string>,\n  // regionClsList?: Array<string>,\n  // imageTagList?: Array<string>,\n  // imageClsList?: Array<string>,\n  enabledTools?: Array<string>,\n  selectedTool?: String,\n  // showTags?: boolean,\n  selectedImage?: string | number,\n  images?: Array<Image>,\n  // showPointDistances?: boolean,\n  // pointDistancePrecision?: number,\n  // RegionEditLabel?: Node,\n  onExit: (MainLayoutState) => any,\n  // videoTime?: number,\n  // videoSrc?: string,\n  // keyframes?: Object,\n  // videoName?: string,\n  // keypointDefinitions: KeypointsDefinition,\n  // fullImageSegmentationMode?: boolean,\n  // autoSegmentationOptions?:\n  //   | {| type: \"simple\" |}\n  //   | {| type: \"autoseg\", maxClusters?: number, slicWeightFactor?: number |},\n  // hideHeader?: boolean,\n  // hideHeaderText?: boolean,\n  // hideNext?: boolean,\n  // hidePrev?: boolean,\n}\n\nexport const Annotator = ({\n  images,\n  // allowedArea,\n  selectedImage = images && images.length > 0 ? 0 : undefined,\n  // showPointDistances,\n  // pointDistancePrecision,\n  // showTags = getFromLocalStorage(\"showTags\", true),\n  enabledTools = [\n    \"select\",\n    \"create-point\",\n    \"create-rectangle\",\n    \"create-polygon\",\n  ],\n  selectedTool = \"select\",\n  regionTagList = [],\n  // regionClsList = [],\n  // imageTagList = [],\n  // imageClsList = [],\n  // keyframes = {},\n  // taskDescription = \"\",\n  // fullImageSegmentationMode = false,\n  // RegionEditLabel,\n  // videoSrc,\n  // videoTime = 0,\n  // videoName,\n  onExit,\n  onNextImage,\n  onPrevImage,\n  // keypointDefinitions,\n  // autoSegmentationOptions = { type: \"autoseg\" },\n  // hideHeader,\n  // hideHeaderText,\n  // hideNext,\n  // hidePrev,\n  allowComments,\n}: Props) => {\n  if (typeof selectedImage === \"string\") {\n    selectedImage = (images || []).findIndex((img) => img.src === selectedImage)\n    if (selectedImage === -1) selectedImage = undefined\n  }\n  const annotationType = \"image\"\n  const [state, dispatchToReducer] = useReducer(\n    historyHandler(\n      combineReducers(\n        imageReducer ,\n        generalReducer\n      )\n    ),\n    makeImmutable({\n      annotationType,\n      // showTags,\n      // allowedArea,\n      // showPointDistances,\n      // pointDistancePrecision,\n      selectedTool,\n      // fullImageSegmentationMode: fullImageSegmentationMode,\n      // autoSegmentationOptions,\n      mode: null,\n      // taskDescription,\n      // showMask: true,\n      // labelImages: imageClsList.length > 0 || imageTagList.length > 0,\n      // regionClsList,\n      regionTagList,\n      // imageClsList,\n      // imageTagList,\n      // currentVideoTime: videoTime,\n      enabledTools,\n      history: [],\n      // videoName,\n      // keypointDefinitions,\n      allowComments,\n      ...({\n            selectedImage,\n            images,\n            selectedImageFrameTime:\n              images && images.length > 0 ? images[0].frameTime : undefined,\n          }),\n        // : {\n        //     // videoSrc,\n        //     keyframes,\n        //   }),\n    })\n  )\n\n  const dispatch = useEventCallback((action: Action) => {\n    if (action.type === \"HEADER_BUTTON_CLICKED\") {\n      if ([\"Exit\", \"Done\", \"Save\", \"Complete\"].includes(action.buttonName)) {\n        return onExit(without(state, \"history\"))\n      } else if (action.buttonName === \"Next\" && onNextImage) {\n        return onNextImage(without(state, \"history\"))\n      } else if (action.buttonName === \"Prev\" && onPrevImage) {\n        return onPrevImage(without(state, \"history\"))\n      }\n    }\n    dispatchToReducer(action)\n  })\n\n  const onRegionClassAdded = useEventCallback((cls) => {\n    dispatchToReducer({\n      type: \"ON_CLS_ADDED\",\n      cls: cls,\n    })\n  })\n\n  useEffect(() => {\n    if (selectedImage === undefined) return\n    dispatchToReducer({\n      type: \"SELECT_IMAGE\",\n      imageIndex: selectedImage,\n      image: state.images[selectedImage],\n    })\n  }, [selectedImage])\n\n  if (!images )\n    return 'Missing required prop \"images\" '\n\n  return (\n\n      <MainLayout\n        // RegionEditLabel={RegionEditLabel}\n        alwaysShowNextButton={Boolean(onNextImage)}\n        alwaysShowPrevButton={Boolean(onPrevImage)}\n        state={state}\n        dispatch={dispatch}\n        onRegionClassAdded={onRegionClassAdded}\n        // hideHeader={hideHeader}\n        // hideHeaderText={hideHeaderText}\n        // hideNext={hideNext}\n        // hidePrev={hidePrev}\n      />\n\n  )\n}\n\nexport default Annotator\n"]},"metadata":{},"sourceType":"module"}