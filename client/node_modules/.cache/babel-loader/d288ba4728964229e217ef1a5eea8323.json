{"ast":null,"code":"import { setIn, updateIn, asMutable, without } from \"seamless-immutable\";\nimport moment from \"moment\";\nconst typesToSaveWithHistory = {\n  BEGIN_BOX_TRANSFORM: \"Transform/Move Box\",\n  BEGIN_MOVE_POINT: \"Move Point\",\n  DELETE_REGION: \"Delete Region\",\n  BEGIN_CIRCLE_TRANSFORM: \"Transform/Move Circle\"\n};\nexport const saveToHistory = (state, name) => updateIn(state, [\"history\"], h => [{\n  time: moment().toDate(),\n  state: without(state, \"history\"),\n  name\n}].concat((h || []).slice(0, 9)));\nexport default (reducer => {\n  return (state, action) => {\n    const prevState = state;\n    const nextState = reducer(state, action);\n\n    if (action.type === \"RESTORE_HISTORY\") {\n      if (state.history.length > 0) {\n        return setIn(nextState.history[0].state, [\"history\"], nextState.history.slice(1));\n      }\n    } else {\n      if (prevState !== nextState && Object.keys(typesToSaveWithHistory).includes(action.type)) {\n        return setIn(nextState, [\"history\"], [{\n          time: moment().toDate(),\n          state: without(prevState, \"history\"),\n          name: typesToSaveWithHistory[action.type] || action.type\n        }].concat(nextState.history || []).slice(0, 9));\n      }\n    }\n\n    return nextState;\n  };\n});","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/src/pages/Home/annotateComponents/reducers/historyHandler.js"],"names":["setIn","updateIn","asMutable","without","moment","typesToSaveWithHistory","BEGIN_BOX_TRANSFORM","BEGIN_MOVE_POINT","DELETE_REGION","BEGIN_CIRCLE_TRANSFORM","saveToHistory","state","name","h","time","toDate","concat","slice","reducer","action","prevState","nextState","type","history","length","Object","keys","includes"],"mappings":"AAEA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,oBAApD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,mBAAmB,EAAE,oBADQ;AAE7BC,EAAAA,gBAAgB,EAAE,YAFW;AAG7BC,EAAAA,aAAa,EAAE,eAHc;AAI7BC,EAAAA,sBAAsB,EAAE;AAJK,CAA/B;AAOA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAyBC,IAAzB,KAC3BX,QAAQ,CAACU,KAAD,EAAQ,CAAC,SAAD,CAAR,EAAsBE,CAAD,IAC3B,CACE;AACEC,EAAAA,IAAI,EAAEV,MAAM,GAAGW,MAAT,EADR;AAEEJ,EAAAA,KAAK,EAAER,OAAO,CAACQ,KAAD,EAAQ,SAAR,CAFhB;AAGEC,EAAAA;AAHF,CADF,EAMEI,MANF,CAMS,CAACH,CAAC,IAAI,EAAN,EAAUI,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CANT,CADM,CADH;AAWP,gBAAgBC,OAAD,IAAa;AAC1B,SAAO,CAACP,KAAD,EAAyBQ,MAAzB,KAA4C;AACjD,UAAMC,SAAS,GAAGT,KAAlB;AACA,UAAMU,SAAS,GAAGH,OAAO,CAACP,KAAD,EAAQQ,MAAR,CAAzB;;AAEA,QAAIA,MAAM,CAACG,IAAP,KAAgB,iBAApB,EAAuC;AACrC,UAAIX,KAAK,CAACY,OAAN,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,eAAOxB,KAAK,CACVqB,SAAS,CAACE,OAAV,CAAkB,CAAlB,EAAqBZ,KADX,EAEV,CAAC,SAAD,CAFU,EAGVU,SAAS,CAACE,OAAV,CAAkBN,KAAlB,CAAwB,CAAxB,CAHU,CAAZ;AAKD;AACF,KARD,MAQO;AACL,UACEG,SAAS,KAAKC,SAAd,IACAI,MAAM,CAACC,IAAP,CAAYrB,sBAAZ,EAAoCsB,QAApC,CAA6CR,MAAM,CAACG,IAApD,CAFF,EAGE;AACA,eAAOtB,KAAK,CACVqB,SADU,EAEV,CAAC,SAAD,CAFU,EAGV,CACE;AACEP,UAAAA,IAAI,EAAEV,MAAM,GAAGW,MAAT,EADR;AAEEJ,UAAAA,KAAK,EAAER,OAAO,CAACiB,SAAD,EAAY,SAAZ,CAFhB;AAGER,UAAAA,IAAI,EAAEP,sBAAsB,CAACc,MAAM,CAACG,IAAR,CAAtB,IAAuCH,MAAM,CAACG;AAHtD,SADF,EAOGN,MAPH,CAOUK,SAAS,CAACE,OAAV,IAAqB,EAP/B,EAQGN,KARH,CAQS,CART,EAQY,CARZ,CAHU,CAAZ;AAaD;AACF;;AAED,WAAOI,SAAP;AACD,GAlCD;AAmCD,CApCD","sourcesContent":["\r\nimport type { MainLayoutState, Action } from \"../MainLayout/types\"\r\nimport { setIn, updateIn, asMutable, without } from \"seamless-immutable\"\r\nimport moment from \"moment\"\r\n\r\nconst typesToSaveWithHistory = {\r\n  BEGIN_BOX_TRANSFORM: \"Transform/Move Box\",\r\n  BEGIN_MOVE_POINT: \"Move Point\",\r\n  DELETE_REGION: \"Delete Region\",\r\n  BEGIN_CIRCLE_TRANSFORM: \"Transform/Move Circle\",\r\n}\r\n\r\nexport const saveToHistory = (state: MainLayoutState, name: string) =>\r\n  updateIn(state, [\"history\"], (h) =>\r\n    [\r\n      {\r\n        time: moment().toDate(),\r\n        state: without(state, \"history\"),\r\n        name,\r\n      },\r\n    ].concat((h || []).slice(0, 9))\r\n  )\r\n\r\nexport default (reducer) => {\r\n  return (state: MainLayoutState, action: Action) => {\r\n    const prevState = state\r\n    const nextState = reducer(state, action)\r\n\r\n    if (action.type === \"RESTORE_HISTORY\") {\r\n      if (state.history.length > 0) {\r\n        return setIn(\r\n          nextState.history[0].state,\r\n          [\"history\"],\r\n          nextState.history.slice(1)\r\n        )\r\n      }\r\n    } else {\r\n      if (\r\n        prevState !== nextState &&\r\n        Object.keys(typesToSaveWithHistory).includes(action.type)\r\n      ) {\r\n        return setIn(\r\n          nextState,\r\n          [\"history\"],\r\n          [\r\n            {\r\n              time: moment().toDate(),\r\n              state: without(prevState, \"history\"),\r\n              name: typesToSaveWithHistory[action.type] || action.type,\r\n            },\r\n          ]\r\n            .concat(nextState.history || [])\r\n            .slice(0, 9)\r\n        )\r\n      }\r\n    }\r\n\r\n    return nextState\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}