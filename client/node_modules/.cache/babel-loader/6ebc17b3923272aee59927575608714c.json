{"ast":null,"code":"var key = {\n  fullscreenEnabled: 0,\n  fullscreenElement: 1,\n  requestFullscreen: 2,\n  exitFullscreen: 3,\n  fullscreenchange: 4,\n  fullscreenerror: 5,\n  fullscreen: 6\n};\nvar webkit = ['webkitFullscreenEnabled', 'webkitFullscreenElement', 'webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'];\nvar moz = ['mozFullScreenEnabled', 'mozFullScreenElement', 'mozRequestFullScreen', 'mozCancelFullScreen', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'];\nvar ms = ['msFullscreenEnabled', 'msFullscreenElement', 'msRequestFullscreen', 'msExitFullscreen', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']; // so it doesn't throw if no window or document\n\nvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\nvar vendor = 'fullscreenEnabled' in document && Object.keys(key) || webkit[0] in document && webkit || moz[0] in document && moz || ms[0] in document && ms || [];\nvar fscreen = {\n  requestFullscreen: function requestFullscreen(element) {\n    return element[vendor[key.requestFullscreen]]();\n  },\n  requestFullscreenFunction: function requestFullscreenFunction(element) {\n    return element[vendor[key.requestFullscreen]];\n  },\n\n  get exitFullscreen() {\n    return document[vendor[key.exitFullscreen]].bind(document);\n  },\n\n  get fullscreenPseudoClass() {\n    return \":\" + vendor[key.fullscreen];\n  },\n\n  addEventListener: function addEventListener(type, handler, options) {\n    return document.addEventListener(vendor[key[type]], handler, options);\n  },\n  removeEventListener: function removeEventListener(type, handler, options) {\n    return document.removeEventListener(vendor[key[type]], handler, options);\n  },\n\n  get fullscreenEnabled() {\n    return Boolean(document[vendor[key.fullscreenEnabled]]);\n  },\n\n  set fullscreenEnabled(val) {},\n\n  get fullscreenElement() {\n    return document[vendor[key.fullscreenElement]];\n  },\n\n  set fullscreenElement(val) {},\n\n  get onfullscreenchange() {\n    return document[(\"on\" + vendor[key.fullscreenchange]).toLowerCase()];\n  },\n\n  set onfullscreenchange(handler) {\n    return document[(\"on\" + vendor[key.fullscreenchange]).toLowerCase()] = handler;\n  },\n\n  get onfullscreenerror() {\n    return document[(\"on\" + vendor[key.fullscreenerror]).toLowerCase()];\n  },\n\n  set onfullscreenerror(handler) {\n    return document[(\"on\" + vendor[key.fullscreenerror]).toLowerCase()] = handler;\n  }\n\n};\nexport default fscreen;","map":{"version":3,"sources":["../src/fscreen.js"],"names":[],"mappings":"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","sourcesContent":["const key = {\n  fullscreenEnabled: 0,\n  fullscreenElement: 1,\n  requestFullscreen: 2,\n  exitFullscreen: 3,\n  fullscreenchange: 4,\n  fullscreenerror: 5,\n  fullscreen: 6\n};\n\nconst webkit = [\n  'webkitFullscreenEnabled',\n  'webkitFullscreenElement',\n  'webkitRequestFullscreen',\n  'webkitExitFullscreen',\n  'webkitfullscreenchange',\n  'webkitfullscreenerror',\n  '-webkit-full-screen',\n];\n\nconst moz = [\n  'mozFullScreenEnabled',\n  'mozFullScreenElement',\n  'mozRequestFullScreen',\n  'mozCancelFullScreen',\n  'mozfullscreenchange',\n  'mozfullscreenerror',\n  '-moz-full-screen',\n];\n\nconst ms = [\n  'msFullscreenEnabled',\n  'msFullscreenElement',\n  'msRequestFullscreen',\n  'msExitFullscreen',\n  'MSFullscreenChange',\n  'MSFullscreenError',\n  '-ms-fullscreen',\n];\n\n// so it doesn't throw if no window or document\nconst document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\nconst vendor = (\n  ('fullscreenEnabled' in document && Object.keys(key)) ||\n  (webkit[0] in document && webkit) ||\n  (moz[0] in document && moz) ||\n  (ms[0] in document && ms) ||\n  []\n);\n\nexport default {\n  requestFullscreen: element => element[vendor[key.requestFullscreen]](),\n  requestFullscreenFunction: element => element[vendor[key.requestFullscreen]],\n  get exitFullscreen() { return document[vendor[key.exitFullscreen]].bind(document); },\n  get fullscreenPseudoClass() { return `:${vendor[key.fullscreen]}`; },\n  addEventListener: (type, handler, options) => document.addEventListener(vendor[key[type]], handler, options),\n  removeEventListener: (type, handler, options) => document.removeEventListener(vendor[key[type]], handler, options),\n  get fullscreenEnabled() { return Boolean(document[vendor[key.fullscreenEnabled]]); },\n  set fullscreenEnabled(val) {},\n  get fullscreenElement() { return document[vendor[key.fullscreenElement]]; },\n  set fullscreenElement(val) {},\n  get onfullscreenchange() { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()]; },\n  set onfullscreenchange(handler) { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler; },\n  get onfullscreenerror() { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()]; },\n  set onfullscreenerror(handler) { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler; },\n};\n"]},"metadata":{},"sourceType":"module"}