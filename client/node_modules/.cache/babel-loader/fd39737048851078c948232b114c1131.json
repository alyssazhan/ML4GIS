{"ast":null,"code":"import { __assign } from \"tslib\";\n/* eslint-disable */\n\nimport { useEffect, useState } from 'react';\n\nvar useGeolocation = function useGeolocation(options) {\n  var _a = useState({\n    loading: true,\n    accuracy: null,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    latitude: null,\n    longitude: null,\n    speed: null,\n    timestamp: Date.now()\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var mounted = true;\n  var watchId;\n\n  var onEvent = function onEvent(event) {\n    if (mounted) {\n      setState({\n        loading: false,\n        accuracy: event.coords.accuracy,\n        altitude: event.coords.altitude,\n        altitudeAccuracy: event.coords.altitudeAccuracy,\n        heading: event.coords.heading,\n        latitude: event.coords.latitude,\n        longitude: event.coords.longitude,\n        speed: event.coords.speed,\n        timestamp: event.timestamp\n      });\n    }\n  };\n\n  var onEventError = function onEventError(error) {\n    return mounted && setState(function (oldState) {\n      return __assign(__assign({}, oldState), {\n        loading: false,\n        error: error\n      });\n    });\n  };\n\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(onEvent, onEventError, options);\n    watchId = navigator.geolocation.watchPosition(onEvent, onEventError, options);\n    return function () {\n      mounted = false;\n      navigator.geolocation.clearWatch(watchId);\n    };\n  }, []);\n  return state;\n};\n\nexport default useGeolocation;","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/node_modules/react-use/esm/useGeolocation.js"],"names":["__assign","useEffect","useState","useGeolocation","options","_a","loading","accuracy","altitude","altitudeAccuracy","heading","latitude","longitude","speed","timestamp","Date","now","state","setState","mounted","watchId","onEvent","event","coords","onEventError","error","oldState","navigator","geolocation","getCurrentPosition","watchPosition","clearWatch"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA;;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AACA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,OAAV,EAAmB;AACpC,MAAIC,EAAE,GAAGH,QAAQ,CAAC;AACdI,IAAAA,OAAO,EAAE,IADK;AAEdC,IAAAA,QAAQ,EAAE,IAFI;AAGdC,IAAAA,QAAQ,EAAE,IAHI;AAIdC,IAAAA,gBAAgB,EAAE,IAJJ;AAKdC,IAAAA,OAAO,EAAE,IALK;AAMdC,IAAAA,QAAQ,EAAE,IANI;AAOdC,IAAAA,SAAS,EAAE,IAPG;AAQdC,IAAAA,KAAK,EAAE,IARO;AASdC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AATG,GAAD,CAAjB;AAAA,MAUIC,KAAK,GAAGZ,EAAE,CAAC,CAAD,CAVd;AAAA,MAUmBa,QAAQ,GAAGb,EAAE,CAAC,CAAD,CAVhC;;AAWA,MAAIc,OAAO,GAAG,IAAd;AACA,MAAIC,OAAJ;;AACA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,KAAV,EAAiB;AAC3B,QAAIH,OAAJ,EAAa;AACTD,MAAAA,QAAQ,CAAC;AACLZ,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,QAAQ,EAAEe,KAAK,CAACC,MAAN,CAAahB,QAFlB;AAGLC,QAAAA,QAAQ,EAAEc,KAAK,CAACC,MAAN,CAAaf,QAHlB;AAILC,QAAAA,gBAAgB,EAAEa,KAAK,CAACC,MAAN,CAAad,gBAJ1B;AAKLC,QAAAA,OAAO,EAAEY,KAAK,CAACC,MAAN,CAAab,OALjB;AAMLC,QAAAA,QAAQ,EAAEW,KAAK,CAACC,MAAN,CAAaZ,QANlB;AAOLC,QAAAA,SAAS,EAAEU,KAAK,CAACC,MAAN,CAAaX,SAPnB;AAQLC,QAAAA,KAAK,EAAES,KAAK,CAACC,MAAN,CAAaV,KARf;AASLC,QAAAA,SAAS,EAAEQ,KAAK,CAACR;AATZ,OAAD,CAAR;AAWH;AACJ,GAdD;;AAeA,MAAIU,YAAY,GAAG,SAAfA,YAAe,CAAUC,KAAV,EAAiB;AAChC,WAAON,OAAO,IAAID,QAAQ,CAAC,UAAUQ,QAAV,EAAoB;AAAE,aAAQ1B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK0B,QAAL,CAAT,EAAyB;AAAEpB,QAAAA,OAAO,EAAE,KAAX;AAAkBmB,QAAAA,KAAK,EAAEA;AAAzB,OAAzB,CAAhB;AAA8E,KAArG,CAA1B;AACH,GAFD;;AAGAxB,EAAAA,SAAS,CAAC,YAAY;AAClB0B,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCR,OAAzC,EAAkDG,YAAlD,EAAgEpB,OAAhE;AACAgB,IAAAA,OAAO,GAAGO,SAAS,CAACC,WAAV,CAAsBE,aAAtB,CAAoCT,OAApC,EAA6CG,YAA7C,EAA2DpB,OAA3D,CAAV;AACA,WAAO,YAAY;AACfe,MAAAA,OAAO,GAAG,KAAV;AACAQ,MAAAA,SAAS,CAACC,WAAV,CAAsBG,UAAtB,CAAiCX,OAAjC;AACH,KAHD;AAIH,GAPQ,EAON,EAPM,CAAT;AAQA,SAAOH,KAAP;AACH,CAzCD;;AA0CA,eAAed,cAAf","sourcesContent":["import { __assign } from \"tslib\";\r\n/* eslint-disable */\r\nimport { useEffect, useState } from 'react';\r\nvar useGeolocation = function (options) {\r\n    var _a = useState({\r\n        loading: true,\r\n        accuracy: null,\r\n        altitude: null,\r\n        altitudeAccuracy: null,\r\n        heading: null,\r\n        latitude: null,\r\n        longitude: null,\r\n        speed: null,\r\n        timestamp: Date.now(),\r\n    }), state = _a[0], setState = _a[1];\r\n    var mounted = true;\r\n    var watchId;\r\n    var onEvent = function (event) {\r\n        if (mounted) {\r\n            setState({\r\n                loading: false,\r\n                accuracy: event.coords.accuracy,\r\n                altitude: event.coords.altitude,\r\n                altitudeAccuracy: event.coords.altitudeAccuracy,\r\n                heading: event.coords.heading,\r\n                latitude: event.coords.latitude,\r\n                longitude: event.coords.longitude,\r\n                speed: event.coords.speed,\r\n                timestamp: event.timestamp,\r\n            });\r\n        }\r\n    };\r\n    var onEventError = function (error) {\r\n        return mounted && setState(function (oldState) { return (__assign(__assign({}, oldState), { loading: false, error: error })); });\r\n    };\r\n    useEffect(function () {\r\n        navigator.geolocation.getCurrentPosition(onEvent, onEventError, options);\r\n        watchId = navigator.geolocation.watchPosition(onEvent, onEventError, options);\r\n        return function () {\r\n            mounted = false;\r\n            navigator.geolocation.clearWatch(watchId);\r\n        };\r\n    }, []);\r\n    return state;\r\n};\r\nexport default useGeolocation;\r\n"]},"metadata":{},"sourceType":"module"}