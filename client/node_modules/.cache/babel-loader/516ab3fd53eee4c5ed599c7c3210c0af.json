{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Documents/proj/ML4GIS/client/src/pages/previewResult.js\";\nimport React, { Component } from \"react\";\nimport AnnotationTool from \"../annotateComponents/Annotator\";\nimport results from \"../train_results.json\";\nexport default class previewResult extends Component {\n  render() {\n    //transfer object to arr\n    const resultsArr = [];\n    Object.keys(results).forEach(key => resultsArr.push(results[key]));\n    console.log(resultsArr);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, //loop through arr\n    resultsArr.map((result, index) => {\n      if (result.Submit === \"Yes\") return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(AnnotationTool, {\n        images: result.Annotation,\n        labelImages: true,\n        annotationType: \"image\",\n        settingsOpen: false // allowFullscreen={false}\n        ,\n        taskDescription: \"# Draw region around each text area, please input what's the text, note whether it's been cut off or not, and choose it's category.\" // function\n        ,\n        enabledTools: [\"create-point\", \"create-rectangle\", \"create-polygon\"],\n        regionTagList: [\"tag1\", \"tag2\", \"tag3\"] // comments\n        ,\n        allowComments: true,\n        onExit: output => console.log(output.images),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/pages/previewResult.js"],"names":["React","Component","AnnotationTool","results","previewResult","render","resultsArr","Object","keys","forEach","key","push","console","log","map","result","index","Submit","Annotation","output","images"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAIA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAEnDI,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,UAAU,GAAG,EAAnB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,OAArB,CACIC,GAAG,IAAIJ,UAAU,CAACK,IAAX,CACFR,OAAO,CAACO,GAAD,CADL,CADX;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAaP,UAAb;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AACAA,IAAAA,UAAU,CAACQ,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChC,UAAID,MAAM,CAACE,MAAP,KAAgB,KAApB,EACA,oBACI;AAAK,QAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGR,oBAAC,cAAD;AAEN,QAAA,MAAM,EAAED,MAAM,CAACG,UAFT;AAGN,QAAA,WAAW,MAHL;AAIN,QAAA,cAAc,EAAI,OAJZ;AAKN,QAAA,YAAY,EAAE,KALR,CAMN;AANM;AAON,QAAA,eAAe,EAAC,qIAPV,CAQN;AARM;AASN,QAAA,YAAY,EAAE,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,gBAArC,CATR;AAUN,QAAA,aAAa,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAVT,CAWN;AAXM;AAYN,QAAA,aAAa,EAAE,IAZT;AAaN,QAAA,MAAM,EAAEC,MAAM,IAAIP,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACC,MAAnB,CAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHQ,CADJ;AAsBD,KAxBD,CAHJ,CADJ;AAiCD;;AA1CkD","sourcesContent":["import React, { Component } from \"react\";\nimport AnnotationTool from \"../annotateComponents/Annotator\";\n\nimport results from \"../train_results.json\";\n\n\n\nexport default class previewResult extends Component {\n\n  render() {\n    //transfer object to arr\n    const resultsArr = []\n    Object.keys(results).forEach(\n        key => resultsArr.push(\n             results[key]))\n    console.log( resultsArr)\n    return (\n        <div>\n          {\n            //loop through arr\n            resultsArr.map((result, index) => {\n              if (result.Submit===\"Yes\")\n              return (\n                  <div key={index} >\n\n\n          <AnnotationTool\n\n    images={result.Annotation}\n    labelImages\n    annotationType = {\"image\"}\n    settingsOpen={false}\n    // allowFullscreen={false}\n    taskDescription=\"# Draw region around each text area, please input what's the text, note whether it's been cut off or not, and choose it's category.\"\n    // function\n    enabledTools={[\"create-point\", \"create-rectangle\", \"create-polygon\"]}\n    regionTagList={[\"tag1\", \"tag2\", \"tag3\"]}\n    // comments\n    allowComments={true}\n    onExit={output => console.log(output.images)}\n\n    />\n                  </div>\n              )\n            })\n          }\n        </div>\n    )\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}