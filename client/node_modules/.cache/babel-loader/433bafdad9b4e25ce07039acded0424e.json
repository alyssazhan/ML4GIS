{"ast":null,"code":"import _objectSpread from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/yan/Documents/proj/ML4GIS/client/src/annotateComponents/MainLayout/index.js\";\nimport React, { useRef, useCallback } from \"react\";\nimport { makeStyles, styled } from \"@material-ui/core/styles\";\nimport ImageCanvas from \"../ImageCanvas\";\nimport styles from \"./styles\";\nimport useKey from \"use-key-hook\";\nimport classnames from \"classnames\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport getActiveImage from \"../Annotator/reducers/get-active-image\";\nimport { useDispatchHotkeyHandlers } from \"../ShortcutsManager\";\nimport { withHotKeys } from \"react-hotkeys\";\nimport iconDictionary from \"./icon-dictionary\";\nimport Workspace from \"react-material-workspace-layout/Workspace\";\nimport useEventCallback from \"use-event-callback\";\nimport getHotkeyHelpText from \"../utils/get-hotkey-help-text\";\nconst useStyles = makeStyles(styles);\nconst HotkeyDiv = withHotKeys((_ref) => {\n  let hotKeys = _ref.hotKeys,\n      children = _ref.children,\n      divRef = _ref.divRef,\n      props = _objectWithoutProperties(_ref, [\"hotKeys\", \"children\", \"divRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, _objectSpread(_objectSpread({}, hotKeys), props), {\n    ref: divRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }), children);\n}); // const FullScreenContainer = styled(\"div\")({\n//   width: \"100%\",\n//   height: \"100%\",\n//   // \"& .fullscreen\": {\n//   //   width: \"100%\",\n//   //   height: \"100%\",\n//   // },\n// })\n\nexport const MainLayout = ({\n  state,\n  dispatch,\n  // alwaysShowNextButton = false,\n  // alwaysShowPrevButton = false,\n  // RegionEditLabel,\n  onRegionClassAdded // hideHeader,\n  // hideHeaderText,\n  // hideNext = false,\n  // hidePrev = false,\n\n}) => {\n  const classes = useStyles(); // const settings = useSettings()\n  // const fullScreenHandle = useFullScreenHandle()\n\n  const memoizedActionFns = useRef({});\n\n  const action = (type, ...params) => {\n    const fnKey = \"\".concat(type, \"(\").concat(params.join(\",\"), \")\");\n    if (memoizedActionFns.current[fnKey]) return memoizedActionFns.current[fnKey];\n\n    const fn = (...args) => params.length > 0 ? dispatch(_objectSpread({\n      type\n    }, params.reduce((acc, p, i) => (acc[p] = args[i], acc), {}))) : dispatch(_objectSpread({\n      type\n    }, args[0]));\n\n    memoizedActionFns.current[fnKey] = fn;\n    return fn;\n  };\n\n  const _getActiveImage = getActiveImage(state),\n        currentImageIndex = _getActiveImage.currentImageIndex,\n        activeImage = _getActiveImage.activeImage;\n\n  let nextImage;\n\n  if (currentImageIndex !== null) {\n    nextImage = state.images[currentImageIndex + 1];\n  }\n\n  useKey(() => dispatch({\n    type: \"CANCEL\"\n  }), {\n    detectKeys: [27]\n  }); // const isAVideoFrame = activeImage && activeImage.frameTime !== undefined\n\n  const innerContainerRef = useRef();\n  const hotkeyHandlers = useDispatchHotkeyHandlers({\n    dispatch\n  }); // let impliedVideoRegions = useImpliedVideoRegions(state)\n\n  const refocusOnMouseEvent = useCallback(e => {\n    if (!innerContainerRef.current) return;\n    if (innerContainerRef.current.contains(document.activeElement)) return;\n\n    if (innerContainerRef.current.contains(e.target)) {\n      innerContainerRef.current.focus();\n      e.target.focus();\n    }\n  }, []);\n  const canvas = /*#__PURE__*/React.createElement(ImageCanvas, {\n    key: state.selectedImage // fullImageSegmentationMode={state.fullImageSegmentationMode}\n    // autoSegmentationOptions={state.autoSegmentationOptions}\n    ,\n    showTags: state.showTags // allowedArea={state.allowedArea}\n    // modifyingAllowedArea={state.selectedTool === \"modify-allowed-area\"}\n    // regionClsList={state.regionClsList}\n    ,\n    regionTagList: state.regionTagList,\n    regions: activeImage.regions || [],\n    realSize: activeImage ? activeImage.realSize : undefined,\n    imageSrc: state.annotationType === \"image\" ? activeImage.src : null,\n    pointDistancePrecision: state.pointDistancePrecision,\n    createWithPrimary: state.selectedTool.includes(\"create\"),\n    dragWithPrimary: state.selectedTool === \"pan\",\n    zoomWithPrimary: state.selectedTool === \"zoom\",\n    showPointDistances: state.showPointDistances,\n    keypointDefinitions: state.keypointDefinitions,\n    onMouseMove: action(\"MOUSE_MOVE\"),\n    onMouseDown: action(\"MOUSE_DOWN\"),\n    onMouseUp: action(\"MOUSE_UP\"),\n    onChangeRegion: action(\"CHANGE_REGION\", \"region\"),\n    onBeginRegionEdit: action(\"OPEN_REGION_EDITOR\", \"region\"),\n    onCloseRegionEdit: action(\"CLOSE_REGION_EDITOR\", \"region\"),\n    onDeleteRegion: action(\"DELETE_REGION\", \"region\"),\n    onBeginBoxTransform: action(\"BEGIN_BOX_TRANSFORM\", \"rectangle\", \"directions\"),\n    onBeginMovePolygonPoint: action(\"BEGIN_MOVE_POLYGON_POINT\", \"polygon\", \"pointIndex\"),\n    onBeginMoveKeypoint: action(\"BEGIN_MOVE_KEYPOINT\", \"region\", \"keypointId\"),\n    onAddPolygonPoint: action(\"ADD_POLYGON_POINT\", \"polygon\", \"point\", \"pointIndex\"),\n    onSelectRegion: action(\"SELECT_REGION\", \"region\"),\n    onBeginMovePoint: action(\"BEGIN_MOVE_POINT\", \"point\"),\n    onImageLoaded: action(\"IMAGE_LOADED\", \"image\") // RegionEditLabel={RegionEditLabel}\n    // onRegionClassAdded={onRegionClassAdded}\n    ,\n    allowComments: state.allowComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  });\n  const onClickIconSidebarItem = useEventCallback(item => {\n    dispatch({\n      type: \"SELECT_TOOL\",\n      selectedTool: item.name\n    });\n  });\n  const onClickHeaderItem = useEventCallback(item => {\n    // if (item.name === \"Fullscreen\") {\n    //   fullScreenHandle.enter()\n    // } else if (item.name === \"Window\") {\n    //   fullScreenHandle.exit()\n    // }\n    dispatch({\n      type: \"HEADER_BUTTON_CLICKED\",\n      buttonName: item.name\n    });\n  });\n  const nextImageHasRegions = !nextImage || nextImage.regions && nextImage.regions.length > 0;\n  return (\n    /*#__PURE__*/\n    // <FullScreenContainer>\n    React.createElement(FullScreen // handle={fullScreenHandle}\n    , {\n      onChange: open => {\n        if (!open) {\n          // fullScreenHandle.exit()\n          action(\"HEADER_BUTTON_CLICKED\", \"buttonName\")(\"Window\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(HotkeyDiv, {\n      tabIndex: -1,\n      divRef: innerContainerRef,\n      onMouseDown: refocusOnMouseEvent,\n      onMouseOver: refocusOnMouseEvent,\n      allowChanges: true,\n      handlers: hotkeyHandlers,\n      className: classnames(classes.container),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Workspace, {\n      iconDictionary: iconDictionary // hideHeader={hideHeader}\n      // hideHeaderText={hideHeaderText}\n      ,\n      headerLeftSide: [activeImage ? /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.headerTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, activeImage.name) : null].filter(Boolean) // headerLeftSide={[\n      //    activeImage ? (\n      //     <div className={classes.headerTitle}>{activeImage.name}</div>\n      //   ) : null,\n      // ].filter(Boolean)}\n      // headerItems={[\n      //   !hidePrev && { name: \"Prev\" },\n      //   !hideNext && { name: \"Next\" },\n      //   { name: \"Save\" },\n      // ].filter(Boolean)}\n      ,\n      onClickHeaderItem: onClickHeaderItem,\n      onClickIconSidebarItem: onClickIconSidebarItem,\n      selectedTools: [state.selectedTool].filter(Boolean),\n      iconSidebarItems: [{\n        name: \"pan\",\n        helperText: \"Drag/Pan (right or middle click)\" + getHotkeyHelpText(\"pan_tool\"),\n        alwaysShowing: true\n      }, {\n        name: \"zoom\",\n        helperText: \"Zoom In/Out\" + getHotkeyHelpText(\"zoom_tool\"),\n        alwaysShowing: true\n      }, {\n        name: \"create-point\",\n        helperText: \"Add Point\" + getHotkeyHelpText(\"create_point\")\n      }, {\n        name: \"create-rectangle\",\n        helperText: \"Add Rectangle\" + getHotkeyHelpText(\"create_rectangle\")\n      }, {\n        name: \"create-polygon\",\n        helperText: \"Add Polygon\" + getHotkeyHelpText(\"create_polygon\")\n      }].filter(Boolean).filter(a => a.alwaysShowing || state.enabledTools.includes(a.name)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, canvas))) // </FullScreenContainer>\n\n  );\n};\nexport default MainLayout;","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/annotateComponents/MainLayout/index.js"],"names":["React","useRef","useCallback","makeStyles","styled","ImageCanvas","styles","useKey","classnames","FullScreen","useFullScreenHandle","getActiveImage","useDispatchHotkeyHandlers","withHotKeys","iconDictionary","Workspace","useEventCallback","getHotkeyHelpText","useStyles","HotkeyDiv","hotKeys","children","divRef","props","MainLayout","state","dispatch","onRegionClassAdded","classes","memoizedActionFns","action","type","params","fnKey","join","current","fn","args","length","reduce","acc","p","i","currentImageIndex","activeImage","nextImage","images","detectKeys","innerContainerRef","hotkeyHandlers","refocusOnMouseEvent","e","contains","document","activeElement","target","focus","canvas","selectedImage","showTags","regionTagList","regions","realSize","undefined","annotationType","src","pointDistancePrecision","selectedTool","includes","showPointDistances","keypointDefinitions","allowComments","onClickIconSidebarItem","item","name","onClickHeaderItem","buttonName","nextImageHasRegions","open","container","headerTitle","filter","Boolean","helperText","alwaysShowing","a","enabledTools"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { useRef, useCallback } from \"react\"\nimport type { Node } from \"react\"\nimport { makeStyles, styled } from \"@material-ui/core/styles\"\nimport ImageCanvas from \"../ImageCanvas\"\nimport styles from \"./styles\"\nimport type { MainLayoutState, Action } from \"./types\"\nimport useKey from \"use-key-hook\"\nimport classnames from \"classnames\"\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport getActiveImage from \"../Annotator/reducers/get-active-image\"\nimport { useDispatchHotkeyHandlers } from \"../ShortcutsManager\"\nimport { withHotKeys } from \"react-hotkeys\"\nimport iconDictionary from \"./icon-dictionary\"\nimport Workspace from \"react-material-workspace-layout/Workspace\"\nimport useEventCallback from \"use-event-callback\"\nimport getHotkeyHelpText from \"../utils/get-hotkey-help-text\"\n\nconst useStyles = makeStyles(styles)\n\nconst HotkeyDiv = withHotKeys(({ hotKeys, children, divRef, ...props }) => (\n  <div {...{ ...hotKeys, ...props }} ref={divRef}>\n    {children}\n  </div>\n))\n\n// const FullScreenContainer = styled(\"div\")({\n//   width: \"100%\",\n//   height: \"100%\",\n//   // \"& .fullscreen\": {\n//   //   width: \"100%\",\n//   //   height: \"100%\",\n//   // },\n// })\n\ntype Props = {\n  state: MainLayoutState,\n  // RegionEditLabel?: Node,\n  dispatch: (Action) => any,\n  // alwaysShowNextButton?: boolean,\n  // alwaysShowPrevButton?: boolean,\n  onRegionClassAdded: () => {},\n  hideHeader?: boolean,\n  // hideHeaderText?: boolean,\n}\n\nexport const MainLayout = ({\n  state,\n  dispatch,\n  // alwaysShowNextButton = false,\n  // alwaysShowPrevButton = false,\n  // RegionEditLabel,\n  onRegionClassAdded,\n  // hideHeader,\n  // hideHeaderText,\n  // hideNext = false,\n  // hidePrev = false,\n}: Props) => {\n  const classes = useStyles()\n  // const settings = useSettings()\n  // const fullScreenHandle = useFullScreenHandle()\n\n  const memoizedActionFns = useRef({})\n  const action = (type: string, ...params: Array<string>) => {\n    const fnKey = `${type}(${params.join(\",\")})`\n    if (memoizedActionFns.current[fnKey])\n      return memoizedActionFns.current[fnKey]\n\n    const fn = (...args: any) =>\n      params.length > 0\n        ? dispatch(\n            ({\n              type,\n              ...params.reduce((acc, p, i) => ((acc[p] = args[i]), acc), {}),\n            }: any)\n          )\n        : dispatch({ type, ...args[0] })\n    memoizedActionFns.current[fnKey] = fn\n    return fn\n  }\n\n  const { currentImageIndex, activeImage } = getActiveImage(state)\n  let nextImage\n  if (currentImageIndex !== null) {\n    nextImage = state.images[currentImageIndex + 1]\n  }\n\n  useKey(() => dispatch({ type: \"CANCEL\" }), {\n    detectKeys: [27],\n  })\n\n  // const isAVideoFrame = activeImage && activeImage.frameTime !== undefined\n  const innerContainerRef = useRef()\n  const hotkeyHandlers = useDispatchHotkeyHandlers({ dispatch })\n\n  // let impliedVideoRegions = useImpliedVideoRegions(state)\n\n  const refocusOnMouseEvent = useCallback((e) => {\n    if (!innerContainerRef.current) return\n    if (innerContainerRef.current.contains(document.activeElement)) return\n    if (innerContainerRef.current.contains(e.target)) {\n      innerContainerRef.current.focus()\n      e.target.focus()\n    }\n  }, [])\n\n  const canvas = (\n    <ImageCanvas\n      key={state.selectedImage}\n      // fullImageSegmentationMode={state.fullImageSegmentationMode}\n      // autoSegmentationOptions={state.autoSegmentationOptions}\n      showTags={state.showTags}\n      // allowedArea={state.allowedArea}\n      // modifyingAllowedArea={state.selectedTool === \"modify-allowed-area\"}\n      // regionClsList={state.regionClsList}\n      regionTagList={state.regionTagList}\n      regions={\n        activeImage.regions || []\n      }\n      realSize={activeImage ? activeImage.realSize : undefined}\n      imageSrc={state.annotationType === \"image\" ? activeImage.src : null}\n      pointDistancePrecision={state.pointDistancePrecision}\n      createWithPrimary={state.selectedTool.includes(\"create\")}\n      dragWithPrimary={state.selectedTool === \"pan\"}\n      zoomWithPrimary={state.selectedTool === \"zoom\"}\n      showPointDistances={state.showPointDistances}\n      keypointDefinitions={state.keypointDefinitions}\n      onMouseMove={action(\"MOUSE_MOVE\")}\n      onMouseDown={action(\"MOUSE_DOWN\")}\n      onMouseUp={action(\"MOUSE_UP\")}\n      onChangeRegion={action(\"CHANGE_REGION\", \"region\")}\n      onBeginRegionEdit={action(\"OPEN_REGION_EDITOR\", \"region\")}\n      onCloseRegionEdit={action(\"CLOSE_REGION_EDITOR\", \"region\")}\n      onDeleteRegion={action(\"DELETE_REGION\", \"region\")}\n      onBeginBoxTransform={action(\"BEGIN_BOX_TRANSFORM\", \"rectangle\", \"directions\")}\n      onBeginMovePolygonPoint={action(\n        \"BEGIN_MOVE_POLYGON_POINT\",\n        \"polygon\",\n        \"pointIndex\"\n      )}\n      onBeginMoveKeypoint={action(\n        \"BEGIN_MOVE_KEYPOINT\",\n        \"region\",\n        \"keypointId\"\n      )}\n      onAddPolygonPoint={action(\n        \"ADD_POLYGON_POINT\",\n        \"polygon\",\n        \"point\",\n        \"pointIndex\"\n      )}\n      onSelectRegion={action(\"SELECT_REGION\", \"region\")}\n      onBeginMovePoint={action(\"BEGIN_MOVE_POINT\", \"point\")}\n      onImageLoaded={action(\"IMAGE_LOADED\", \"image\")}\n      // RegionEditLabel={RegionEditLabel}\n      // onRegionClassAdded={onRegionClassAdded}\n      allowComments={state.allowComments}\n    />\n  )\n\n  const onClickIconSidebarItem = useEventCallback((item) => {\n    dispatch({ type: \"SELECT_TOOL\", selectedTool: item.name })\n  })\n\n  const onClickHeaderItem = useEventCallback((item) => {\n    // if (item.name === \"Fullscreen\") {\n    //   fullScreenHandle.enter()\n    // } else if (item.name === \"Window\") {\n    //   fullScreenHandle.exit()\n    // }\n    dispatch({ type: \"HEADER_BUTTON_CLICKED\", buttonName: item.name })\n  })\n\n  const nextImageHasRegions =\n    !nextImage || (nextImage.regions && nextImage.regions.length > 0)\n\n  return (\n    // <FullScreenContainer>\n      <FullScreen\n        // handle={fullScreenHandle}\n        onChange={(open) => {\n          if (!open) {\n            // fullScreenHandle.exit()\n            action(\"HEADER_BUTTON_CLICKED\", \"buttonName\")(\"Window\")\n          }\n        }}\n      >\n        <HotkeyDiv\n          tabIndex={-1}\n          divRef={innerContainerRef}\n          onMouseDown={refocusOnMouseEvent}\n          onMouseOver={refocusOnMouseEvent}\n          allowChanges\n          handlers={hotkeyHandlers}\n          className={classnames(\n            classes.container,\n\n          )}\n        >\n          <Workspace\n            iconDictionary={iconDictionary}\n            // hideHeader={hideHeader}\n            // hideHeaderText={hideHeaderText}\n            headerLeftSide={[\n              activeImage ? (\n                  <div className={classes.headerTitle}>{activeImage.name}</div>\n              ) : null,\n            ].filter(Boolean)}\n\n            // headerLeftSide={[\n            //    activeImage ? (\n            //     <div className={classes.headerTitle}>{activeImage.name}</div>\n            //   ) : null,\n            // ].filter(Boolean)}\n            // headerItems={[\n            //   !hidePrev && { name: \"Prev\" },\n            //   !hideNext && { name: \"Next\" },\n            //   { name: \"Save\" },\n            // ].filter(Boolean)}\n            onClickHeaderItem={onClickHeaderItem}\n            onClickIconSidebarItem={onClickIconSidebarItem}\n            selectedTools={[\n              state.selectedTool,\n            ].filter(Boolean)}\n            iconSidebarItems={[\n              {\n                name: \"pan\",\n                helperText:\n                  \"Drag/Pan (right or middle click)\" +\n                  getHotkeyHelpText(\"pan_tool\"),\n                alwaysShowing: true,\n              },\n              {\n                name: \"zoom\",\n                helperText:\n                  \"Zoom In/Out\" + getHotkeyHelpText(\"zoom_tool\"),\n                alwaysShowing: true,\n              },\n              {\n                name: \"create-point\",\n                helperText: \"Add Point\" + getHotkeyHelpText(\"create_point\"),\n              },\n              {\n                name: \"create-rectangle\",\n                helperText:\n                  \"Add Rectangle\" + getHotkeyHelpText(\"create_rectangle\"),\n              },\n              {\n                name: \"create-polygon\",\n                helperText: \"Add Polygon\" + getHotkeyHelpText(\"create_polygon\"),\n              },\n\n            ]\n              .filter(Boolean)\n              .filter(\n                (a) => a.alwaysShowing || state.enabledTools.includes(a.name)\n              )}\n\n          >\n            {canvas}\n          </Workspace>\n        </HotkeyDiv>\n      </FullScreen>\n    // </FullScreenContainer>\n  )\n}\n\nexport default MainLayout\n"]},"metadata":{},"sourceType":"module"}