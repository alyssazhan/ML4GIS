{"ast":null,"code":"import _slicedToArray from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yan/Documents/proj/ML4GIS/client/src/pages/Home/tutorial.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport styles from \"./styles.js\";\nimport { Avatar, Card, CardActions, CardContent, CardHeader, Typography, CardMedia, Button, Box } from \"@material-ui/core\";\nconst useStyles = makeStyles(styles);\n\nfunction generate(element) {\n  return [\"step1: \", \"step2: \", \"step3: \"].map(value => React.cloneElement(element, {\n    key: value\n  }));\n}\n\nexport default function Tutorial() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        dense = _React$useState2[0],\n        setDense = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        secondary = _React$useState4[0],\n        setSecondary = _React$useState4[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hasError = _useState4[0],\n        setHasError = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api\", {\n      mode: 'cors'\n    }).then(res => res.json()).then(result => {\n      setState({\n        steps: result[\"setup\"][\"tutorial\"]\n      });\n      setLoading(false);\n      console.log(\"res from tutorial is\", result);\n      console.log(\"state from tutorial is\", state.steps);\n    }).catch(err => {\n      setHasError(true);\n      setLoading(false);\n    });\n  }, []);\n\n  if (hasError) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }\n    }, \"Error occurred.\");\n  } else if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(Box, {\n      boxShadow: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      boxShadow: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: classes.tutorialTitles,\n      title: \"Tutorial\",\n      subheader: \"This short tutorial is meant to guide you through the annotation process. \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.imageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: \"https://geodata.lib.utexas.edu/assets/blac_featured_image_map-dca4cbca4e07010e5bd201ad8fab1cc0aa9abd24a8842f90e3c1eef1834e8498.jpg\",\n      title: \"Paella dish\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      boxShadow: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: dense,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, generate( /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Single-line item\",\n      secondary: secondary ? 'Secondary text' : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }))))))));\n  }\n}","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/pages/Home/tutorial.js"],"names":["React","useEffect","useState","makeStyles","List","ListItem","ListItemAvatar","ListItemIcon","ListItemSecondaryAction","ListItemText","styles","Avatar","Card","CardActions","CardContent","CardHeader","Typography","CardMedia","Button","Box","useStyles","generate","element","map","value","cloneElement","key","Tutorial","classes","dense","setDense","secondary","setSecondary","state","setState","hasError","setHasError","loading","setLoading","fetch","mode","then","res","json","result","steps","console","log","catch","err","root","tutorialTitles","imageContainer","media"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport styles from \"./styles.js\"\nimport {\n    Avatar,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Typography,\n    CardMedia,\n    Button,\n    Box\n} from \"@material-ui/core\";\nconst useStyles = makeStyles(styles)\n\nfunction generate(element) {\n    return [\"step1: \", \"step2: \", \"step3: \"].map((value) =>\n        React.cloneElement(element, {\n            key: value,\n        }),\n    );\n}\n\nexport default function Tutorial() {\n    const classes = useStyles();\n    const [dense, setDense] = React.useState(false);\n    const [secondary, setSecondary] = React.useState(false);\n\n    const [state, setState] = useState([])\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading]= useState(false)\n    useEffect(() => {\n        setLoading(true)\n        fetch(\"/api\",{ mode: 'cors'}).then(res => res.json()).then(\n            (result) => {\n                setState({\n                    steps:result[\"setup\"][\"tutorial\"]\n                });\n                setLoading(false);\n                console.log(\"res from tutorial is\",result);\n                console.log(\"state from tutorial is\",state.steps)\n\n            }\n        ).catch(err => {\n            setHasError(true)\n        setLoading(false)})\n},[])\n    if (hasError) {\n        return <div>Error occurred.</div>;\n    } else if (loading) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <Box boxShadow={3}>\n                <Card className={classes.root}>\n                    <Box boxShadow={3}>\n                        <CardHeader\n                            className={classes.tutorialTitles}\n                            title=\"Tutorial\"\n                            subheader=\"This short tutorial is meant to guide you through the annotation process. \"\n                        />\n                    </Box>\n                    <div className={classes.imageContainer}>\n                        <CardMedia\n                            className={classes.media}\n                            image='https://geodata.lib.utexas.edu/assets/blac_featured_image_map-dca4cbca4e07010e5bd201ad8fab1cc0aa9abd24a8842f90e3c1eef1834e8498.jpg'\n                            title=\"Paella dish\"\n                        />\n                    </div>\n                    <Box boxShadow={3}>\n                        <CardContent>\n                            <List dense={dense}>\n                                {generate(\n                                    <ListItem>\n                                        <ListItemText\n                                            primary=\"Single-line item\"\n                                            secondary={secondary ? 'Secondary text' : null}\n                                        />\n                                    </ListItem>,\n                                )}\n                            </List>\n                        </CardContent>\n                    </Box>\n\n                </Card>\n            </Box>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}