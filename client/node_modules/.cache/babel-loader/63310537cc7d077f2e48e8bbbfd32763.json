{"ast":null,"code":"import _slicedToArray from \"/Users/yan/Documents/proj/ML4GIS/client/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yan/Documents/proj/ML4GIS/client/src/pages/Home/tutorial.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport styles from \"./styles.js\";\nimport { Avatar, Card, CardActions, CardContent, CardHeader, Typography, CardMedia, Button, Box } from \"@material-ui/core\";\nconst useStyles = makeStyles(styles);\n\nfunction generate(element) {\n  return [\"step1: \", \"step2: \", \"step3: \"].map(value => React.cloneElement(element, {\n    key: value\n  }));\n}\n\nfunction convert2Arr(data) {\n  let res = [];\n  console.log(\"converted\", res);\n}\n\nexport default function Tutorial() {\n  const classes = useStyles();\n  var steps;\n  var img;\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        dense = _React$useState2[0],\n        setDense = _React$useState2[1];\n\n  const _useState = useState({\n    steps: null,\n    imgUrl: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hasError = _useState4[0],\n        setHasError = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api\", {\n      mode: 'cors'\n    }).then(res => res.json()).then(result => {\n      console.log(\"start setState\");\n      setState({\n        steps: result[\"setup\"][\"tutorial\"][\"steps\"],\n        imgUrl: result[\"setup\"][\"tutorial\"][\"imgUrl\"]\n      });\n      setLoading(false);\n    }).catch(err => {\n      setHasError(err);\n      setLoading(false);\n    });\n  }, []);\n\n  if (hasError != false) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    }, \"Error: \", hasError.message);\n  } else if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  } else {\n    steps = state.steps;\n    img = state.imgUrl;\n    console.log(\"state from return is: \", typeof steps);\n    convert2Arr(steps);\n    return /*#__PURE__*/React.createElement(Box, {\n      boxShadow: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      boxShadow: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: classes.tutorialTitles,\n      title: \"Tutorial\",\n      subheader: \"This short tutorial is meant to guide you through the annotation process. \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.imageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: \"https://geodata.lib.utexas.edu/assets/blac_featured_image_map-dca4cbca4e07010e5bd201ad8fab1cc0aa9abd24a8842f90e3c1eef1834e8498.jpg\",\n      title: \"Paella dish\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      boxShadow: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: dense,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    })))));\n  }\n}","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/pages/Home/tutorial.js"],"names":["React","useEffect","useState","makeStyles","List","ListItem","ListItemAvatar","ListItemIcon","ListItemSecondaryAction","ListItemText","styles","Avatar","Card","CardActions","CardContent","CardHeader","Typography","CardMedia","Button","Box","useStyles","generate","element","map","value","cloneElement","key","convert2Arr","data","res","console","log","Tutorial","classes","steps","img","dense","setDense","imgUrl","state","setState","hasError","setHasError","loading","setLoading","fetch","mode","then","json","result","catch","err","message","root","tutorialTitles","imageContainer","media"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport styles from \"./styles.js\"\nimport {\n    Avatar,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Typography,\n    CardMedia,\n    Button,\n    Box\n} from \"@material-ui/core\";\nconst useStyles = makeStyles(styles);\n\nfunction generate(element) {\n    return [\"step1: \", \"step2: \", \"step3: \"].map((value) =>\n        React.cloneElement(element, {\n            key: value,\n        }),\n    );\n}\nfunction convert2Arr(data){\n    let res=[];\n    \n    console.log(\"converted\", res);\n\n}\nexport default function Tutorial() {\n    const classes = useStyles();\n    var steps;\n    var img;\n    const [dense, setDense] = React.useState(false);\n\n    const [state, setState] = useState({\n        steps:null,\n        imgUrl:null,\n    })\n    const [hasError, setHasError] = useState(false)\n    const [loading, setLoading]= useState(false)\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(\"/api\",{ mode: 'cors'}).then(res=>res.json()).then(\n            (result) => {\n                console.log(\"start setState\");\n                setState({\n                    steps:result[\"setup\"][\"tutorial\"][\"steps\"],\n                    imgUrl:result[\"setup\"][\"tutorial\"][\"imgUrl\"]\n                });\n                setLoading(false);\n            }\n        ).catch(err => {\n            setHasError(err)\n        setLoading(false)})\n},[])\n    if (hasError!=false) {\n        return <div>Error: {hasError.message}</div>;\n    } else if (loading) {\n        return <div>Loading...</div>;\n    } else {\n        steps=state.steps;\nimg=state.imgUrl;\n        console.log(\"state from return is: \", typeof steps);\n        convert2Arr(steps);\n        return (\n            <Box boxShadow={3}>\n                <Card className={classes.root}>\n                    <Box boxShadow={3}>\n                        <CardHeader\n                            className={classes.tutorialTitles}\n                            title=\"Tutorial\"\n                            subheader=\"This short tutorial is meant to guide you through the annotation process. \"\n                        />\n                    </Box>\n                    <div className={classes.imageContainer}>\n                        <CardMedia\n                            className={classes.media}\n                            image='https://geodata.lib.utexas.edu/assets/blac_featured_image_map-dca4cbca4e07010e5bd201ad8fab1cc0aa9abd24a8842f90e3c1eef1834e8498.jpg'\n                            title=\"Paella dish\"\n                        />\n                    </div>\n                    <Box boxShadow={3}>\n                        <CardContent>\n                            <List dense={dense}>\n                                {/*{generate(*/}\n                                {/*    <ListItem>*/}\n                                {/*        <ListItemText*/}\n                                {/*            primary=\"Single-line item\"*/}\n                                {/*            secondary={secondary ? 'Secondary text' : null}*/}\n                                {/*        />*/}\n                                {/*    </ListItem>,*/}\n                                {/*)}*/}\n                                {/*{*/}\n                                {/*    steps.map(function (step) {*/}\n                                {/*        return <div>{step}</div>*/}\n                                {/*    })*/}\n                                {/*}*/}\n                            </List>\n                        </CardContent>\n                    </Box>\n\n                </Card>\n            </Box>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}