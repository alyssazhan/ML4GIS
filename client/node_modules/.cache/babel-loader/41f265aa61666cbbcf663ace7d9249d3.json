{"ast":null,"code":"import _classCallCheck from \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\src\\\\pages\\\\Home\\\\SubmitHIT\\\\main_SubmitHIT.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport AnnotationTool from \"../annotateComponents/main_Annotate\";\nimport Button from 'react-bootstrap/Button';\nvar env = process.env.NODE_ENV;\n\nvar config = require(\"../../../config.json\");\n\nvar SubmitHIT = /*#__PURE__*/function (_Component) {\n  _inherits(SubmitHIT, _Component);\n\n  var _super = _createSuper(SubmitHIT);\n\n  function SubmitHIT(props) {\n    var _this;\n\n    _classCallCheck(this, SubmitHIT);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      EnabledTools: null,\n      AllowComments: null,\n      Tags: null,\n      imgData: null,\n      Local: null\n    };\n    _this.props = props;\n    _this.submitTask = _this.submitTask.bind(_assertThisInitialized(_this));\n    _this.getSubmissionUrl = _this.getSubmissionUrl.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.componentDidMount = _this.componentDidMount(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SubmitHIT, [{\n    key: \"getTools\",\n    value: function getTools(res) {\n      console.log(\"get tool:\", res.Tools['enenabledTools']);\n    } //get data from api\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      function getEnabledTools(data) {\n        var enabledTools = data[\"enabledTools\"];\n        var res = [];\n\n        for (var i = 0; i < enabledTools.length; i++) {\n          if (enabledTools[i][\"create point\"] == true) {\n            res.push(\"create-point\");\n          } else if (enabledTools[i][\"create rectangle\"] == true) {\n            res.push(\"create-rectangle\");\n          } else if (enabledTools[i][\"create polygon\"] == true) {\n            res.push(\"create-polygon\");\n          } else if (enabledTools[i][\"create polygon1\"] == true) {\n            res.push(\"create-polygon1\");\n          } else if (enabledTools[i][\"create ellipse\"] == true) {\n            res.push(\"create-circle\");\n          }\n        }\n\n        return res;\n      }\n\n      fetch(\"./backendConfig.json\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        var enabledTools = getEnabledTools(result[\"setup\"]);\n\n        _this2.setState({\n          isLoaded: true,\n          EnabledTools: enabledTools,\n          AllowComments: result[\"setup\"][\"allow-comments\"],\n          Tags: result[\"setup\"][\"tags\"],\n          Local: result[\"setup\"][\"local\"],\n          imgData: result[\"setup\"][\"imgData\"]\n        });\n\n        console.log(\"res is: \", result);\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"parseParameters\",\n    value: function parseParameters(url) {\n      var params = {\n        'assignmentId': null,\n        'hitId': null,\n        'workerId': null,\n        'turkSubmitTo': null\n      };\n      var queryString = url.split('?')[1];\n\n      if (queryString) {\n        var queryPieces = queryString.split('&');\n\n        for (var i = 0; i < queryPieces.length; ++i) {\n          var pieces = queryPieces[i].split('=');\n          var paramName = pieces[0];\n          var paramValue = pieces[1];\n\n          if (paramName in params) {\n            params[paramName] = paramValue;\n          }\n        }\n      }\n\n      return params;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var input = document.getElementById('submitButton');\n      input.setAttribute('value', JSON.stringify(this.state.imgData));\n      console.log(input);\n      var form = document.getElementById('submitForm');\n      HTMLFormElement.prototype.submit.call(form);\n    }\n  }, {\n    key: \"submitTask\",\n    value: function submitTask(e) {\n      // e.preventDefault();\n      console.log(\"POSTing data\");\n      axios.post(\"\".concat(this.getSubmissionUrl()), {}).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getSubmissionUrl\",\n    value: function getSubmissionUrl() {\n      var mturkParams = this.parseParameters(window.location.href);\n      var assignmentID = mturkParams['assignmentId'];\n      var url = config[\"submit\"][env] + \"/?assignmentId=\" + assignmentID;\n      console.log(url);\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          EnabledTools = _this$state.EnabledTools,\n          AllowComments = _this$state.AllowComments,\n          Tags = _this$state.Tags,\n          imgData = _this$state.imgData,\n          Local = _this$state.Local;\n      console.log(\"render data is:\", this.state);\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 20\n          }\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 20\n          }\n        }, \"Loading...\");\n      } else if (Local) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          id: \"submitForm\",\n          type: \"submit\",\n          method: \"POST\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AnnotationTool, {\n          name: \"AnnotationTool\",\n          type: \"submit\",\n          ref: function ref(value) {\n            _this3.value = value;\n          },\n          images: imgData,\n          enabledTools: EnabledTools,\n          regionTagList: Tags,\n          allowComments: AllowComments,\n          Local: Local,\n          imgData: imgData,\n          onExit: function onExit(output) {\n            _this3.setState({\n              imgData: output.images\n            });\n\n            console.log(\"output:\", JSON.stringify(output.images));\n            console.log(typeof {\n              imgData: imgData\n            });\n            console.log({\n              imgData: imgData\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outline-dark\",\n          size: \"lg\",\n          block: true,\n          name: \"Annotation\",\n          type: \"submit\",\n          id: \"submitButton\",\n          href: \"data:text/json;charset=utf-8,\".concat(encodeURIComponent(JSON.stringify(this.state.imgData))),\n          download: \"results.json\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }\n        }, \"Download Annotations as Json File\"))));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          id: \"submitForm\",\n          type: \"submit\",\n          method: \"POST\",\n          action: this.getSubmissionUrl(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AnnotationTool, {\n          name: \"AnnotationTool\",\n          type: \"submit\",\n          ref: function ref(value) {\n            _this3.value = value;\n          },\n          images: imgData,\n          enabledTools: EnabledTools,\n          regionTagList: Tags,\n          allowComments: AllowComments,\n          Local: Local,\n          imgData: imgData,\n          onExit: function onExit(output) {\n            _this3.setState({\n              imgData: output.images\n            });\n\n            console.log(\"output:\", JSON.stringify(output.images));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outline-dark\",\n          size: \"lg\",\n          block: true,\n          name: \"Annotation\",\n          type: \"submit\",\n          id: \"submitButton\",\n          value: JSON.stringify(this.state.imgData),\n          ref: function ref(value) {\n            _this3.value = value;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }\n        }, \"Complete the HIT\"))));\n      }\n    }\n  }]);\n\n  return SubmitHIT;\n}(Component);\n\nexport { SubmitHIT as default };","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/src/pages/Home/SubmitHIT/main_SubmitHIT.js"],"names":["React","Component","axios","AnnotationTool","Button","env","process","NODE_ENV","config","require","SubmitHIT","props","state","error","isLoaded","EnabledTools","AllowComments","Tags","imgData","Local","submitTask","bind","getSubmissionUrl","handleSubmit","componentDidMount","res","console","log","Tools","getEnabledTools","data","enabledTools","i","length","push","fetch","then","json","result","setState","url","params","queryString","split","queryPieces","pieces","paramName","paramValue","e","preventDefault","input","document","getElementById","setAttribute","JSON","stringify","form","HTMLFormElement","prototype","submit","call","post","response","catch","mturkParams","parseParameters","window","location","href","assignmentID","message","value","output","images","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport AnnotationTool from \"../annotateComponents/main_Annotate\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nvar env = process.env.NODE_ENV;\r\nvar config = require(\"../../../config.json\");\r\n\r\nexport default class SubmitHIT extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            EnabledTools:null,\r\n            AllowComments:null,\r\n            Tags:null,\r\n            imgData: null,\r\n            Local:null\r\n        }\r\n        this.props = props;\r\n        this.submitTask = this.submitTask.bind(this);\r\n        this.getSubmissionUrl = this.getSubmissionUrl.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.componentDidMount=this.componentDidMount(this);\r\n\r\n    }\r\n    getTools(res){\r\n        console.log(\"get tool:\",res.Tools['enenabledTools'])\r\n\r\n    }\r\n//get data from api\r\n    componentDidMount() {\r\n        function getEnabledTools(data) {\r\n            const enabledTools=data[\"enabledTools\"]\r\n            var res=[]\r\n            for (var i = 0; i < enabledTools.length; i++) {\r\n                if (enabledTools[i][\"create point\"]==true){\r\n                    res.push(\"create-point\")\r\n                }\r\n                else if (enabledTools[i][\"create rectangle\"]==true){\r\n                    res.push(\"create-rectangle\")\r\n                }\r\n                else if(enabledTools[i][\"create polygon\"]==true){\r\n                    res.push(\"create-polygon\")\r\n                }\r\n                else if(enabledTools[i][\"create polygon1\"]==true){\r\n                    res.push(\"create-polygon1\")\r\n                }\r\n                else if(enabledTools[i][\"create ellipse\"]==true){\r\n                    res.push(\"create-circle\")\r\n                }\r\n            }\r\n            return res\r\n        }\r\n\r\n        fetch(\"./backendConfig.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    const enabledTools=getEnabledTools(result[\"setup\"])\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        EnabledTools:enabledTools,\r\n                        AllowComments:result[\"setup\"][\"allow-comments\"],\r\n                        Tags:result[\"setup\"][\"tags\"],\r\n                        Local:result[\"setup\"][\"local\"],\r\n                        imgData:result[\"setup\"][\"imgData\"]\r\n                    });\r\n                    console.log(\"res is: \", result)\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    parseParameters(url){\r\n        var params = {\r\n            'assignmentId' : null,\r\n            'hitId' : null,\r\n            'workerId' : null,\r\n            'turkSubmitTo' : null\r\n        };\r\n\r\n        var queryString = url.split('?')[1];\r\n\r\n        if (queryString){\r\n            var queryPieces = queryString.split('&');\r\n            for (var i = 0; i < queryPieces.length; ++i){\r\n                var pieces = queryPieces[i].split('=');\r\n                var paramName = pieces[0];\r\n                var paramValue = pieces[1];\r\n                if(paramName in params){\r\n                    params[paramName] = paramValue;\r\n                }\r\n            }\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const input = document.getElementById('submitButton');\r\n        input.setAttribute('value', JSON.stringify(this.state.imgData));\r\n        console.log(input);\r\n        const form = document.getElementById('submitForm');\r\n        HTMLFormElement.prototype.submit.call(form);\r\n\r\n    }\r\n\r\n    submitTask(e) {\r\n        // e.preventDefault();\r\n        console.log(\"POSTing data\");\r\n        axios\r\n            .post(`${this.getSubmissionUrl()}`, {})\r\n            .then(function(response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    getSubmissionUrl() {\r\n        let mturkParams = this.parseParameters(window.location.href);\r\n        const assignmentID =  mturkParams['assignmentId'];\r\n        const url = config[\"submit\"][env] + \"/?assignmentId=\" + assignmentID;\r\n        console.log(url);\r\n        return url;\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, EnabledTools, AllowComments, Tags, imgData, Local} = this.state;\r\n        console.log(\"render data is:\", this.state)\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else if (Local) {\r\n            return (\r\n                <div id=\"Submit\">\r\n\r\n                    <form\r\n                        id=\"submitForm\"\r\n                        type=\"submit\"\r\n                        method=\"POST\"\r\n                    >\r\n                        <AnnotationTool\r\n                            name=\"AnnotationTool\"\r\n                            type=\"submit\"\r\n                            ref={value => {\r\n                                this.value = value;\r\n                            }}\r\n                            images={imgData}\r\n                            enabledTools={EnabledTools}\r\n                            regionTagList={Tags}\r\n                            allowComments={AllowComments}\r\n                            Local={Local}\r\n                            imgData={imgData}\r\n                            onExit={output => {\r\n                                this.setState({imgData: output.images});\r\n                                console.log(\"output:\", JSON.stringify(output.images));\r\n                                console.log(typeof({imgData}));\r\n                                console.log({imgData});\r\n                            }}\r\n\r\n                        />\r\n                        <div>\r\n                            <Button\r\n                                variant=\"outline-dark\" size=\"lg\" block\r\n                                name=\"Annotation\"\r\n                                type=\"submit\"\r\n                                id=\"submitButton\"\r\n                                href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n                                JSON.stringify(this.state.imgData)\r\n                                )}`}\r\n                                download=\"results.json\"\r\n                            >\r\n                            {`Download Annotations as Json File`}\r\n                            </Button>   \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div id=\"Submit\">\r\n\r\n                    <form\r\n                        id=\"submitForm\"\r\n                        type=\"submit\"\r\n                        method=\"POST\"\r\n                        action={this.getSubmissionUrl()}\r\n                    >\r\n                        <AnnotationTool\r\n                            name=\"AnnotationTool\"\r\n                            type=\"submit\"\r\n                            ref={value => {\r\n                                this.value = value;\r\n                            }}\r\n                            images={imgData}\r\n                            enabledTools={EnabledTools}\r\n                            regionTagList={Tags}\r\n                            allowComments={AllowComments}\r\n                            Local={Local}\r\n                            imgData={imgData}\r\n                            onExit={output => {\r\n                                this.setState({imgData: output.images});\r\n                                console.log(\"output:\", JSON.stringify(output.images));\r\n                            }}\r\n\r\n                        />\r\n                        <div>\r\n                            <Button variant=\"outline-dark\" size=\"lg\" block\r\n                                    name=\"Annotation\"\r\n                                    type=\"submit\"\r\n                                    id=\"submitButton\"\r\n                                    value={JSON.stringify(this.state.imgData)}\r\n                                    ref={value => {\r\n                                        this.value = value;\r\n                                    }}\r\n                            >Complete the HIT</Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}