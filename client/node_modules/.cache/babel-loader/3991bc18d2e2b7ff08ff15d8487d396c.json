{"ast":null,"code":"import _objectSpread from\"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\GitHub\\\\ML4GIS\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{moveRegion}from\"../ImageCanvas/regionTools.js\";import{getIn,setIn,updateIn}from\"seamless-immutable\";import isEqual from\"lodash/isEqual\";import getActiveImage from\"./getActiveImage\";import{saveToHistory}from\"./historyHandler.js\";import colors from\"../ImageCanvas/colors\";var getRandomId=function getRandomId(){return Math.random().toString().split(\".\")[1];};export default(function(state,action){// Throttle certain actions\nif(action.type===\"MOUSE_MOVE\"){if(Date.now()-(state.lastMouseMoveCall||0)<16)return state;state=setIn(state,[\"lastMouseMoveCall\"],Date.now());}if(!action.type.includes(\"MOUSE\")){state=setIn(state,[\"lastAction\"],action);}var _getActiveImage=getActiveImage(state),currentImageIndex=_getActiveImage.currentImageIndex,pathToActiveImage=_getActiveImage.pathToActiveImage,activeImage=_getActiveImage.activeImage;var getRegionIndex=function getRegionIndex(region){var regionId=typeof region===\"string\"||typeof region===\"number\"?region:region.id;if(!activeImage)return null;var regionIndex=(activeImage.regions||[]).findIndex(function(r){return r.id===regionId;});return regionIndex===-1?null:regionIndex;};var getRegion=function getRegion(regionId){if(!activeImage)return null;var regionIndex=getRegionIndex(regionId);if(regionIndex===null)return[null,null];var region=activeImage.regions[regionIndex];return[region,regionIndex];};var modifyRegion=function modifyRegion(regionId,obj){var _getRegion=getRegion(regionId),_getRegion2=_slicedToArray(_getRegion,2),region=_getRegion2[0],regionIndex=_getRegion2[1];if(!region)return state;if(obj!==null){return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",regionIndex]),_objectSpread(_objectSpread({},region),obj));}else{// delete region\nvar regions=activeImage.regions;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),(regions||[]).filter(function(r){return r.id!==region.id;}));}};var closeEditors=function closeEditors(state){if(currentImageIndex===null)return state;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),(activeImage.regions||[]).map(function(r){return _objectSpread(_objectSpread({},r),{},{editingLabels:false});}));};var setNewImage=function setNewImage(img,index){var _ref=typeof img===\"object\"?img:{src:img},src=_ref.src;return setIn(setIn(state,[\"selectedImage\"],index),[\"selectedImageFrameTime\"]);};switch(action.type){case\"@@INIT\":{return state;}case\"SELECT_IMAGE\":{return setNewImage(action.image,action.imageIndex);}case\"CHANGE_REGION\":{var regionIndex=getRegionIndex(action.region);if(regionIndex===null)return state;var oldRegion=activeImage.regions[regionIndex];if(oldRegion.cls!==action.region.cls){state=saveToHistory(state,\"Change Region Classification\");var clsIndex=state.regionClsList.indexOf(action.region.cls);if(clsIndex!==-1){action.region.color=colors[clsIndex%colors.length];}}if(!isEqual(oldRegion.tags,action.region.tags)){state=saveToHistory(state,\"Change Region Tags\");}if(!isEqual(oldRegion.comment,action.region.comment)){state=saveToHistory(state,\"Change Region Comment\");}return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",regionIndex]),action.region);}case\"CHANGE_IMAGE\":{if(!activeImage)return state;var delta=action.delta;for(var _i=0,_Object$keys=Object.keys(delta);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];if(key===\"cls\")saveToHistory(state,\"Change Image Class\");if(key===\"tags\")saveToHistory(state,\"Change Image Tags\");state=setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[key]),delta[key]);}return state;}case\"SELECT_REGION\":{var region=action.region;var _regionIndex=getRegionIndex(action.region);if(_regionIndex===null)return state;var regions=_toConsumableArray(activeImage.regions||[]).map(function(r){return _objectSpread(_objectSpread({},r),{},{highlighted:r.id===region.id,editingLabels:r.id===region.id});});return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),regions);}case\"BEGIN_MOVE_POINT\":{state=closeEditors(state);return setIn(state,[\"mode\"],{mode:\"MOVE_REGION\",regionId:action.point.id});}case\"BEGIN_BOX_TRANSFORM\":{var rectangle=action.rectangle,directions=action.directions;state=closeEditors(state);if(directions[0]===0&&directions[1]===0){return setIn(state,[\"mode\"],{mode:\"MOVE_REGION\",regionId:rectangle.id});}else{return setIn(state,[\"mode\"],{mode:\"RESIZE_BOX\",regionId:rectangle.id,freedom:directions,original:{x:rectangle.x,y:rectangle.y,w:rectangle.w,h:rectangle.h}});}}case\"BEGIN_MOVE_POLYGON_POINT\":{var polygon=action.polygon,pointIndex=action.pointIndex;state=closeEditors(state);if(state.mode&&state.mode.mode===\"DRAW_POLYGON\"&&pointIndex===0){return setIn(modifyRegion(polygon,{points:polygon.points.slice(0,-1),open:false}),[\"mode\"],null);}else{state=saveToHistory(state,\"Move Polygon Point\");}return setIn(state,[\"mode\"],{mode:\"MOVE_POLYGON_POINT\",regionId:polygon.id,pointIndex:pointIndex});}case\"ADD_POLYGON_POINT\":{var _polygon=action.polygon,point=action.point,_pointIndex=action.pointIndex;var _regionIndex2=getRegionIndex(_polygon);if(_regionIndex2===null)return state;var points=_toConsumableArray(_polygon.points);points.splice(_pointIndex,0,point);return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex2]),_objectSpread(_objectSpread({},_polygon),{},{points:points}));}case\"BEGIN_MOVE_POLYGON1_POINT\":{var polygon1=action.polygon1,point1Index=action.point1Index;state=closeEditors(state);if(state.mode&&state.mode.mode===\"DRAW_POLYGON1\"&&point1Index===0){return setIn(modifyRegion(polygon1,{points:polygon1.points.slice(0,-1),open:false}),[\"mode\"],null);}else{state=saveToHistory(state,\"Move Polygon Point\");}return setIn(state,[\"mode\"],{mode:\"MOVE_POLYGON_POINT\",regionId:polygon1.id,point1Index:point1Index});}case\"ADD_POLYGON1_POINT\":{var _polygon2=action.polygon1,point1=action.point1,_point1Index=action.point1Index;var _regionIndex3=getRegionIndex(_polygon2);if(_regionIndex3===null)return state;var _points=_toConsumableArray(_polygon2.points);var holes=_toConsumableArray(_polygon2.holes);var open=_toConsumableArray(_polygon2.open);var creatingHole=_toConsumableArray(_polygon2.creatingHole);_points.splice(_point1Index,0,point1);if(!open){creatingHole=true;holes.splice(_point1Index-_points.length,0,point1);}return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex3]),_objectSpread(_objectSpread({},_polygon2),{},{points:_points,holes:holes,creatingHole:creatingHole}));}case\"MOUSE_MOVE\":{var x=action.x,y=action.y;if(!state.mode)return state;if(!activeImage)return state;var _state=state,mouseDownAt=_state.mouseDownAt;switch(state.mode.mode){case\"MOVE_POLYGON_POINT\":{var _state$mode=state.mode,_pointIndex2=_state$mode.pointIndex,regionId=_state$mode.regionId;var _regionIndex4=getRegionIndex(regionId);if(_regionIndex4===null)return state;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex4,\"points\",_pointIndex2]),[x,y]);}case\"MOVE_POLYGON1_POINT\":{var _state$mode2=state.mode,_pointIndex3=_state$mode2.pointIndex,_regionId=_state$mode2.regionId;var _regionIndex5=getRegionIndex(_regionId);if(_regionIndex5===null)return state;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex5,\"points\",\"holes\",_pointIndex3]),[x,y]);}case\"MOVE_REGION\":{var _regionId2=state.mode.regionId;if(_regionId2===\"$$allowed_area\"){var _state2=state,_state2$allowedArea=_state2.allowedArea,w=_state2$allowedArea.w,h=_state2$allowedArea.h;return setIn(state,[\"allowedArea\"],{x:x-w/2,y:y-h/2,w:w,h:h});}var _regionIndex6=getRegionIndex(_regionId2);if(_regionIndex6===null)return state;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex6]),moveRegion(activeImage.regions[_regionIndex6],x,y));}case\"RESIZE_BOX\":{var _state$mode3=state.mode,_regionId3=_state$mode3.regionId,_state$mode3$freedom=_slicedToArray(_state$mode3.freedom,2),xFree=_state$mode3$freedom[0],yFree=_state$mode3$freedom[1],_state$mode3$original=_state$mode3.original,ox=_state$mode3$original.x,oy=_state$mode3$original.y,ow=_state$mode3$original.w,oh=_state$mode3$original.h;var dx=xFree===0?ox:xFree===-1?Math.min(ox+ow,x):ox;var dw=xFree===0?ow:xFree===-1?ow+(ox-dx):Math.max(0,ow+(x-ox-ow));var dy=yFree===0?oy:yFree===-1?Math.min(oy+oh,y):oy;var dh=yFree===0?oh:yFree===-1?oh+(oy-dy):Math.max(0,oh+(y-oy-oh));// determine if we should switch the freedom\nif(dw<=0.001){state=setIn(state,[\"mode\",\"freedom\"],[xFree*-1,yFree]);}if(dh<=0.001){state=setIn(state,[\"mode\",\"freedom\"],[xFree,yFree*-1]);}if(_regionId3===\"$$allowed_area\"){return setIn(state,[\"allowedArea\"],{x:dx,w:dw,y:dy,h:dh});}var _regionIndex7=getRegionIndex(_regionId3);if(_regionIndex7===null)return state;var _rectangle=activeImage.regions[_regionIndex7];return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex7]),_objectSpread(_objectSpread({},_rectangle),{},{x:dx,w:dw,y:dy,h:dh}));}case\"DRAW_POLYGON\":{var _regionId4=state.mode.regionId;var _getRegion3=getRegion(_regionId4),_getRegion4=_slicedToArray(_getRegion3,2),_region=_getRegion4[0],_regionIndex8=_getRegion4[1];if(!_region)return setIn(state,[\"mode\"],null);return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex8,\"points\",_region.points.length-1]),[x,y]);}case\"DRAW_POLYGON1\":{var _regionId5=state.mode.regionId;var _getRegion5=getRegion(_regionId5),_getRegion6=_slicedToArray(_getRegion5,2),_region2=_getRegion6[0],_regionIndex9=_getRegion6[1];if(!_region2)return setIn(state,[\"mode\"],null);return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex9,\"points\",\"holes\",\"createHole\",_region2.points.length+_region2.holes.length-1]),[x,y]);}case\"RESIZE_CIRCLE\":{var _regionId6=state.mode.regionId;var _getRegion7=getRegion(_regionId6),_getRegion8=_slicedToArray(_getRegion7,2),_region3=_getRegion8[0],_regionIndex10=_getRegion8[1];if(!_region3)return setIn(state,[\"mode\"],null);return setIn(state,[\"images\",currentImageIndex,\"regions\",_regionIndex10],_objectSpread(_objectSpread({},_region3),{},{xr:Math.abs(_region3.x-x),yr:Math.abs(_region3.y-y)}));}default:return state;}}case\"MOUSE_DOWN\":{if(!activeImage)return state;var _x=action.x,_y=action.y;state=setIn(state,[\"mouseDownAt\"],{x:_x,y:_y});if(state.mode){switch(state.mode.mode){case\"DRAW_POLYGON\":{var _getRegion9=getRegion(state.mode.regionId),_getRegion10=_slicedToArray(_getRegion9,2),_polygon3=_getRegion10[0],_regionIndex11=_getRegion10[1];if(!_polygon3)break;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex11]),_objectSpread(_objectSpread({},_polygon3),{},{points:_polygon3.points.concat([[_x,_y]])}));}case\"DRAW_POLYGON1\":{var _getRegion11=getRegion(state.mode.regionId),_getRegion12=_slicedToArray(_getRegion11,2),_polygon4=_getRegion12[0],region1Index=_getRegion12[1];if(!_polygon4)break;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",region1Index]),_objectSpread(_objectSpread({},_polygon4),{},{points:_polygon4.points.concat([[_x,_y]]),holes:_polygon4.holes.concat([[_x,_y]])}));}case\"DRAW_CIRCLE\":{var _getRegion13=getRegion(state.mode.regionId),_getRegion14=_slicedToArray(_getRegion13,2),circle=_getRegion14[0],_regionIndex12=_getRegion14[1];if(!circle)break;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex12]),_objectSpread({},circle));}default:break;}}var newRegion;var defaultRegionCls=undefined,defaultRegionColor=\"#ff0000\";if(activeImage&&(activeImage.regions||[]).length>0){defaultRegionCls=activeImage.regions.slice(-1)[0].cls;var _clsIndex=(state.regionClsList||[]).indexOf(defaultRegionCls);if(_clsIndex!==-1){defaultRegionColor=colors[_clsIndex%colors.length];}}switch(state.selectedTool){case\"create-point\":{state=saveToHistory(state,\"Create Point\");newRegion={type:\"point\",x:_x,y:_y,highlighted:true,editingLabels:true,color:defaultRegionColor,id:getRandomId(),cls:defaultRegionCls};break;}case\"create-rectangle\":{state=saveToHistory(state,\"Create Rectangle\");newRegion={type:\"rectangle\",x:_x,y:_y,w:0,h:0,highlighted:true,editingLabels:false,color:defaultRegionColor,cls:defaultRegionCls,id:getRandomId()};state=setIn(state,[\"mode\"],{mode:\"RESIZE_BOX\",editLabelEditorAfter:true,regionId:newRegion.id,freedom:[1,1],original:{x:_x,y:_y,w:newRegion.w,h:newRegion.h},isNew:true});break;}case\"create-polygon\":{if(state.mode&&state.mode.mode===\"DRAW_POLYGON\")break;state=saveToHistory(state,\"Create Polygon\");newRegion={type:\"polygon\",points:[[_x,_y],[_x,_y]],open:true,highlighted:true,color:defaultRegionColor,cls:defaultRegionCls,id:getRandomId()};state=setIn(state,[\"mode\"],{mode:\"DRAW_POLYGON\",regionId:newRegion.id});break;}case\"create-polygon1\":{if(state.mode&&state.mode.mode===\"DRAW_POLYGON1\")break;state=saveToHistory(state,\"Create Polygon1\");newRegion={type:\"polygon1\",points:[[_x,_y],[_x,_y]],holes:[[_x,_y],[_x,_y]],open:true,creatingHole:false,highlighted:true,color:defaultRegionColor,cls:defaultRegionCls,id:getRandomId()};state=setIn(state,[\"mode\"],{mode:\"DRAW_POLYGON1\",regionId:newRegion.id});break;}case\"create-circle\":{state=saveToHistory(state,\"Create Circle\");newRegion={type:\"circle\",x:_x,y:_y,xr:0.1,yr:0.1,highlighted:true,editingLabels:false,color:defaultRegionColor,id:getRandomId()};// state = unselectRegions(state)\nstate=setIn(state,[\"mode\"],{mode:\"RESIZE_CIRCLE\",editLabelEditorAfter:true,regionId:newRegion.id,original:{x:_x,y:_y,xr:newRegion.xr,yr:newRegion.yr}});break;}default:break;}var _regions=_toConsumableArray(getIn(state,pathToActiveImage).regions||[]).map(function(r){return setIn(r,[\"editingLabels\"],false).setIn([\"highlighted\"],false);}).concat(newRegion?[newRegion]:[]);return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),_regions);}case\"MOUSE_UP\":{var _x2=action.x,_y2=action.y;var _state3=state,_state3$mouseDownAt=_state3.mouseDownAt,_mouseDownAt=_state3$mouseDownAt===void 0?{x:_x2,y:_y2}:_state3$mouseDownAt;if(!state.mode)return state;state=setIn(state,[\"mouseDownAt\"],null);switch(state.mode.mode){case\"RESIZE_BOX\":{if(state.mode.isNew){if(Math.abs(state.mode.original.x-_x2)<0.002||Math.abs(state.mode.original.y-_y2)<0.002){return setIn(modifyRegion(state.mode.regionId,null),[\"mode\"],null);}}if(state.mode.editLabelEditorAfter){return _objectSpread(_objectSpread({},modifyRegion(state.mode.regionId,{editingLabels:true})),{},{mode:null});}}case\"MOVE_REGION\":case\"RESIZE_CIRCLE\":{if(state.mode.editLabelEditorAfter){return _objectSpread(_objectSpread({},modifyRegion(state.mode.regionId,{editingLabels:true})),{},{mode:null});}}case\"MOVE_POLYGON_POINT\":{return _objectSpread(_objectSpread({},state),{},{mode:null});}case\"MOVE_POLYGON1_POINT\":{return _objectSpread(_objectSpread({},state),{},{mode:null});}default:return state;}}case\"OPEN_REGION_EDITOR\":{var _region4=action.region;var _regionIndex13=getRegionIndex(action.region);if(_regionIndex13===null)return state;var newRegions=setIn(activeImage.regions.map(function(r){return _objectSpread(_objectSpread({},r),{},{highlighted:false,editingLabels:false});}),[_regionIndex13],_objectSpread(_objectSpread({},(activeImage.regions||[])[_regionIndex13]),{},{highlighted:true,editingLabels:true}));return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),newRegions);}case\"CLOSE_REGION_EDITOR\":{var _regionIndex14=getRegionIndex(action.region);if(_regionIndex14===null)return state;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\",_regionIndex14]),_objectSpread(_objectSpread({},(activeImage.regions||[])[_regionIndex14]),{},{editingLabels:false}));}case\"DELETE_REGION\":{var _regionIndex15=getRegionIndex(action.region);if(_regionIndex15===null)return state;return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),(activeImage.regions||[]).filter(function(r){return r.id!==action.region.id;}));}case\"DELETE_SELECTED_REGION\":{return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),(activeImage.regions||[]).filter(function(r){return!r.highlighted;}));}case\"HEADER_BUTTON_CLICKED\":{var buttonName=action.buttonName.toLowerCase();switch(buttonName){case\"prev\":{if(currentImageIndex===null)return state;if(currentImageIndex===0)return state;return setNewImage(state.images[currentImageIndex-1],currentImageIndex-1);}case\"next\":{if(currentImageIndex===null)return state;if(currentImageIndex===state.images.length-1)return state;return setNewImage(state.images[currentImageIndex+1],currentImageIndex+1);}case\"clone\":{if(currentImageIndex===null)return state;if(currentImageIndex===state.images.length-1)return state;return setIn(setNewImage(state.images[currentImageIndex+1],currentImageIndex+1),[\"images\",currentImageIndex+1,\"regions\"],activeImage.regions);}case\"hotkeys\":{return state;}case\"exit\":case\"done\":{return state;}default:return state;}}case\"SELECT_TOOL\":{state=setIn(state,[\"mode\"],null);return setIn(state,[\"selectedTool\"],action.selectedTool);}case\"BEGIN_CIRCLE_TRANSFORM\":{var _circle=action.circle,_directions=action.directions;state=closeEditors(state);if(_directions===\"MOVE_REGION\"){return setIn(state,[\"mode\"],{mode:\"MOVE_REGION\",regionId:_circle.id});}else{return setIn(state,[\"mode\"],{mode:\"RESIZE_CIRCLE\",regionId:_circle.id,original:{x:_circle.x,y:_circle.y,rx:_circle.rx,ry:_circle.ry}});}}case\"CANCEL\":{var _state4=state,mode=_state4.mode;if(mode){switch(mode.mode){case\"DRAW_POLYGON\":{var _regionId7=mode.regionId;return modifyRegion(_regionId7,null);}case\"DRAW_POLYGON1\":{var _regionId8=mode.regionId;return modifyRegion(_regionId8,null);}case\"MOVE_POLYGON_POINT\":case\"MOVE_POLYGON1_POINT\":case\"RESIZE_BOX\":case\"RESIZE_CIRCLE\":case\"MOVE_REGION\":{return setIn(state,[\"mode\"],null);}default:return state;}}// Close any open boxes\nvar _regions2=activeImage.regions;if(_regions2&&_regions2.some(function(r){return r.editingLabels;})){return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),_regions2.map(function(r){return _objectSpread(_objectSpread({},r),{},{editingLabels:false});}));}else if(_regions2){return setIn(state,[].concat(_toConsumableArray(pathToActiveImage),[\"regions\"]),_regions2.map(function(r){return _objectSpread(_objectSpread({},r),{},{highlighted:false});}));}break;}default:break;}return state;});","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/src/pages/Home/annotateComponents/reducers/generalReducer.js"],"names":["moveRegion","getIn","setIn","updateIn","isEqual","getActiveImage","saveToHistory","colors","getRandomId","Math","random","toString","split","state","action","type","Date","now","lastMouseMoveCall","includes","currentImageIndex","pathToActiveImage","activeImage","getRegionIndex","region","regionId","id","regionIndex","regions","findIndex","r","getRegion","modifyRegion","obj","filter","closeEditors","map","editingLabels","setNewImage","img","index","src","image","imageIndex","oldRegion","cls","clsIndex","regionClsList","indexOf","color","length","tags","comment","delta","Object","keys","key","highlighted","mode","point","rectangle","directions","freedom","original","x","y","w","h","polygon","pointIndex","points","slice","open","splice","polygon1","point1Index","point1","holes","creatingHole","mouseDownAt","allowedArea","xFree","yFree","ox","oy","ow","oh","dx","min","dw","max","dy","dh","xr","abs","yr","concat","region1Index","circle","newRegion","defaultRegionCls","undefined","defaultRegionColor","selectedTool","editLabelEditorAfter","isNew","newRegions","buttonName","toLowerCase","images","rx","ry","some"],"mappings":"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","sourcesContent":["import type { MainLayoutState, Action } from \"../MainLayout/types\"\r\nimport { moveRegion } from \"../ImageCanvas/regionTools.js\"\r\nimport { getIn, setIn, updateIn } from \"seamless-immutable\"\r\nimport isEqual from \"lodash/isEqual\"\r\nimport getActiveImage from \"./getActiveImage\"\r\nimport { saveToHistory } from \"./historyHandler.js\"\r\nimport colors from \"../ImageCanvas/colors\"\r\n\r\nconst getRandomId = () => Math.random().toString().split(\".\")[1]\r\n\r\nexport default (state: MainLayoutState, action: Action) => {\r\n  // Throttle certain actions\r\n  if (action.type === \"MOUSE_MOVE\") {\r\n    if (Date.now() - ((state: any).lastMouseMoveCall || 0) < 16) return state\r\n    state = setIn(state, [\"lastMouseMoveCall\"], Date.now())\r\n  }\r\n  if (!action.type.includes(\"MOUSE\")) {\r\n    state = setIn(state, [\"lastAction\"], action)\r\n  }\r\n\r\n  const { currentImageIndex, pathToActiveImage, activeImage } = getActiveImage(\r\n    state\r\n  )\r\n\r\n  const getRegionIndex = (region) => {\r\n    const regionId =\r\n      typeof region === \"string\" || typeof region === \"number\"\r\n        ? region\r\n        : region.id\r\n    if (!activeImage) return null\r\n    const regionIndex = (activeImage.regions || []).findIndex(\r\n      (r) => r.id === regionId\r\n    )\r\n    return regionIndex === -1 ? null : regionIndex\r\n  }\r\n  const getRegion = (regionId) => {\r\n    if (!activeImage) return null\r\n    const regionIndex = getRegionIndex(regionId)\r\n    if (regionIndex === null) return [null, null]\r\n    const region = activeImage.regions[regionIndex]\r\n    return [region, regionIndex]\r\n  }\r\n  const modifyRegion = (regionId, obj) => {\r\n    const [region, regionIndex] = getRegion(regionId)\r\n    if (!region) return state\r\n    if (obj !== null) {\r\n      return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\r\n        ...region,\r\n        ...obj,\r\n      })\r\n    } else {\r\n      // delete region\r\n      const regions = activeImage.regions\r\n      return setIn(\r\n        state,\r\n        [...pathToActiveImage, \"regions\"],\r\n        (regions || []).filter((r) => r.id !== region.id)\r\n      )\r\n    }\r\n  }\r\n\r\n  const closeEditors = (state: MainLayoutState) => {\r\n    if (currentImageIndex === null) return state\r\n    return setIn(\r\n      state,\r\n      [...pathToActiveImage, \"regions\"],\r\n      (activeImage.regions || []).map((r) => ({\r\n        ...r,\r\n        editingLabels: false,\r\n      }))\r\n    )\r\n  }\r\n\r\n  const setNewImage = (img: string | Object, index: number) => {\r\n    let { src } = typeof img === \"object\" ? img : { src: img }\r\n    return setIn(\r\n      setIn(state, [\"selectedImage\"], index),\r\n      [\"selectedImageFrameTime\"]\r\n    )\r\n  }\r\n\r\n  switch (action.type) {\r\n    case \"@@INIT\": {\r\n      return state\r\n    }\r\n    case \"SELECT_IMAGE\": {\r\n      return setNewImage(action.image, action.imageIndex)\r\n    }\r\n    case \"CHANGE_REGION\": {\r\n      const regionIndex = getRegionIndex(action.region)\r\n      if (regionIndex === null) return state\r\n      const oldRegion = activeImage.regions[regionIndex]\r\n      if (oldRegion.cls !== action.region.cls) {\r\n        state = saveToHistory(state, \"Change Region Classification\")\r\n        const clsIndex = state.regionClsList.indexOf(action.region.cls)\r\n        if (clsIndex !== -1) {\r\n          action.region.color = colors[clsIndex % colors.length]\r\n        }\r\n      }\r\n      if (!isEqual(oldRegion.tags, action.region.tags)) {\r\n        state = saveToHistory(state, \"Change Region Tags\")\r\n      }\r\n      if (!isEqual(oldRegion.comment, action.region.comment)) {\r\n        state = saveToHistory(state, \"Change Region Comment\")\r\n      }\r\n      return setIn(\r\n        state,\r\n        [...pathToActiveImage, \"regions\", regionIndex],\r\n        action.region\r\n      )\r\n    }\r\n    case \"CHANGE_IMAGE\": {\r\n      if (!activeImage) return state\r\n      const { delta } = action\r\n      for (const key of Object.keys(delta)) {\r\n        if (key === \"cls\") saveToHistory(state, \"Change Image Class\")\r\n        if (key === \"tags\") saveToHistory(state, \"Change Image Tags\")\r\n        state = setIn(state, [...pathToActiveImage, key], delta[key])\r\n      }\r\n      return state\r\n    }\r\n    case \"SELECT_REGION\": {\r\n      const { region } = action\r\n      const regionIndex = getRegionIndex(action.region)\r\n      if (regionIndex === null) return state\r\n      const regions = [...(activeImage.regions || [])].map((r) => ({\r\n        ...r,\r\n        highlighted: r.id === region.id,\r\n        editingLabels: r.id === region.id,\r\n      }))\r\n      return setIn(state, [...pathToActiveImage, \"regions\"], regions)\r\n    }\r\n    case \"BEGIN_MOVE_POINT\": {\r\n      state = closeEditors(state)\r\n      return setIn(state, [\"mode\"], {\r\n        mode: \"MOVE_REGION\",\r\n        regionId: action.point.id,\r\n      })\r\n    }\r\n    case \"BEGIN_BOX_TRANSFORM\": {\r\n      const { rectangle, directions } = action\r\n      state = closeEditors(state)\r\n      if (directions[0] === 0 && directions[1] === 0) {\r\n        return setIn(state, [\"mode\"], { mode: \"MOVE_REGION\", regionId: rectangle.id })\r\n      } else {\r\n        return setIn(state, [\"mode\"], {\r\n          mode: \"RESIZE_BOX\",\r\n          regionId: rectangle.id,\r\n          freedom: directions,\r\n          original: { x: rectangle.x, y: rectangle.y, w: rectangle.w, h: rectangle.h },\r\n        })\r\n      }\r\n    }\r\n    case \"BEGIN_MOVE_POLYGON_POINT\": {\r\n      const { polygon, pointIndex } = action\r\n      state = closeEditors(state)\r\n      if (\r\n        state.mode &&\r\n        state.mode.mode === \"DRAW_POLYGON\" &&\r\n        pointIndex === 0\r\n      ) {\r\n        return setIn(\r\n          modifyRegion(polygon, {\r\n            points: polygon.points.slice(0, -1),\r\n            open: false,\r\n          }),\r\n          [\"mode\"],\r\n          null\r\n        )\r\n      } else {\r\n        state = saveToHistory(state, \"Move Polygon Point\")\r\n      }\r\n      return setIn(state, [\"mode\"], {\r\n        mode: \"MOVE_POLYGON_POINT\",\r\n        regionId: polygon.id,\r\n        pointIndex,\r\n      })\r\n    }\r\n    case \"ADD_POLYGON_POINT\": {\r\n      const { polygon, point, pointIndex } = action\r\n      const regionIndex = getRegionIndex(polygon)\r\n      if (regionIndex === null) return state\r\n      const points = [...polygon.points]\r\n      points.splice(pointIndex, 0, point)\r\n      return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\r\n        ...polygon,\r\n        points,\r\n      })\r\n    }\r\n    case \"BEGIN_MOVE_POLYGON1_POINT\": {\r\n      const { polygon1, point1Index } = action\r\n      state = closeEditors(state)\r\n      if (\r\n          state.mode &&\r\n          state.mode.mode === \"DRAW_POLYGON1\" &&\r\n          point1Index === 0\r\n      ) {\r\n        return setIn(\r\n            modifyRegion(polygon1, {\r\n              points: polygon1.points.slice(0, -1),\r\n              open: false,\r\n            }),\r\n            [\"mode\"],\r\n            null\r\n        )\r\n      } else {\r\n        state = saveToHistory(state, \"Move Polygon Point\")\r\n      }\r\n      return setIn(state, [\"mode\"], {\r\n        mode: \"MOVE_POLYGON_POINT\",\r\n        regionId: polygon1.id,\r\n        point1Index,\r\n      })\r\n    }\r\n    case \"ADD_POLYGON1_POINT\": {\r\n      const { polygon1, point1, point1Index} = action\r\n      const regionIndex = getRegionIndex(polygon1)\r\n      if (regionIndex === null) return state\r\n      const points = [...polygon1.points]\r\n      const holes = [...polygon1.holes]\r\n      const open=[...polygon1.open]\r\n      let creatingHole=[...polygon1.creatingHole]\r\n\r\n      points.splice(point1Index, 0, point1)\r\n      if(!open){\r\n        creatingHole=true\r\n        holes.splice(point1Index-points.length, 0, point1);\r\n      }\r\n\r\n      return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\r\n        ...polygon1,\r\n        points,\r\n        holes,\r\n        creatingHole,\r\n      })\r\n    }\r\n    case \"MOUSE_MOVE\": {\r\n      const { x, y } = action\r\n\r\n      if (!state.mode) return state\r\n      if (!activeImage) return state\r\n      const { mouseDownAt } = state\r\n      switch (state.mode.mode) {\r\n        case \"MOVE_POLYGON_POINT\": {\r\n          const { pointIndex, regionId } = state.mode\r\n          const regionIndex = getRegionIndex(regionId)\r\n          if (regionIndex === null) return state\r\n          return setIn(\r\n            state,\r\n            [\r\n              ...pathToActiveImage,\r\n              \"regions\",\r\n              regionIndex,\r\n              \"points\",\r\n              pointIndex,\r\n            ],\r\n            [x, y]\r\n          )\r\n        }\r\n        case \"MOVE_POLYGON1_POINT\": {\r\n          const { pointIndex, regionId } = state.mode\r\n          const regionIndex = getRegionIndex(regionId)\r\n          if (regionIndex === null) return state\r\n          return setIn(\r\n              state,\r\n              [\r\n                ...pathToActiveImage,\r\n                \"regions\",\r\n                regionIndex,\r\n                \"points\",\r\n                \"holes\",\r\n                pointIndex,\r\n              ],\r\n              [x, y]\r\n          )\r\n        }\r\n        case \"MOVE_REGION\": {\r\n          const { regionId } = state.mode\r\n          if (regionId === \"$$allowed_area\") {\r\n            const {\r\n              allowedArea: { w, h },\r\n            } = state\r\n            return setIn(state, [\"allowedArea\"], {\r\n              x: x - w / 2,\r\n              y: y - h / 2,\r\n              w,\r\n              h,\r\n            })\r\n          }\r\n          const regionIndex = getRegionIndex(regionId)\r\n          if (regionIndex === null) return state\r\n          return setIn(\r\n            state,\r\n            [...pathToActiveImage, \"regions\", regionIndex],\r\n            moveRegion(activeImage.regions[regionIndex], x, y)\r\n          )\r\n        }\r\n        case \"RESIZE_BOX\": {\r\n          const {\r\n            regionId,\r\n            freedom: [xFree, yFree],\r\n            original: { x: ox, y: oy, w: ow, h: oh },\r\n          } = state.mode\r\n\r\n          const dx = xFree === 0 ? ox : xFree === -1 ? Math.min(ox + ow, x) : ox\r\n          const dw =\r\n            xFree === 0\r\n              ? ow\r\n              : xFree === -1\r\n              ? ow + (ox - dx)\r\n              : Math.max(0, ow + (x - ox - ow))\r\n          const dy = yFree === 0 ? oy : yFree === -1 ? Math.min(oy + oh, y) : oy\r\n          const dh =\r\n            yFree === 0\r\n              ? oh\r\n              : yFree === -1\r\n              ? oh + (oy - dy)\r\n              : Math.max(0, oh + (y - oy - oh))\r\n\r\n          // determine if we should switch the freedom\r\n          if (dw <= 0.001) {\r\n            state = setIn(state, [\"mode\", \"freedom\"], [xFree * -1, yFree])\r\n          }\r\n          if (dh <= 0.001) {\r\n            state = setIn(state, [\"mode\", \"freedom\"], [xFree, yFree * -1])\r\n          }\r\n\r\n          if (regionId === \"$$allowed_area\") {\r\n            return setIn(state, [\"allowedArea\"], {\r\n              x: dx,\r\n              w: dw,\r\n              y: dy,\r\n              h: dh,\r\n            })\r\n          }\r\n\r\n          const regionIndex = getRegionIndex(regionId)\r\n          if (regionIndex === null) return state\r\n          const rectangle= activeImage.regions[regionIndex]\r\n\r\n          return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\r\n            ...rectangle,\r\n            x: dx,\r\n            w: dw,\r\n            y: dy,\r\n            h: dh,\r\n          })\r\n        }\r\n        case \"DRAW_POLYGON\": {\r\n          const { regionId } = state.mode\r\n          const [region, regionIndex] = getRegion(regionId)\r\n          if (!region) return setIn(state, [\"mode\"], null)\r\n          return setIn(\r\n            state,\r\n            [\r\n              ...pathToActiveImage,\r\n              \"regions\",\r\n              regionIndex,\r\n              \"points\",\r\n              (region: any).points.length - 1,\r\n            ],\r\n            [x, y]\r\n          )\r\n        }\r\n        case \"DRAW_POLYGON1\": {\r\n          const { regionId } = state.mode\r\n          const [region, regionIndex] = getRegion(regionId)\r\n          if (!region) return setIn(state, [\"mode\"], null)\r\n          return setIn(\r\n              state,\r\n              [\r\n                ...pathToActiveImage,\r\n                \"regions\",\r\n                regionIndex,\r\n                \"points\",\r\n                \"holes\",\r\n                \"createHole\",\r\n                (region: any).points.length+(region: any).holes.length - 1,\r\n              ],\r\n              [x, y]\r\n          )\r\n        }\r\n        case \"RESIZE_CIRCLE\": {\r\n          const { regionId } = state.mode\r\n          const [region, regionIndex] = getRegion(regionId)\r\n          if (!region) return setIn(state, [\"mode\"], null)\r\n          return setIn(\r\n              state,\r\n              [\"images\", currentImageIndex, \"regions\", regionIndex],\r\n              {\r\n                ...region,\r\n                xr: Math.abs(region.x - x),\r\n                yr: Math.abs(region.y - y)\r\n              }\r\n          )\r\n        }\r\n        default:\r\n          return state\r\n      }\r\n    }\r\n    case \"MOUSE_DOWN\": {\r\n      if (!activeImage) return state\r\n      const { x, y } = action\r\n\r\n      state = setIn(state, [\"mouseDownAt\"], { x, y })\r\n\r\n      if (state.mode) {\r\n        switch (state.mode.mode) {\r\n          case \"DRAW_POLYGON\": {\r\n            const [polygon, regionIndex] = getRegion(state.mode.regionId)\r\n            if (!polygon) break\r\n            return setIn(\r\n              state,\r\n              [...pathToActiveImage, \"regions\", regionIndex],\r\n              { ...polygon, points: polygon.points.concat([[x, y]]) }\r\n            )\r\n          }\r\n          case \"DRAW_POLYGON1\": {\r\n            const [polygon1, region1Index] = getRegion(state.mode.regionId)\r\n            if (!polygon1) break\r\n            return setIn(\r\n                state,\r\n                [...pathToActiveImage, \"regions\", region1Index],\r\n                { ...polygon1, points: polygon1.points.concat([[x, y]]),holes:polygon1.holes.concat([[x, y]]) }\r\n            )\r\n          }\r\n          case \"DRAW_CIRCLE\": {\r\n            const [circle, regionIndex] = getRegion(state.mode.regionId)\r\n            if (!circle) break\r\n            return setIn(\r\n                state,\r\n                [...pathToActiveImage, \"regions\", regionIndex],\r\n                { ...circle}\r\n            )\r\n          }\r\n          default:\r\n            break\r\n        }\r\n      }\r\n\r\n      let newRegion\r\n      let defaultRegionCls = undefined,\r\n        defaultRegionColor = \"#ff0000\"\r\n      if (activeImage && (activeImage.regions || []).length > 0) {\r\n        defaultRegionCls = activeImage.regions.slice(-1)[0].cls\r\n        const clsIndex = (state.regionClsList || []).indexOf(defaultRegionCls)\r\n        if (clsIndex !== -1) {\r\n          defaultRegionColor = colors[clsIndex % colors.length]\r\n        }\r\n      }\r\n\r\n      switch (state.selectedTool) {\r\n        case \"create-point\": {\r\n          state = saveToHistory(state, \"Create Point\")\r\n          newRegion = {\r\n            type: \"point\",\r\n            x,\r\n            y,\r\n            highlighted: true,\r\n            editingLabels: true,\r\n            color: defaultRegionColor,\r\n            id: getRandomId(),\r\n            cls: defaultRegionCls,\r\n          }\r\n          break\r\n        }\r\n        case \"create-rectangle\": {\r\n          state = saveToHistory(state, \"Create Rectangle\")\r\n          newRegion = {\r\n            type: \"rectangle\",\r\n            x: x,\r\n            y: y,\r\n            w: 0,\r\n            h: 0,\r\n            highlighted: true,\r\n            editingLabels: false,\r\n            color: defaultRegionColor,\r\n            cls: defaultRegionCls,\r\n            id: getRandomId(),\r\n          }\r\n          state = setIn(state, [\"mode\"], {\r\n            mode: \"RESIZE_BOX\",\r\n            editLabelEditorAfter: true,\r\n            regionId: newRegion.id,\r\n            freedom: [1, 1],\r\n            original: { x, y, w: newRegion.w, h: newRegion.h },\r\n            isNew: true,\r\n          })\r\n          break\r\n        }\r\n        case \"create-polygon\": {\r\n          if (state.mode && state.mode.mode === \"DRAW_POLYGON\") break\r\n          state = saveToHistory(state, \"Create Polygon\")\r\n          newRegion = {\r\n            type: \"polygon\",\r\n            points: [\r\n              [x, y],\r\n              [x, y],\r\n            ],\r\n            open: true,\r\n            highlighted: true,\r\n            color: defaultRegionColor,\r\n            cls: defaultRegionCls,\r\n            id: getRandomId(),\r\n          }\r\n          state = setIn(state, [\"mode\"], {\r\n            mode: \"DRAW_POLYGON\",\r\n            regionId: newRegion.id,\r\n          })\r\n          break\r\n        }\r\n        case \"create-polygon1\": {\r\n          if (state.mode && state.mode.mode === \"DRAW_POLYGON1\") break\r\n          state = saveToHistory(state, \"Create Polygon1\")\r\n          newRegion = {\r\n            type: \"polygon1\",\r\n            points: [\r\n              [x, y],\r\n              [x, y],\r\n            ],\r\n            holes:[[x, y],\r\n              [x, y],],\r\n            open: true,\r\n            creatingHole:false,\r\n            highlighted: true,\r\n            color: defaultRegionColor,\r\n            cls: defaultRegionCls,\r\n            id: getRandomId(),\r\n          }\r\n          state = setIn(state, [\"mode\"], {\r\n            mode: \"DRAW_POLYGON1\",\r\n            regionId: newRegion.id,\r\n          })\r\n          break\r\n        }\r\n        case \"create-circle\": {\r\n          state = saveToHistory(state, \"Create Circle\")\r\n          newRegion = {\r\n            type: \"circle\",\r\n            x: x,\r\n            y: y,\r\n            xr: 0.1,\r\n            yr: 0.1,\r\n            highlighted: true,\r\n            editingLabels: false,\r\n            color: defaultRegionColor,\r\n            id: getRandomId()\r\n          }\r\n          // state = unselectRegions(state)\r\n          state = setIn(state, [\"mode\"], {\r\n            mode: \"RESIZE_CIRCLE\",\r\n            editLabelEditorAfter: true,\r\n            regionId: newRegion.id,\r\n            original: { x: x, y: y, xr: newRegion.xr, yr: newRegion.yr }\r\n          })\r\n          break\r\n        }\r\n        default:\r\n          break\r\n      }\r\n\r\n      const regions = [...(getIn(state, pathToActiveImage).regions || [])]\r\n        .map((r) =>\r\n          setIn(r, [\"editingLabels\"], false).setIn([\"highlighted\"], false)\r\n        )\r\n        .concat(newRegion ? [newRegion] : [])\r\n\r\n      return setIn(state, [...pathToActiveImage, \"regions\"], regions)\r\n    }\r\n    case \"MOUSE_UP\": {\r\n      const { x, y } = action\r\n\r\n      const { mouseDownAt = { x, y } } = state\r\n      if (!state.mode) return state\r\n      state = setIn(state, [\"mouseDownAt\"], null)\r\n      switch (state.mode.mode) {\r\n        case \"RESIZE_BOX\": {\r\n          if (state.mode.isNew) {\r\n            if (\r\n              Math.abs(state.mode.original.x - x) < 0.002 ||\r\n              Math.abs(state.mode.original.y - y) < 0.002\r\n            ) {\r\n              return setIn(\r\n                modifyRegion(state.mode.regionId, null),\r\n                [\"mode\"],\r\n                null\r\n              )\r\n            }\r\n          }\r\n          if (state.mode.editLabelEditorAfter) {\r\n            return {\r\n              ...modifyRegion(state.mode.regionId, { editingLabels: true }),\r\n              mode: null,\r\n            }\r\n          }\r\n        }\r\n        case \"MOVE_REGION\":\r\n        case \"RESIZE_CIRCLE\": {\r\n          if (state.mode.editLabelEditorAfter) {\r\n            return {\r\n              ...modifyRegion(state.mode.regionId, { editingLabels: true }),\r\n              mode: null\r\n            }\r\n          }\r\n        }\r\n        case \"MOVE_POLYGON_POINT\": {\r\n          return { ...state, mode: null }\r\n        }\r\n        case \"MOVE_POLYGON1_POINT\": {\r\n          return { ...state, mode: null }\r\n        }\r\n        default:\r\n          return state\r\n      }\r\n    }\r\n    case \"OPEN_REGION_EDITOR\": {\r\n      const { region } = action\r\n      const regionIndex = getRegionIndex(action.region)\r\n      if (regionIndex === null) return state\r\n      const newRegions = setIn(\r\n        activeImage.regions.map((r) => ({\r\n          ...r,\r\n          highlighted: false,\r\n          editingLabels: false,\r\n        })),\r\n        [regionIndex],\r\n        {\r\n          ...(activeImage.regions || [])[regionIndex],\r\n          highlighted: true,\r\n          editingLabels: true,\r\n        }\r\n      )\r\n      return setIn(state, [...pathToActiveImage, \"regions\"], newRegions)\r\n    }\r\n    case \"CLOSE_REGION_EDITOR\": {\r\n      const regionIndex = getRegionIndex(action.region)\r\n      if (regionIndex === null) return state\r\n      return setIn(state, [...pathToActiveImage, \"regions\", regionIndex], {\r\n        ...(activeImage.regions || [])[regionIndex],\r\n        editingLabels: false,\r\n      })\r\n    }\r\n    case \"DELETE_REGION\": {\r\n      const regionIndex = getRegionIndex(action.region)\r\n      if (regionIndex === null) return state\r\n      return setIn(\r\n        state,\r\n        [...pathToActiveImage, \"regions\"],\r\n        (activeImage.regions || []).filter((r) => r.id !== action.region.id)\r\n      )\r\n    }\r\n    case \"DELETE_SELECTED_REGION\": {\r\n      return setIn(\r\n        state,\r\n        [...pathToActiveImage, \"regions\"],\r\n        (activeImage.regions || []).filter((r) => !r.highlighted)\r\n      )\r\n    }\r\n    case \"HEADER_BUTTON_CLICKED\": {\r\n      const buttonName = action.buttonName.toLowerCase()\r\n      switch (buttonName) {\r\n        case \"prev\": {\r\n          if (currentImageIndex === null) return state\r\n          if (currentImageIndex === 0) return state\r\n          return setNewImage(\r\n            state.images[currentImageIndex - 1],\r\n            currentImageIndex - 1\r\n          )\r\n        }\r\n        case \"next\": {\r\n          if (currentImageIndex === null) return state\r\n          if (currentImageIndex === state.images.length - 1) return state\r\n          return setNewImage(\r\n            state.images[currentImageIndex + 1],\r\n            currentImageIndex + 1\r\n          )\r\n        }\r\n        case \"clone\": {\r\n          if (currentImageIndex === null) return state\r\n          if (currentImageIndex === state.images.length - 1) return state\r\n          return setIn(\r\n            setNewImage(\r\n              state.images[currentImageIndex + 1],\r\n              currentImageIndex + 1\r\n            ),\r\n            [\"images\", currentImageIndex + 1, \"regions\"],\r\n            activeImage.regions\r\n          )\r\n        }\r\n        case \"hotkeys\": {\r\n          return state\r\n        }\r\n        case \"exit\":\r\n        case \"done\": {\r\n          return state\r\n        }\r\n        default:\r\n          return state\r\n      }\r\n    }\r\n    case \"SELECT_TOOL\": {\r\n\r\n      state = setIn(state, [\"mode\"], null)\r\n      return setIn(state, [\"selectedTool\"], action.selectedTool)\r\n    }\r\n    case \"BEGIN_CIRCLE_TRANSFORM\": {\r\n      const { circle, directions } = action\r\n      state = closeEditors(state)\r\n      if (directions === \"MOVE_REGION\") {\r\n        return setIn(state, [\"mode\"], {\r\n          mode: \"MOVE_REGION\",\r\n          regionId: circle.id\r\n        })\r\n      } else {\r\n        return setIn(state, [\"mode\"], {\r\n          mode: \"RESIZE_CIRCLE\",\r\n          regionId: circle.id,\r\n          original: { x: circle.x, y: circle.y, rx: circle.rx, ry: circle.ry }\r\n        })\r\n      }\r\n    }\r\n    case \"CANCEL\": {\r\n      const { mode } = state\r\n      if (mode) {\r\n        switch (mode.mode) {\r\n          case \"DRAW_POLYGON\": {\r\n            const { regionId } = mode\r\n            return modifyRegion(regionId, null)\r\n          }\r\n          case \"DRAW_POLYGON1\": {\r\n            const { regionId } = mode\r\n            return modifyRegion(regionId, null)\r\n          }\r\n          case \"MOVE_POLYGON_POINT\":\r\n          case \"MOVE_POLYGON1_POINT\":\r\n          case \"RESIZE_BOX\":\r\n          case \"RESIZE_CIRCLE\":\r\n          case \"MOVE_REGION\": {\r\n            return setIn(state, [\"mode\"], null)\r\n          }\r\n          default:\r\n            return state\r\n        }\r\n      }\r\n      // Close any open boxes\r\n      const regions: any = activeImage.regions\r\n      if (regions && regions.some((r) => r.editingLabels)) {\r\n        return setIn(\r\n          state,\r\n          [...pathToActiveImage, \"regions\"],\r\n          regions.map((r) => ({\r\n            ...r,\r\n            editingLabels: false,\r\n          }))\r\n        )\r\n      } else if (regions) {\r\n        return setIn(\r\n          state,\r\n          [...pathToActiveImage, \"regions\"],\r\n          regions.map((r) => ({\r\n            ...r,\r\n            highlighted: false,\r\n          }))\r\n        )\r\n      }\r\n      break\r\n    }\r\n\r\n\r\n    default:\r\n      break\r\n  }\r\n  return state\r\n}\r\n"]},"metadata":{},"sourceType":"module"}