{"ast":null,"code":"import { setIn, without } from \"seamless-immutable\";\nimport getImpliedVideoRegions from \"./get-implied-video-regions\";\nimport { saveToHistory } from \"./history-handler.js\";\nexport default ((state, action) => {\n  const copyImpliedRegions = () => {\n    return setIn(saveToHistory(state, \"Add Keyframe\"), [\"keyframes\", state.currentVideoTime || 0], {\n      regions: getImpliedVideoRegions(state.keyframes, state.currentVideoTime)\n    });\n  };\n\n  switch (action.type) {\n    case \"IMAGE_OR_VIDEO_LOADED\":\n      {\n        const duration = action.metadata.duration;\n\n        if (typeof duration === \"number\") {\n          return setIn(state, [\"videoDuration\"], duration * 1000);\n        }\n      }\n\n    case \"HEADER_BUTTON_CLICKED\":\n      {\n        switch (action.buttonName.toLowerCase()) {\n          case \"play\":\n            return setIn(state, [\"videoPlaying\"], true);\n\n          case \"pause\":\n            return setIn(state, [\"videoPlaying\"], false);\n        }\n      }\n\n    case \"CHANGE_VIDEO_TIME\":\n      {\n        return setIn(state, [\"currentVideoTime\"], action.newTime);\n      }\n\n    case \"CHANGE_VIDEO_PLAYING\":\n      {\n        return setIn(state, [\"videoPlaying\"], action.isPlaying);\n      }\n\n    case \"DELETE_KEYFRAME\":\n      {\n        return setIn(state, [\"keyframes\"], without(state.keyframes, action.time));\n      }\n\n    default:\n      break;\n  } // Before the user modifies regions, copy the interpolated regions over to a\n  // new keyframe\n\n\n  if (!state.keyframes[state.currentVideoTime]) {\n    switch (action.type) {\n      case \"BEGIN_BOX_TRANSFORM\":\n      case \"BEGIN_MOVE_POINT\":\n      case \"BEGIN_MOVE_KEYPOINT\":\n      case \"BEGIN_MOVE_POLYGON_POINT\":\n      case \"ADD_POLYGON_POINT\":\n      case \"SELECT_REGION\":\n      case \"CHANGE_REGION\":\n      case \"DELETE_REGION\":\n      case \"OPEN_REGION_EDITOR\":\n        return copyImpliedRegions();\n\n      case \"MOUSE_DOWN\":\n        {\n          switch (state.selectedTool) {\n            case \"create-point\":\n            case \"create-polygon\":\n            case \"create-box\":\n            case \"create-keypoints\":\n              return copyImpliedRegions();\n\n            default:\n              break;\n          }\n\n          break;\n        }\n\n      default:\n        break;\n    }\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/yan/Documents/proj/ML4GIS/client/src/annotateComponents/Annotator/reducers/video-reducer.js"],"names":["setIn","without","getImpliedVideoRegions","saveToHistory","state","action","copyImpliedRegions","currentVideoTime","regions","keyframes","type","duration","metadata","buttonName","toLowerCase","newTime","isPlaying","time","selectedTool"],"mappings":"AAMA,SAASA,KAAT,EAAgBC,OAAhB,QAA+B,oBAA/B;AACA,OAAOC,sBAAP,MAAmC,6BAAnC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,gBAAe,CAACC,KAAD,EAAwCC,MAAxC,KAA2D;AACxE,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,WAAON,KAAK,CACVG,aAAa,CAACC,KAAD,EAAQ,cAAR,CADH,EAEV,CAAC,WAAD,EAAcA,KAAK,CAACG,gBAAN,IAA0B,CAAxC,CAFU,EAGV;AACEC,MAAAA,OAAO,EAAEN,sBAAsB,CAC7BE,KAAK,CAACK,SADuB,EAE7BL,KAAK,CAACG,gBAFuB;AADjC,KAHU,CAAZ;AAUD,GAXD;;AAaA,UAAQF,MAAM,CAACK,IAAf;AACE,SAAK,uBAAL;AAA8B;AAAA,cACpBC,QADoB,GACPN,MAAM,CAACO,QADA,CACpBD,QADoB;;AAE5B,YAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,iBAAOX,KAAK,CAACI,KAAD,EAAQ,CAAC,eAAD,CAAR,EAA2BO,QAAQ,GAAG,IAAtC,CAAZ;AACD;AACF;;AACD,SAAK,uBAAL;AAA8B;AAC5B,gBAAQN,MAAM,CAACQ,UAAP,CAAkBC,WAAlB,EAAR;AACE,eAAK,MAAL;AACE,mBAAOd,KAAK,CAACI,KAAD,EAAQ,CAAC,cAAD,CAAR,EAA0B,IAA1B,CAAZ;;AACF,eAAK,OAAL;AACE,mBAAOJ,KAAK,CAACI,KAAD,EAAQ,CAAC,cAAD,CAAR,EAA0B,KAA1B,CAAZ;AAJJ;AAMD;;AACD,SAAK,mBAAL;AAA0B;AACxB,eAAOJ,KAAK,CAACI,KAAD,EAAQ,CAAC,kBAAD,CAAR,EAA8BC,MAAM,CAACU,OAArC,CAAZ;AACD;;AACD,SAAK,sBAAL;AAA6B;AAC3B,eAAOf,KAAK,CAACI,KAAD,EAAQ,CAAC,cAAD,CAAR,EAA0BC,MAAM,CAACW,SAAjC,CAAZ;AACD;;AACD,SAAK,iBAAL;AAAwB;AACtB,eAAOhB,KAAK,CAACI,KAAD,EAAQ,CAAC,WAAD,CAAR,EAAuBH,OAAO,CAACG,KAAK,CAACK,SAAP,EAAkBJ,MAAM,CAACY,IAAzB,CAA9B,CAAZ;AACD;;AACD;AACE;AAzBJ,GAdwE,CA0CxE;AACA;;;AACA,MAAI,CAACb,KAAK,CAACK,SAAN,CAAgBL,KAAK,CAACG,gBAAtB,CAAL,EAA8C;AAC5C,YAAQF,MAAM,CAACK,IAAf;AACE,WAAK,qBAAL;AACA,WAAK,kBAAL;AACA,WAAK,qBAAL;AACA,WAAK,0BAAL;AACA,WAAK,mBAAL;AACA,WAAK,eAAL;AACA,WAAK,eAAL;AACA,WAAK,eAAL;AACA,WAAK,oBAAL;AACE,eAAOJ,kBAAkB,EAAzB;;AACF,WAAK,YAAL;AAAmB;AACjB,kBAAQF,KAAK,CAACc,YAAd;AACE,iBAAK,cAAL;AACA,iBAAK,gBAAL;AACA,iBAAK,YAAL;AACA,iBAAK,kBAAL;AACE,qBAAOZ,kBAAkB,EAAzB;;AACF;AACE;AAPJ;;AASA;AACD;;AACD;AACE;AAxBJ;AA0BD;;AAED,SAAOF,KAAP;AACD,CA1ED","sourcesContent":["// @flow\n\nimport type {\n  MainLayoutVideoAnnotationState,\n  Action,\n} from \"../../MainLayout/types\"\nimport { setIn, without } from \"seamless-immutable\"\nimport getImpliedVideoRegions from \"./get-implied-video-regions\"\nimport { saveToHistory } from \"./history-handler.js\"\n\nexport default (state: MainLayoutVideoAnnotationState, action: Action) => {\n  const copyImpliedRegions = () => {\n    return setIn(\n      saveToHistory(state, \"Add Keyframe\"),\n      [\"keyframes\", state.currentVideoTime || 0],\n      {\n        regions: getImpliedVideoRegions(\n          state.keyframes,\n          state.currentVideoTime\n        ),\n      }\n    )\n  }\n\n  switch (action.type) {\n    case \"IMAGE_OR_VIDEO_LOADED\": {\n      const { duration } = action.metadata\n      if (typeof duration === \"number\") {\n        return setIn(state, [\"videoDuration\"], duration * 1000)\n      }\n    }\n    case \"HEADER_BUTTON_CLICKED\": {\n      switch (action.buttonName.toLowerCase()) {\n        case \"play\":\n          return setIn(state, [\"videoPlaying\"], true)\n        case \"pause\":\n          return setIn(state, [\"videoPlaying\"], false)\n      }\n    }\n    case \"CHANGE_VIDEO_TIME\": {\n      return setIn(state, [\"currentVideoTime\"], action.newTime)\n    }\n    case \"CHANGE_VIDEO_PLAYING\": {\n      return setIn(state, [\"videoPlaying\"], action.isPlaying)\n    }\n    case \"DELETE_KEYFRAME\": {\n      return setIn(state, [\"keyframes\"], without(state.keyframes, action.time))\n    }\n    default:\n      break\n  }\n\n  // Before the user modifies regions, copy the interpolated regions over to a\n  // new keyframe\n  if (!state.keyframes[state.currentVideoTime]) {\n    switch (action.type) {\n      case \"BEGIN_BOX_TRANSFORM\":\n      case \"BEGIN_MOVE_POINT\":\n      case \"BEGIN_MOVE_KEYPOINT\":\n      case \"BEGIN_MOVE_POLYGON_POINT\":\n      case \"ADD_POLYGON_POINT\":\n      case \"SELECT_REGION\":\n      case \"CHANGE_REGION\":\n      case \"DELETE_REGION\":\n      case \"OPEN_REGION_EDITOR\":\n        return copyImpliedRegions()\n      case \"MOUSE_DOWN\": {\n        switch (state.selectedTool) {\n          case \"create-point\":\n          case \"create-polygon\":\n          case \"create-box\":\n          case \"create-keypoints\":\n            return copyImpliedRegions()\n          default:\n            break\n        }\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}