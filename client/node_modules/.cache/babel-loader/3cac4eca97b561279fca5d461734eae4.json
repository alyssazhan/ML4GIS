{"ast":null,"code":"/* eslint-disable */\nimport writeText from 'copy-to-clipboard';\nimport { useCallback } from 'react';\nimport useMountedState from './useMountedState';\nimport useSetState from './useSetState';\n\nvar useCopyToClipboard = function useCopyToClipboard() {\n  var isMounted = useMountedState();\n\n  var _a = useSetState({\n    value: undefined,\n    error: undefined,\n    noUserInteraction: true\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var copyToClipboard = useCallback(function (value) {\n    try {\n      if (process.env.NODE_ENV === 'development') {\n        if (typeof value !== 'string') {\n          console.error(\"Cannot copy typeof \" + typeof value + \" to clipboard, must be a string\");\n        }\n      }\n\n      var noUserInteraction = writeText(value);\n\n      if (!isMounted()) {\n        return;\n      }\n\n      setState({\n        value: value,\n        error: undefined,\n        noUserInteraction: noUserInteraction\n      });\n    } catch (error) {\n      if (!isMounted()) {\n        return;\n      }\n\n      setState({\n        value: undefined,\n        error: error,\n        noUserInteraction: true\n      });\n    }\n  }, []);\n  return [state, copyToClipboard];\n};\n\nexport default useCopyToClipboard;","map":{"version":3,"sources":["D:/GitHub/ML4GIS/client/node_modules/react-use/esm/useCopyToClipboard.js"],"names":["writeText","useCallback","useMountedState","useSetState","useCopyToClipboard","isMounted","_a","value","undefined","error","noUserInteraction","state","setState","copyToClipboard","process","env","NODE_ENV","console"],"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,IAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAY;AACjC,MAAIC,SAAS,GAAGH,eAAe,EAA/B;;AACA,MAAII,EAAE,GAAGH,WAAW,CAAC;AACjBI,IAAAA,KAAK,EAAEC,SADU;AAEjBC,IAAAA,KAAK,EAAED,SAFU;AAGjBE,IAAAA,iBAAiB,EAAE;AAHF,GAAD,CAApB;AAAA,MAIIC,KAAK,GAAGL,EAAE,CAAC,CAAD,CAJd;AAAA,MAImBM,QAAQ,GAAGN,EAAE,CAAC,CAAD,CAJhC;;AAKA,MAAIO,eAAe,GAAGZ,WAAW,CAAC,UAAUM,KAAV,EAAiB;AAC/C,QAAI;AACA,UAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,YAAI,OAAOT,KAAP,KAAiB,QAArB,EAA+B;AAC3BU,UAAAA,OAAO,CAACR,KAAR,CAAc,wBAAwB,OAAOF,KAA/B,GAAuC,iCAArD;AACH;AACJ;;AACD,UAAIG,iBAAiB,GAAGV,SAAS,CAACO,KAAD,CAAjC;;AACA,UAAI,CAACF,SAAS,EAAd,EAAkB;AACd;AACH;;AACDO,MAAAA,QAAQ,CAAC;AACLL,QAAAA,KAAK,EAAEA,KADF;AAELE,QAAAA,KAAK,EAAED,SAFF;AAGLE,QAAAA,iBAAiB,EAAEA;AAHd,OAAD,CAAR;AAKH,KAfD,CAgBA,OAAOD,KAAP,EAAc;AACV,UAAI,CAACJ,SAAS,EAAd,EAAkB;AACd;AACH;;AACDO,MAAAA,QAAQ,CAAC;AACLL,QAAAA,KAAK,EAAEC,SADF;AAELC,QAAAA,KAAK,EAAEA,KAFF;AAGLC,QAAAA,iBAAiB,EAAE;AAHd,OAAD,CAAR;AAKH;AACJ,GA3BgC,EA2B9B,EA3B8B,CAAjC;AA4BA,SAAO,CAACC,KAAD,EAAQE,eAAR,CAAP;AACH,CApCD;;AAqCA,eAAeT,kBAAf","sourcesContent":["/* eslint-disable */\r\nimport writeText from 'copy-to-clipboard';\r\nimport { useCallback } from 'react';\r\nimport useMountedState from './useMountedState';\r\nimport useSetState from './useSetState';\r\nvar useCopyToClipboard = function () {\r\n    var isMounted = useMountedState();\r\n    var _a = useSetState({\r\n        value: undefined,\r\n        error: undefined,\r\n        noUserInteraction: true,\r\n    }), state = _a[0], setState = _a[1];\r\n    var copyToClipboard = useCallback(function (value) {\r\n        try {\r\n            if (process.env.NODE_ENV === 'development') {\r\n                if (typeof value !== 'string') {\r\n                    console.error(\"Cannot copy typeof \" + typeof value + \" to clipboard, must be a string\");\r\n                }\r\n            }\r\n            var noUserInteraction = writeText(value);\r\n            if (!isMounted()) {\r\n                return;\r\n            }\r\n            setState({\r\n                value: value,\r\n                error: undefined,\r\n                noUserInteraction: noUserInteraction,\r\n            });\r\n        }\r\n        catch (error) {\r\n            if (!isMounted()) {\r\n                return;\r\n            }\r\n            setState({\r\n                value: undefined,\r\n                error: error,\r\n                noUserInteraction: true,\r\n            });\r\n        }\r\n    }, []);\r\n    return [state, copyToClipboard];\r\n};\r\nexport default useCopyToClipboard;\r\n"]},"metadata":{},"sourceType":"module"}