{"ast":null,"code":"import { useRef } from \"react\";\nimport { Matrix } from \"transformation-matrix-js\";\n\nvar getDefaultMat = function getDefaultMat() {\n  return Matrix.from(1, 0, 0, 1, -10, -10);\n};\n\nexport default (function (_ref) {\n  var canvasEl = _ref.canvasEl,\n      changeMat = _ref.changeMat,\n      changeDragging = _ref.changeDragging,\n      zoomStart = _ref.zoomStart,\n      zoomEnd = _ref.zoomEnd,\n      changeZoomStart = _ref.changeZoomStart,\n      changeZoomEnd = _ref.changeZoomEnd,\n      layoutParams = _ref.layoutParams,\n      zoomWithPrimary = _ref.zoomWithPrimary,\n      dragWithPrimary = _ref.dragWithPrimary,\n      mat = _ref.mat,\n      _onMouseMove = _ref.onMouseMove,\n      _onMouseUp = _ref.onMouseUp,\n      _onMouseDown = _ref.onMouseDown,\n      dragging = _ref.dragging;\n  var mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  var prevMousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n\n  var zoomIn = function zoomIn(direction, point) {\n    var _ref2 = [point.x, point.y],\n        mx = _ref2[0],\n        my = _ref2[1];\n    var scale = typeof direction === \"object\" ? direction.to / mat.a : 1 + 0.2 * direction; //  mutating mat here\n\n    mat.translate(mx, my).scaleU(scale);\n    if (mat.a > 2) mat.scaleU(2 / mat.a);\n    if (mat.a < 0.05) mat.scaleU(0.05 / mat.a);\n    mat.translate(-mx, -my);\n    changeMat(mat.clone());\n  };\n\n  var mouseEvents = {\n    onMouseMove: function onMouseMove(e) {\n      var _canvasEl$current$get = canvasEl.current.getBoundingClientRect(),\n          left = _canvasEl$current$get.left,\n          top = _canvasEl$current$get.top;\n\n      prevMousePosition.current.x = mousePosition.current.x;\n      prevMousePosition.current.y = mousePosition.current.y;\n      mousePosition.current.x = e.clientX - left;\n      mousePosition.current.y = e.clientY - top;\n      var projMouse = mat.applyToPoint(mousePosition.current.x, mousePosition.current.y);\n\n      if (zoomWithPrimary && zoomStart) {\n        changeZoomEnd(projMouse);\n      }\n\n      var _layoutParams$current = layoutParams.current,\n          iw = _layoutParams$current.iw,\n          ih = _layoutParams$current.ih;\n\n      _onMouseMove({\n        x: projMouse.x / iw,\n        y: projMouse.y / ih\n      });\n\n      if (dragging) {\n        mat.translate(prevMousePosition.current.x - mousePosition.current.x, prevMousePosition.current.y - mousePosition.current.y);\n        changeMat(mat.clone());\n      }\n\n      e.preventDefault();\n    },\n    onMouseDown: function onMouseDown(e) {\n      var specialEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      e.preventDefault();\n      if (e.button === 1 || e.button === 2 || e.button === 0 && dragWithPrimary) return changeDragging(true);\n      var projMouse = mat.applyToPoint(mousePosition.current.x, mousePosition.current.y);\n\n      if (zoomWithPrimary && e.button === 0) {\n        changeZoomStart(projMouse);\n        changeZoomEnd(projMouse);\n        return;\n      }\n\n      if (e.button === 0) {\n        if (specialEvent.type === \"resize-box\") {}\n\n        if (specialEvent.type === \"move-region\") {}\n\n        var _layoutParams$current2 = layoutParams.current,\n            iw = _layoutParams$current2.iw,\n            ih = _layoutParams$current2.ih;\n\n        _onMouseDown({\n          x: projMouse.x / iw,\n          y: projMouse.y / ih\n        });\n      }\n    },\n    onMouseUp: function onMouseUp(e) {\n      e.preventDefault();\n      var projMouse = mat.applyToPoint(mousePosition.current.x, mousePosition.current.y);\n\n      if (zoomStart) {\n        var _zoomEnd = projMouse;\n\n        if (Math.abs(zoomStart.x - _zoomEnd.x) < 10 && Math.abs(zoomStart.y - _zoomEnd.y) < 10) {\n          if (mat.a < 1) {\n            zoomIn({\n              to: 1\n            }, mousePosition.current);\n          } else {\n            zoomIn({\n              to: 0.25\n            }, mousePosition.current);\n          }\n        } else {\n          var _layoutParams$current3 = layoutParams.current,\n              iw = _layoutParams$current3.iw,\n              ih = _layoutParams$current3.ih;\n\n          if (zoomStart.x > _zoomEnd.x) {\n            ;\n            var _ref3 = [_zoomEnd.x, zoomStart.x];\n            zoomStart.x = _ref3[0];\n            _zoomEnd.x = _ref3[1];\n          }\n\n          if (zoomStart.y > _zoomEnd.y) {\n            ;\n            var _ref4 = [_zoomEnd.y, zoomStart.y];\n            zoomStart.y = _ref4[0];\n            _zoomEnd.y = _ref4[1];\n          } // The region defined by zoomStart and zoomEnd should be the new transform\n\n\n          var scale = Math.min((_zoomEnd.x - zoomStart.x) / iw, (_zoomEnd.y - zoomStart.y) / ih);\n          if (scale < 0.05) scale = 0.05;\n          if (scale > 10) scale = 10;\n          var newMat = getDefaultMat().translate(zoomStart.x, zoomStart.y).scaleU(scale);\n          changeMat(newMat.clone());\n        }\n\n        changeZoomStart(null);\n        changeZoomEnd(null);\n      }\n\n      if (e.button === 1 || e.button === 2 || e.button === 0 && dragWithPrimary) return changeDragging(false);\n\n      if (e.button === 0) {\n        var _layoutParams$current4 = layoutParams.current,\n            _iw = _layoutParams$current4.iw,\n            _ih = _layoutParams$current4.ih;\n\n        _onMouseUp({\n          x: projMouse.x / _iw,\n          y: projMouse.y / _ih\n        });\n      }\n    },\n    onWheel: function onWheel(e) {\n      var direction = e.deltaY > 0 ? 1 : e.deltaY < 0 ? -1 : 0;\n      zoomIn(direction, mousePosition.current);\n    },\n    onContextMenu: function onContextMenu(e) {\n      e.preventDefault();\n    }\n  };\n  return {\n    mouseEvents: mouseEvents,\n    mousePosition: mousePosition\n  };\n});","map":{"version":3,"sources":["C:/Users/pccis/Desktop/amturk-client/src/pages/Home/annotateComponents/ImageCanvas/useMouse.js"],"names":["useRef","Matrix","getDefaultMat","from","canvasEl","changeMat","changeDragging","zoomStart","zoomEnd","changeZoomStart","changeZoomEnd","layoutParams","zoomWithPrimary","dragWithPrimary","mat","onMouseMove","onMouseUp","onMouseDown","dragging","mousePosition","x","y","prevMousePosition","zoomIn","direction","point","mx","my","scale","to","a","translate","scaleU","clone","mouseEvents","e","current","getBoundingClientRect","left","top","clientX","clientY","projMouse","applyToPoint","iw","ih","preventDefault","specialEvent","button","type","Math","abs","min","newMat","onWheel","deltaY","onContextMenu"],"mappings":"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","sourcesContent":["\nimport { useRef } from \"react\"\nimport { Matrix } from \"transformation-matrix-js\"\n\nconst getDefaultMat = () => Matrix.from(1, 0, 0, 1, -10, -10)\n\nexport default ({\n  canvasEl,\n  changeMat,\n  changeDragging,\n  zoomStart,\n  zoomEnd,\n  changeZoomStart,\n  changeZoomEnd,\n  layoutParams,\n  zoomWithPrimary,\n  dragWithPrimary,\n  mat,\n  onMouseMove,\n  onMouseUp,\n  onMouseDown,\n  dragging,\n}) => {\n  const mousePosition = useRef({ x: 0, y: 0 })\n  const prevMousePosition = useRef({ x: 0, y: 0 })\n\n  const zoomIn = (direction, point) => {\n    const [mx, my] = [point.x, point.y]\n    let scale =\n      typeof direction === \"object\" ? direction.to / mat.a : 1 + 0.2 * direction\n\n    //  mutating mat here\n    mat.translate(mx, my).scaleU(scale)\n    if (mat.a > 2) mat.scaleU(2 / mat.a)\n    if (mat.a < 0.05) mat.scaleU(0.05 / mat.a)\n    mat.translate(-mx, -my)\n\n    changeMat(mat.clone())\n  }\n\n  const mouseEvents = {\n    onMouseMove: (e) => {\n      const { left, top } = canvasEl.current.getBoundingClientRect()\n      prevMousePosition.current.x = mousePosition.current.x\n      prevMousePosition.current.y = mousePosition.current.y\n      mousePosition.current.x = e.clientX - left\n      mousePosition.current.y = e.clientY - top\n\n      const projMouse = mat.applyToPoint(\n        mousePosition.current.x,\n        mousePosition.current.y\n      )\n\n      if (zoomWithPrimary && zoomStart) {\n        changeZoomEnd(projMouse)\n      }\n\n      const { iw, ih } = layoutParams.current\n      onMouseMove({ x: projMouse.x / iw, y: projMouse.y / ih })\n\n      if (dragging) {\n        mat.translate(\n          prevMousePosition.current.x - mousePosition.current.x,\n          prevMousePosition.current.y - mousePosition.current.y\n        )\n\n        changeMat(mat.clone())\n      }\n      e.preventDefault()\n    },\n    onMouseDown: (e, specialEvent = {}) => {\n      e.preventDefault()\n\n      if (\n        e.button === 1 ||\n        e.button === 2 ||\n        (e.button === 0 && dragWithPrimary)\n      )\n        return changeDragging(true)\n\n      const projMouse = mat.applyToPoint(\n        mousePosition.current.x,\n        mousePosition.current.y\n      )\n      if (zoomWithPrimary && e.button === 0) {\n        changeZoomStart(projMouse)\n        changeZoomEnd(projMouse)\n        return\n      }\n      if (e.button === 0) {\n        if (specialEvent.type === \"resize-box\") {\n        }\n        if (specialEvent.type === \"move-region\") {\n        }\n        const { iw, ih } = layoutParams.current\n        onMouseDown({ x: projMouse.x / iw, y: projMouse.y / ih })\n      }\n    },\n    onMouseUp: (e) => {\n      e.preventDefault()\n      const projMouse = mat.applyToPoint(\n        mousePosition.current.x,\n        mousePosition.current.y\n      )\n      if (zoomStart) {\n        const zoomEnd = projMouse\n        if (\n          Math.abs(zoomStart.x - zoomEnd.x) < 10 &&\n          Math.abs(zoomStart.y - zoomEnd.y) < 10\n        ) {\n          if (mat.a < 1) {\n            zoomIn({ to: 1 }, mousePosition.current)\n          } else {\n            zoomIn({ to: 0.25 }, mousePosition.current)\n          }\n        } else {\n          const { iw, ih } = layoutParams.current\n\n          if (zoomStart.x > zoomEnd.x) {\n            ;[zoomStart.x, zoomEnd.x] = [zoomEnd.x, zoomStart.x]\n          }\n          if (zoomStart.y > zoomEnd.y) {\n            ;[zoomStart.y, zoomEnd.y] = [zoomEnd.y, zoomStart.y]\n          }\n\n          // The region defined by zoomStart and zoomEnd should be the new transform\n          let scale = Math.min(\n            (zoomEnd.x - zoomStart.x) / iw,\n            (zoomEnd.y - zoomStart.y) / ih\n          )\n          if (scale < 0.05) scale = 0.05\n          if (scale > 10) scale = 10\n\n          const newMat = getDefaultMat()\n            .translate(zoomStart.x, zoomStart.y)\n            .scaleU(scale)\n\n          changeMat(newMat.clone())\n        }\n\n        changeZoomStart(null)\n        changeZoomEnd(null)\n      }\n      if (\n        e.button === 1 ||\n        e.button === 2 ||\n        (e.button === 0 && dragWithPrimary)\n      )\n        return changeDragging(false)\n      if (e.button === 0) {\n        const { iw, ih } = layoutParams.current\n        onMouseUp({ x: projMouse.x / iw, y: projMouse.y / ih })\n      }\n    },\n    onWheel: (e) => {\n      const direction = e.deltaY > 0 ? 1 : e.deltaY < 0 ? -1 : 0\n      zoomIn(direction, mousePosition.current)\n    },\n    onContextMenu: (e) => {\n      e.preventDefault()\n    },\n  }\n  return { mouseEvents, mousePosition }\n}\n"]},"metadata":{},"sourceType":"module"}