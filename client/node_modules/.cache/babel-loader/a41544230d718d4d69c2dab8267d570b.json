{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Documents/GItHub/ML4GIS/client/src/pages/Home/Introduction/index.js\";\nimport React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport styles from \"../styles.js\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = theme => styles;\n\nclass Introduction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      opened: false,\n      error: null,\n      isLoaded: false // intro:null,\n\n    };\n    this.toggleBox = this.toggleBox.bind(this);\n    this.componentDidMount = this.componentDidMount(this);\n  }\n\n  // }\n  toggleBox() {\n    const opened = this.state.opened;\n    this.setState({\n      opened: !opened\n    });\n  } // componentDidMount()  {\n  //     function getIntro(data) {\n  //         const intro =data[\"introduction\"]\n  //         return intro\n  //\n  //     }\n  //\n  //     fetch(\"/api\",{ mode: 'cors'})\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 // const intro=getIntro(result[\"setup\"])\n  //                 this.setState({\n  //                     isLoaded: true,\n  //                     // intro:intro,\n  //                 });\n  //                 console.log(\"res is: \", result)\n  //             },\n  //             // Note: it's important to handle errors here\n  //             // instead of a catch() block so that we don't swallow\n  //             // exceptions from actual bugs in components.\n  //             (error) => {\n  //                 this.setState({\n  //                     isLoaded: true,\n  //                     error\n  //                 });\n  //             }\n  //         )\n  // };\n\n\n  render() {\n    const classes = this.props.classes;\n    var _this$props = this.props,\n        title = _this$props.title,\n        children = _this$props.children;\n    const _this$state = this.state,\n          opened = _this$state.opened,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          intro = _this$state.intro;\n\n    if (opened) {\n      title = 'Hide Tutorial';\n    } else {\n      title = 'Show Tutorial';\n    } // if (error) {\n    //     return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //     return <div>Loading...</div>;\n    // } else {\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.introContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      className: classes.jumbotron,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: classes.introTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"Task Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.introContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, this.props.intro), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      size: \"lg\",\n      onClick: this.toggleBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, title))))), opened && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"boxContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, children));\n  } // }\n\n\n}\n\nexport default withStyles(useStyles)(Introduction);","map":{"version":3,"sources":["/Users/yan/Documents/GItHub/ML4GIS/client/src/pages/Home/Introduction/index.js"],"names":["React","Component","Button","styles","Jumbotron","withStyles","useStyles","theme","Introduction","state","opened","error","isLoaded","toggleBox","bind","componentDidMount","setState","render","classes","props","title","children","intro","introContainer","jumbotron","introTitle","introContent","buttonTitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport styles from \"../styles.js\"\nimport {Jumbotron} from \"react-bootstrap\";\nimport {withStyles} from \"@material-ui/core/styles\";\nconst useStyles = theme => (styles)\nclass Introduction extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n       state = {\n            opened: false,\n            error: null,\n            isLoaded: false,\n            // intro:null,\n        };\n        // this.props = props;\n       toggleBox = this.toggleBox.bind(this);\n        componentDidMount=this.componentDidMount(this);\n\n    // }\n\n    toggleBox() {\n        const { opened } = this.state;\n        this.setState({\n            opened: !opened,\n        });\n    }\n\n    // componentDidMount()  {\n    //     function getIntro(data) {\n    //         const intro =data[\"introduction\"]\n    //         return intro\n    //\n    //     }\n    //\n    //     fetch(\"/api\",{ mode: 'cors'})\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 // const intro=getIntro(result[\"setup\"])\n    //                 this.setState({\n    //                     isLoaded: true,\n    //                     // intro:intro,\n    //                 });\n    //                 console.log(\"res is: \", result)\n    //             },\n    //             // Note: it's important to handle errors here\n    //             // instead of a catch() block so that we don't swallow\n    //             // exceptions from actual bugs in components.\n    //             (error) => {\n    //                 this.setState({\n    //                     isLoaded: true,\n    //                     error\n    //                 });\n    //             }\n    //         )\n    // };\n    render() {\n        const {classes} =this.props;\n\n        var { title, children } = this.props;\n        const { opened, error, isLoaded ,intro} = this.state;\n        if (opened){\n            title ='Hide Tutorial';\n        }else{\n            title ='Show Tutorial';\n        }\n        // if (error) {\n        //     return <div>Error: {error.message}</div>;\n        // } else if (!isLoaded) {\n        //     return <div>Loading...</div>;\n        // } else {\n            return (\n                <div>\n                    <div className={classes.introContainer}>\n                        <Jumbotron  className={classes.jumbotron}>\n                            <h1 className={classes.introTitle}>Task Overview</h1>\n                            <p className={classes.introContent}>\n                                { this.props.intro}\n                            </p>\n                            <p>\n                                <div className={classes.buttonTitle}>\n                                    <Button\n                                        variant=\"outline-primary\"\n                                        size=\"lg\"\n                                        onClick={this.toggleBox}>\n                                        {title}\n                                    </Button>\n                                </div>\n                            </p>\n                        </Jumbotron>\n                    </div>\n\n\n                    {opened && (\n\n                        <div class=\"boxContent\">\n                            {children}\n\n                        </div>\n                    )}\n                </div>\n            );\n        }\n    // }\n}\nexport default withStyles(useStyles)(Introduction)\n"]},"metadata":{},"sourceType":"module"}