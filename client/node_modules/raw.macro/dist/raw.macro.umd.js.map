{"version":3,"file":"raw.macro.umd.js","sources":["../src/macro.js"],"sourcesContent":["const path = require(\"path\");\nconst fs = require(\"fs\");\nconst { createMacro } = require(\"babel-plugin-macros\");\n\nexport default createMacro(rawMacros);\n\nfunction rawMacros({ references, state, babel }) {\n  references.default.forEach(referencePath => {\n    if (referencePath.parentPath.type === \"CallExpression\") {\n      requireRaw({ referencePath, state, babel });\n    } else {\n      throw new Error(\n        `This is not supported: \\`${referencePath\n          .findParent(babel.types.isExpression)\n          .getSource()}\\`. Please see the raw.macro documentation`,\n      );\n    }\n  });\n}\n\nfunction requireRaw({ referencePath, state, babel }) {\n  const filename = state.file.opts.filename;\n  const t = babel.types;\n  const callExpressionPath = referencePath.parentPath;\n  const dirname = path.dirname(filename);\n  let rawPath;\n\n  try {\n    rawPath = callExpressionPath.get(\"arguments\")[0].evaluate().value;\n  } catch (err) {\n    // swallow error, print better error below\n  }\n\n  if (rawPath === undefined) {\n    throw new Error(\n      `There was a problem evaluating the value of the argument for the code: ${callExpressionPath.getSource()}. ` +\n        `If the value is dynamic, please make sure that its value is statically deterministic.`,\n    );\n  }\n\n  const fullPath = require.resolve(rawPath, { paths: [dirname] });\n  const fileContent = fs.readFileSync(fullPath, { encoding: \"utf-8\" });\n\n  referencePath.parentPath.replaceWith(\n    t.expressionStatement(t.stringLiteral(fileContent)),\n  );\n}\n"],"names":["const","path","require","fs","createMacro","ref","default","forEach","referencePath","parentPath","type","Error","findParent","babel","types","isExpression","getSource","rawPath","t","callExpressionPath","dirname","file","opts","filename","get","evaluate","value","err","undefined","fullPath","resolve","paths","fileContent","readFileSync","encoding","replaceWith","expressionStatement","stringLiteral","requireRaw","state"],"mappings":"uKAAAA,IAAMC,EAAOC,QAAQ,QACfC,EAAKD,QAAQ,aAGJE,EAFSF,QAAQ,oCAIhC,SAAmBG,wCACNC,QAAQC,iBAAQC,GACzB,GAAsC,mBAAlCA,EAAcC,WAAWC,KAG3B,MAAM,IAAIC,iCACoBH,EACzBI,WAAWC,EAAMC,MAAMC,cACvBC,0DAMX,SAAoBX,OAKdY,oBAHEC,UAAUJ,MACVK,EAAqBX,EAAcC,WACnCW,EAAUnB,EAAKmB,gBAHEC,KAAKC,KAAKC,UAMjC,IACEN,EAAUE,EAAmBK,IAAI,aAAa,GAAGC,WAAWC,YACrDC,IAIT,QAAgBC,IAAZX,EACF,MAAM,IAAIN,MACR,0EAA0EQ,EAAmBH,uGAKjGhB,IAAM6B,EAAW3B,QAAQ4B,QAAQb,EAAS,CAAEc,MAAO,CAACX,KAC9CY,EAAc7B,EAAG8B,aAAaJ,EAAU,CAAEK,SAAU,UAE1D1B,EAAcC,WAAW0B,YACvBjB,EAAEkB,oBAAoBlB,EAAEmB,cAAcL,KAnCpCM,CAAW,eAAE9B,QAAe+B,QAAO1B"}